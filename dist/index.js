/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.jsx");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../openstad-component-nlmap/src/component/map.jsx":
/*!*********************************************************!*\
  !*** ../openstad-component-nlmap/src/component/map.jsx ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return OpenStadComponentNLMap; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"react-dom\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var openstad_component_src_index_jsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! openstad-component/src/index.jsx */ \"../openstad-component/src/index.jsx\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n\n'use strict';\n\nvar OpenStadComponentNLMap =\n/*#__PURE__*/\nfunction (_OpenStadComponent) {\n  _inherits(OpenStadComponentNLMap, _OpenStadComponent);\n\n  function OpenStadComponentNLMap(props) {\n    var _this;\n\n    _classCallCheck(this, OpenStadComponentNLMap);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OpenStadComponentNLMap).call(this, props));\n\n    var self = _assertThisInitialized(_this); // config\n\n\n    var defaultConfig = {\n      target: self.divId,\n      style: 'standaard',\n      marker: false,\n      search: false,\n      center: {\n        latitude: 52.37104644463586,\n        longitude: 4.900402911007405\n      },\n      zoom: 14,\n      zoomposition: 'bottomleft',\n      disableDefaultUI: true,\n      polygon: null,\n      autoZoomAndCenter: false // onQueryResult: self.onQueryHandler\n\n    };\n    self.config = Object.assign(defaultConfig, self.config || {}); // external css and script files\n\n    self._loadedFiles = 0;\n    self.files = [{\n      type: 'css',\n      href: \"https://unpkg.com/leaflet@1.0.3/dist/leaflet.css\"\n    }, {\n      type: 'script',\n      src: \"https://unpkg.com/leaflet@1.0.3/dist/leaflet.js\"\n    }];\n\n    switch (self.config.variant) {\n      case \"amaps\":\n        // self.files.push({ type: 'css', href: \"https://map.data.amsterdam.nl/dist/css/ams-map.css\"}); // in tegenstelling tot wat ze beloven overschrijft dit ook css buiten de map\n        self.files.push({\n          type: 'script',\n          src: \"https://map.data.amsterdam.nl/dist/amaps.iife.js\"\n        });\n        break;\n\n      default:\n        self.files.push({\n          type: 'css',\n          href: \"https://nlmaps.nl/dist/assets/css/nlmaps.css\"\n        });\n        self.files.push({\n          type: 'script',\n          src: \"https://nlmaps.nl/dist/nlmaps.iife.js\"\n        });\n    }\n\n    self.files.push({\n      type: 'css',\n      href: \"https://unpkg.com/leaflet.markercluster@1.4.1/dist/MarkerCluster.css\"\n    });\n    self.files.push({\n      type: 'script',\n      src: \"https://unpkg.com/leaflet.markercluster@1.4.1/dist/leaflet.markercluster.js\"\n    });\n    self.markers = self.config.markers || [];\n    return _this;\n  }\n\n  _createClass(OpenStadComponentNLMap, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount(prevProps, prevState) {\n      this.loadNextFile();\n    }\n  }, {\n    key: \"loadNextFile\",\n    value: function loadNextFile() {\n      var self = this;\n      var file = self.files[self._loadedFiles];\n\n      if (file) {\n        var element;\n\n        if (file.type === 'script') {\n          element = document.createElement('script');\n          element.src = file.src;\n          element.async = true;\n        }\n\n        if (file.type === 'css') {\n          element = document.createElement('link');\n          element.href = file.href;\n          element.rel = 'stylesheet';\n        }\n\n        if (element) {\n          element.onload = function () {\n            self.loadNextFile();\n          };\n\n          this.instance.appendChild(element);\n        }\n      }\n\n      if (self._loadedFiles == self.files.length) {\n        // loading script files is ready; create the map\n        self.createMap(); // dispatch an event\n\n        var event = new Event('mapIsReady');\n        self.mapIsReady = true;\n        self.instance.dispatchEvent(event);\n      }\n\n      self._loadedFiles++;\n    }\n  }, {\n    key: \"createMap\",\n    value: function createMap() {\n      var self = this; // init map\n\n      switch (self.config.variant) {\n        case \"amaps\":\n          self.map = amaps.createMap(self.config);\n          break;\n\n        default:\n          self.map = nlmaps.createMap(self.config);\n      } // clustering\n\n\n      if (self.config.clustering && self.config.clustering.isActive && L.markerClusterGroup) {\n        var iconCreateFunction = self.config.clustering.iconCreateFunction || self.createClusterIcon;\n        if (iconCreateFunction && typeof iconCreateFunction == 'string') iconCreateFunction = eval(iconCreateFunction);\n        self.markerClusterGroup = L.markerClusterGroup({\n          iconCreateFunction: iconCreateFunction,\n          showCoverageOnHover: self.config.clustering.showCoverageOnHover,\n          maxClusterRadius: self.config.clustering.maxClusterRadius || 80\n        });\n        var onClusterClick = self.config.clustering.onClusterClick || self.onClusterClick;\n        if (typeof onClusterClick == 'string') onClusterClick = eval(onClusterClick);\n        self.markerClusterGroup.on('clusterclick', onClusterClick);\n        var onClusterAnimationEnd = self.config.clustering.onClusterAnimationEnd || self.onClusterAnimationEnd;\n        if (typeof onClusterAnimationEnd == 'string') onClusterAnimationEnd = eval(onClusterAnimationEnd);\n        self.markerClusterGroup.on('animationend', onClusterAnimationEnd);\n        self.map.addLayer(self.markerClusterGroup);\n      } // on map click\n\n\n      if (self.config.onMapClick) {\n        if (typeof self.config.onMapClick == 'string') self.config.onMapClick = eval(self.config.onMapClick);\n      }\n\n      self.map.on('click', self.config.onMapClick || self.onMapClick); // add polygon\n\n      if (self.config.polygon) {\n        self.createCutoutPolygon(self.config.polygon);\n      } // add markers\n\n\n      if (self.markers.length) {\n        self.markers.forEach(function (marker) {\n          self.addMarker(marker);\n        });\n      } // set bounds and center\n\n\n      if (self.config.autoZoomAndCenter) {\n        var centerOn = self.config.autoZoomAndCenter == 'polygon' && self.config.polygon || self.markers && self.markers.length && self.markers;\n\n        if (self.editorMarker) {\n          if (self.editorMarker.position) {\n            centerOn = [self.editorMarker];\n          } else {\n            centerOn = self.config.polygon;\n          }\n        }\n\n        if (centerOn) {\n          self.setBoundsAndCenter(centerOn);\n        }\n      }\n    }\n  }, {\n    key: \"addMarkers\",\n    value: function addMarkers(markerData) {\n      var self = this;\n      markerData.forEach(function (marker) {\n        self.addMarker(marker);\n      });\n    }\n  }, {\n    key: \"addMarker\",\n    value: function addMarker(markerData) {\n      var self = this;\n      var icon = markerData.icon;\n\n      if (!icon) {\n        var iconCreateFunction = self.config.iconCreateFunction;\n\n        if (iconCreateFunction && typeof iconCreateFunction == 'string') {\n          iconCreateFunction = eval(iconCreateFunction);\n          icon = iconCreateFunction();\n        }\n      }\n\n      var marker;\n\n      if (icon) {\n        marker = L.marker([markerData.lat, markerData.lng], {\n          icon: icon\n        });\n      } else {\n        marker = L.marker([markerData.lat, markerData.lng]);\n      }\n\n      marker.visible = true;\n      marker.data = markerData.data;\n      marker.doNotCluster = markerData.doNotCluster;\n\n      if (markerData.href) {\n        markerData.onClick = function () {\n          document.location.href = markerData.href;\n        };\n      }\n\n      var onClick = markerData.onClick != null && markerData.onClick || self.config.onMarkerClick || self.onMarkerClick;\n\n      if (onClick) {\n        if (typeof onClick == 'string') onClick = eval(onClick);\n        marker.on('click', onClick);\n      }\n\n      if (self.markerClusterGroup && !markerData.doNotCluster) {\n        self.markerClusterGroup.addLayer(marker);\n      } else {\n        self.map.addLayer(marker);\n      }\n\n      self.markers.push(marker);\n      return marker;\n    }\n  }, {\n    key: \"removeMarker\",\n    value: function removeMarker(marker) {\n      this.map.removeLayer(marker);\n    }\n  }, {\n    key: \"updateMarker\",\n    value: function updateMarker(marker, newData) {\n      if (newData.location) {\n        var newLatLng = new L.LatLng(newData.location.lat, newData.location.lng);\n        marker.setLatLng(newLatLng);\n      }\n    }\n  }, {\n    key: \"createClusterIcon\",\n    value: function createClusterIcon(cluster) {\n      var count = cluster.getChildCount();\n      return L.divIcon({\n        html: count,\n        className: '',\n        iconSize: L.point(20, 20),\n        iconAnchor: [20, 10]\n      });\n    }\n  }, {\n    key: \"createCutoutPolygon\",\n    value: function createCutoutPolygon(polygon) {\n      var self = this; // polygon must defined from the south west corner to work with the outer box\n\n      var bounds = L.polygon(polygon).getBounds();\n      var center = bounds.getCenter();\n      var smallest = 0;\n      var index = 0;\n      polygon.forEach(function (point, i) {\n        var y = Math.sin(point.lng - center.lng) * Math.cos(point.lat);\n        var x = Math.cos(center.lat) * Math.sin(point.lat) - Math.sin(center.lat) * Math.cos(point.lat) * Math.cos(point.lng - center.lng);\n        var bearing = Math.atan2(y, x) * 180 / Math.PI;\n\n        if (45 - bearing < smallest) {\n          smallest = 45 - bearing;\n          index = i;\n        }\n      });\n      var a = polygon.slice(0, index - 1);\n      var b = polygon.slice(index, polygon.length - 1);\n      polygon = b.concat(a); // outer box\n      // TODO: should be calculated dynamically from the center point\n\n      var delta1 = 0.01;\n      var delta2 = 5;\n      var outerBox = [{\n        lat: -90 + delta2,\n        lng: -180 + delta1\n      }, {\n        lat: -90 + delta2,\n        lng: 0\n      }, {\n        lat: -90 + delta2,\n        lng: 180 - delta1\n      }, {\n        lat: 0,\n        lng: 180 - delta1\n      }, {\n        lat: 90 - delta2,\n        lng: 180 - delta1\n      }, {\n        lat: 90 - delta2,\n        lng: 0\n      }, {\n        lat: 90 - delta2,\n        lng: -180 + delta1\n      }, {\n        lat: 90 - delta2,\n        lng: -180 + delta1\n      }, {\n        lat: 0,\n        lng: -180 + delta1\n      }]; // polygon style\n\n      var polygonStyle = Object.assign({\n        \"color\": \"#d00\",\n        \"fillColor\": \"#000\",\n        \"fillOpacity\": 0.15\n      }, self.config.polygonStyle);\n      var result = L.polygon([outerBox, polygon], polygonStyle);\n      self.map.addLayer(result);\n      return result;\n    }\n  }, {\n    key: \"removePolygon\",\n    value: function removePolygon(polygon) {\n      var self = this;\n\n      if (polygon) {\n        self.map.removeLayer(polygon);\n      }\n    }\n  }, {\n    key: \"setBoundsAndCenter\",\n    value: function setBoundsAndCenter(points) {\n      var self = this;\n      points = points || [];\n      var poly = [];\n      points.forEach(function (point) {\n        if (point._latlng) {\n          point = point._latlng;\n        }\n\n        if (point.position) {\n          point = point.position.coordinates ? {\n            lat: point.position.coordinates[0],\n            lng: point.position.coordinates[1]\n          } : point.position;\n        }\n\n        poly.push(point);\n      });\n      points.forEach(function (point) {\n        poly.push(point);\n      });\n      var bounds = L.latLngBounds(poly);\n      self.map.fitBounds(bounds);\n      var zoom = parseInt(self.map.getZoom());\n    }\n  }, {\n    key: \"showMarker\",\n    value: function showMarker(marker) {\n      var self = this;\n      marker.visible = true;\n\n      if (self.markerClusterGroup && !marker.doNotCluster) {\n        self.markerClusterGroup.addLayer(marker);\n      } else {\n        marker.addTo(self.map);\n      }\n    }\n  }, {\n    key: \"hideMarker\",\n    value: function hideMarker(marker) {\n      var self = this;\n      marker.visible = false;\n\n      if (self.markerClusterGroup && !marker.doNotCluster) {\n        self.markerClusterGroup.removeLayer(marker);\n      } else {\n        marker.remove(self.map);\n      }\n    }\n  }, {\n    key: \"setFilter\",\n    value: function setFilter(filterFuntion) {\n      var self = this;\n      self.filterFunction = filterFuntion;\n      self.applyFilter();\n    }\n  }, {\n    key: \"applyFilter\",\n    value: function applyFilter() {\n      var self = this;\n\n      if (self.filterFunction) {\n        self.markers.forEach(function (marker) {\n          if (self.filterFunction(marker)) {\n            self.showMarker(marker);\n          } else {\n            self.hideMarker(marker);\n          }\n        });\n      } else {\n        self.markers.forEach(function (marker) {\n          self.showMarker(marker);\n        });\n      }\n    }\n  }, {\n    key: \"onMapClick\",\n    value: function onMapClick() {// placeholder\n    }\n  }, {\n    key: \"onMarkerClick\",\n    value: function onMarkerClick() {// placeholder\n    }\n  }, {\n    key: \"onClusterClick\",\n    value: function onClusterClick() {// placeholder\n    }\n  }, {\n    key: \"onClusterAnimationEnd\",\n    value: function onClusterAnimationEnd() {// placeholder\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        id: this.divId,\n        className: this.props.className || 'openstad-component-nlmap',\n        ref: function ref(el) {\n          return _this2.instance = el;\n        }\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        id: this.divId + '-map'\n      }));\n    }\n  }]);\n\n  return OpenStadComponentNLMap;\n}(openstad_component_src_index_jsx__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../openstad-component-nlmap/src/component/map.jsx\n");

/***/ }),

/***/ "../openstad-component/src/index.jsx":
/*!*******************************************!*\
  !*** ../openstad-component/src/index.jsx ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return OpenStadComponent; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n'use strict';\n\nvar OpenStadComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(OpenStadComponent, _React$Component);\n\n  function OpenStadComponent(props) {\n    var _this;\n\n    _classCallCheck(this, OpenStadComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OpenStadComponent).call(this, props));\n\n    var self = _assertThisInitialized(_this);\n\n    if (props.attributes) {\n      Object.keys(props.attributes).forEach(function (key) {\n        var attribute = props.attributes[key];\n        self[attribute.name] = attribute.value;\n      });\n    }\n\n    self.config = self.config || props.config;\n\n    if (self.config) {\n      try {\n        self.config = JSON.parse(self.config);\n      } catch (err) {}\n    }\n\n    self.divId = self.divId || self.config && self.config.divId || props.id || \"openstad-component-\".concat(parseInt(100000000 * Math.random()));\n    window[self.divId] = _assertThisInitialized(_this);\n    return _this;\n  }\n\n  _createClass(OpenStadComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount(prevProps, prevState) {\n      var event = new Event('isReady');\n      self.isReady = true;\n      self.instance.dispatchEvent(event);\n    }\n  }]);\n\n  return OpenStadComponent;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vb3BlbnN0YWQtY29tcG9uZW50L3NyYy9pbmRleC5qc3g/NjMyOCJdLCJuYW1lcyI6WyJPcGVuU3RhZENvbXBvbmVudCIsInByb3BzIiwic2VsZiIsImF0dHJpYnV0ZXMiLCJPYmplY3QiLCJrZXlzIiwiZm9yRWFjaCIsImtleSIsImF0dHJpYnV0ZSIsIm5hbWUiLCJ2YWx1ZSIsImNvbmZpZyIsIkpTT04iLCJwYXJzZSIsImVyciIsImRpdklkIiwiaWQiLCJwYXJzZUludCIsIk1hdGgiLCJyYW5kb20iLCJ3aW5kb3ciLCJwcmV2UHJvcHMiLCJwcmV2U3RhdGUiLCJldmVudCIsIkV2ZW50IiwiaXNSZWFkeSIsImluc3RhbmNlIiwiZGlzcGF0Y2hFdmVudCIsIlJlYWN0IiwiQ29tcG9uZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFFQTs7SUFFcUJBLGlCOzs7OztBQUVuQiw2QkFBWUMsS0FBWixFQUFtQjtBQUFBOztBQUFBOztBQUVqQiwyRkFBTUEsS0FBTjs7QUFFQSxRQUFJQyxJQUFJLGdDQUFSOztBQUVBLFFBQUlELEtBQUssQ0FBQ0UsVUFBVixFQUFzQjtBQUNwQkMsWUFBTSxDQUFDQyxJQUFQLENBQVlKLEtBQUssQ0FBQ0UsVUFBbEIsRUFBOEJHLE9BQTlCLENBQXNDLFVBQUNDLEdBQUQsRUFBUztBQUM3QyxZQUFJQyxTQUFTLEdBQUdQLEtBQUssQ0FBQ0UsVUFBTixDQUFpQkksR0FBakIsQ0FBaEI7QUFDQUwsWUFBSSxDQUFDTSxTQUFTLENBQUNDLElBQVgsQ0FBSixHQUF1QkQsU0FBUyxDQUFDRSxLQUFqQztBQUNELE9BSEQ7QUFJRDs7QUFFRFIsUUFBSSxDQUFDUyxNQUFMLEdBQWNULElBQUksQ0FBQ1MsTUFBTCxJQUFlVixLQUFLLENBQUNVLE1BQW5DOztBQUVBLFFBQUlULElBQUksQ0FBQ1MsTUFBVCxFQUFpQjtBQUNmLFVBQUk7QUFDRlQsWUFBSSxDQUFDUyxNQUFMLEdBQWNDLElBQUksQ0FBQ0MsS0FBTCxDQUFXWCxJQUFJLENBQUNTLE1BQWhCLENBQWQ7QUFDRCxPQUZELENBRUUsT0FBT0csR0FBUCxFQUFZLENBQUU7QUFDakI7O0FBRURaLFFBQUksQ0FBQ2EsS0FBTCxHQUFhYixJQUFJLENBQUNhLEtBQUwsSUFBZ0JiLElBQUksQ0FBQ1MsTUFBTCxJQUFlVCxJQUFJLENBQUNTLE1BQUwsQ0FBWUksS0FBM0MsSUFBc0RkLEtBQUssQ0FBQ2UsRUFBNUQsaUNBQTBGQyxRQUFRLENBQUUsWUFBWUMsSUFBSSxDQUFDQyxNQUFMLEVBQWQsQ0FBbEcsQ0FBYjtBQUVBQyxVQUFNLENBQUNsQixJQUFJLENBQUNhLEtBQU4sQ0FBTjtBQXZCaUI7QUF5QmxCOzs7O3NDQUVpQk0sUyxFQUFXQyxTLEVBQVc7QUFDdEMsVUFBSUMsS0FBSyxHQUFHLElBQUlDLEtBQUosQ0FBVSxTQUFWLENBQVo7QUFDQXRCLFVBQUksQ0FBQ3VCLE9BQUwsR0FBZSxJQUFmO0FBQ0F2QixVQUFJLENBQUN3QixRQUFMLENBQWNDLGFBQWQsQ0FBNEJKLEtBQTVCO0FBQ0Q7Ozs7RUFqQzRDSyw0Q0FBSyxDQUFDQyxTIiwiZmlsZSI6Ii4uL29wZW5zdGFkLWNvbXBvbmVudC9zcmMvaW5kZXguanN4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBPcGVuU3RhZENvbXBvbmVudCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG5cbiAgY29uc3RydWN0b3IocHJvcHMpIHtcblxuICAgIHN1cGVyKHByb3BzKTtcblxuICAgIGxldCBzZWxmID0gdGhpcztcblxuICAgIGlmIChwcm9wcy5hdHRyaWJ1dGVzKSB7XG4gICAgICBPYmplY3Qua2V5cyhwcm9wcy5hdHRyaWJ1dGVzKS5mb3JFYWNoKChrZXkpID0+IHtcbiAgICAgICAgbGV0IGF0dHJpYnV0ZSA9IHByb3BzLmF0dHJpYnV0ZXNba2V5XTtcbiAgICAgICAgc2VsZlthdHRyaWJ1dGUubmFtZV0gPSBhdHRyaWJ1dGUudmFsdWU7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBzZWxmLmNvbmZpZyA9IHNlbGYuY29uZmlnIHx8IHByb3BzLmNvbmZpZztcblxuICAgIGlmIChzZWxmLmNvbmZpZykge1xuICAgICAgdHJ5IHtcbiAgICAgICAgc2VsZi5jb25maWcgPSBKU09OLnBhcnNlKHNlbGYuY29uZmlnKTtcbiAgICAgIH0gY2F0Y2ggKGVycikge31cbiAgICB9XG5cbiAgICBzZWxmLmRpdklkID0gc2VsZi5kaXZJZCB8fCAoIHNlbGYuY29uZmlnICYmIHNlbGYuY29uZmlnLmRpdklkICkgfHwgcHJvcHMuaWQgfHwgYG9wZW5zdGFkLWNvbXBvbmVudC0keyAgcGFyc2VJbnQoIDEwMDAwMDAwMCAqIE1hdGgucmFuZG9tKCkgKX1gO1xuICAgIFxuICAgIHdpbmRvd1tzZWxmLmRpdklkXSA9IHRoaXM7XG5cbiAgfVxuXG4gIGNvbXBvbmVudERpZE1vdW50KHByZXZQcm9wcywgcHJldlN0YXRlKSB7XG4gICAgbGV0IGV2ZW50ID0gbmV3IEV2ZW50KCdpc1JlYWR5Jyk7XG4gICAgc2VsZi5pc1JlYWR5ID0gdHJ1ZTtcbiAgICBzZWxmLmluc3RhbmNlLmRpc3BhdGNoRXZlbnQoZXZlbnQpO1xuICB9XG5cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../openstad-component/src/index.jsx\n");

/***/ }),

/***/ "./src/component/filterbar.jsx":
/*!*************************************!*\
  !*** ./src/component/filterbar.jsx ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Filterbar; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _search_jsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./search.jsx */ \"./src/component/search.jsx\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n'use strict';\n\nvar Filterbar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Filterbar, _React$Component);\n\n  function Filterbar(props) {\n    var _this;\n\n    _classCallCheck(this, Filterbar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Filterbar).call(this, props));\n    var defaultConfig = {\n      types: props.config && props.config.types || [],\n      areas: props.config && props.config.areas || []\n    };\n    _this.config = Object.assign(defaultConfig, _this.props.config || {});\n    _this.state = {\n      selectedType: undefined,\n      types: _this.config.types,\n      selectedArea: undefined,\n      areas: _this.config.areas\n    };\n    return _this;\n  }\n\n  _createClass(Filterbar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount(prevProps, prevState) {}\n  }, {\n    key: \"handleTypeChange\",\n    value: function handleTypeChange(value) {\n      this.setState(_objectSpread({}, this.state, {\n        selectedType: value\n      })); // dispatch an event\n\n      var event = new CustomEvent('typeFilterUpdate', {\n        detail: {\n          value: value\n        }\n      });\n      this.instance.dispatchEvent(event);\n    }\n  }, {\n    key: \"setAreaValue\",\n    value: function setAreaValue(value) {\n      this.setState(_objectSpread({}, this.state, {\n        selectedArea: value\n      }));\n    }\n  }, {\n    key: \"handleAreaChange\",\n    value: function handleAreaChange(value) {\n      this.setState(_objectSpread({}, this.state, {\n        selectedArea: value\n      })); // dispatch an event\n\n      var event = new CustomEvent('areaFilterUpdate', {\n        detail: {\n          value: this.state.areas.find(function (area) {\n            return value == area.value;\n          })\n        }\n      });\n      this.instance.dispatchEvent(event);\n    }\n  }, {\n    key: \"resetTypeAndArea\",\n    value: function resetTypeAndArea() {\n      this.handleTypeChange(0);\n      this.handleAreaChange(0);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var self = this;\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        id: self.id,\n        className: self.props.className || 'openstad-component-filterbar',\n        ref: function ref(el) {\n          return self.instance = el;\n        }\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_search_jsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n        config: _objectSpread({}, this.config),\n        ref: function ref(el) {\n          return self.search = el;\n        }\n      }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"openstad-align-right-container\"\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"select\", {\n        value: self.state.selectedType,\n        onChange: function onChange() {\n          return self.handleTypeChange(self.typeSelector.value);\n        },\n        className: \"openstad-default-select openstad-margin-right\",\n        ref: function ref(el) {\n          return self.typeSelector = el;\n        }\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"option\", {\n        value: \"0\"\n      }, \"Alle thema's\"), \";\", self.state.types.map(function (type, i) {\n        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"option\", {\n          style: {\n            color: type.color\n          },\n          key: 'type-option-' + i\n        }, type.name);\n      })), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"select\", {\n        value: self.state.selectedArea,\n        onChange: function onChange() {\n          return self.handleAreaChange(self.areaSelector.value);\n        },\n        className: \"openstad-default-select openstad-margin-right\",\n        ref: function ref(el) {\n          return self.areaSelector = el;\n        }\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"option\", {\n        value: \"0\"\n      }, \"Geen gebied geselecteerd\"), \";\", self.state.areas.map(function (area, i) {\n        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"option\", {\n          style: {\n            color: area.color\n          },\n          value: area.value,\n          key: 'type-option-' + i\n        }, area.name);\n      })), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"button\", {\n        value: \"reset\",\n        onClick: function onClick() {\n          return self.resetTypeAndArea();\n        },\n        className: \"openstad-button\",\n        ref: function ref(el) {\n          return self.resetButton = el;\n        }\n      }, \"Alles tonen\")));\n    }\n  }]);\n\n  return Filterbar;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/component/filterbar.jsx\n");

/***/ }),

/***/ "./src/component/ideas-list.jsx":
/*!**************************************!*\
  !*** ./src/component/ideas-list.jsx ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return IdeasList; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n'use strict';\n\nvar IdeasList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(IdeasList, _React$Component);\n\n  function IdeasList(props) {\n    var _this;\n\n    _classCallCheck(this, IdeasList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(IdeasList).call(this, props)); // config\n\n    var defaultConfig = {\n      titleField: 'title',\n      summaryField: 'summary',\n      sortOptions: [{\n        value: 'random',\n        name: 'Random'\n      }, {\n        value: 'ranking',\n        name: 'Ranking'\n      }, {\n        value: 'newest',\n        name: 'Nieuwste eerst'\n      }, {\n        value: 'oldest',\n        name: 'Oudste eerst'\n      }, {\n        value: 'distance',\n        name: 'Afstand'\n      }],\n      showSortButton: true,\n      defaultSortOrder: 'newest'\n    };\n    _this.config = Object.assign(defaultConfig, _this.props.config || {});\n    _this.config.onIdeaClick = _this.config.onIdeaClick || _this.onIdeaClick.bind(_assertThisInitialized(_this));\n    _this.state = {\n      currentSortOrder: _this.config.defaultSortOrder,\n      ideas: _this.props.ideas || [],\n      showSortButton: _this.config.showSortButton\n    };\n    return _this;\n  }\n\n  _createClass(IdeasList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount(prevProps, prevState) {}\n  }, {\n    key: \"updateIdeas\",\n    value: function updateIdeas(_ref) {\n      var _ref$ideas = _ref.ideas,\n          ideas = _ref$ideas === void 0 ? this.state.ideas : _ref$ideas,\n          _ref$sortOrder = _ref.sortOrder,\n          sortOrder = _ref$sortOrder === void 0 ? this.state.currentSortOrder : _ref$sortOrder,\n          _ref$showSortButton = _ref.showSortButton,\n          showSortButton = _ref$showSortButton === void 0 ? this.state.showSortButton : _ref$showSortButton,\n          _ref$center = _ref.center,\n          center = _ref$center === void 0 ? {\n        lat: 52.37104644463586,\n        lng: 4.900402911007405\n      } : _ref$center,\n          maxLength = _ref.maxLength;\n      var self = this;\n\n      var state = _objectSpread({}, self.state);\n\n      switch (sortOrder) {\n        case 'ranking':\n          ideas = ideas.sort(function (a, b) {\n            return a.ranking - a.ranking;\n          });\n          break;\n\n        case 'newest':\n          ideas = ideas.sort(function (a, b) {\n            return new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime();\n          });\n          break;\n\n        case 'oldest':\n          ideas = ideas.sort(function (a, b) {\n            return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();\n          });\n          break;\n\n        case 'distance':\n          ideas = ideas.map(function (idea) {\n            idea._distance = Math.sqrt(Math.pow(idea.location.coordinates[0] - center.lat, 2) + Math.pow(idea.location.coordinates[1] - center.lng, 2));\n            return idea;\n          }).sort(function (a, b) {\n            return a._distance - b._distance;\n          });\n          break;\n\n        case 'random':\n        default:\n          ideas = ideas.sort(function (a, b) {\n            return Math.random() - 0.5;\n          });\n          break;\n      }\n\n      state.ideas = maxLength ? ideas.slice(0, maxLength) : ideas;\n      state.showSortButton = showSortButton;\n      self.setState(state);\n    }\n  }, {\n    key: \"setSortOrder\",\n    value: function setSortOrder(_ref2) {\n      var sortOrder = _ref2.sortOrder;\n      this.setState(_objectSpread({}, this.state, {\n        currentSortOrder: sortOrder\n      }), function () {\n        this.updateIdeas({\n          sortOrder: sortOrder\n        });\n      });\n    }\n  }, {\n    key: \"onIdeaClick\",\n    value: function onIdeaClick(e) {// placeholder\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var self = this;\n      var sortSelector = null;\n\n      if (this.state.showSortButton) {\n        sortSelector = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"openstad-align-right-container openstad-margin-right\"\n        }, \"Sorteer op:\\xA0\\xA0\\xA0\\xA0\", react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"select\", {\n          value: self.state.currentSortOrder,\n          onChange: function onChange() {\n            return self.setSortOrder({\n              sortOrder: self.sortSelector.value\n            });\n          },\n          className: \"openstad-default-select\",\n          ref: function ref(el) {\n            return self.sortSelector = el;\n          }\n        }, self.config.sortOptions.map(function (option, i) {\n          return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"option\", {\n            value: option.value,\n            key: 'sort-option-' + i\n          }, option.name);\n        })));\n      }\n\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        id: self.id,\n        className: self.props.className || 'openstad-component-info-block-ideas-list',\n        ref: function ref(el) {\n          return self.instance = el;\n        }\n      }, sortSelector, self.state.ideas.map(function (idea, i) {\n        if (!idea) {\n          console.log('idea is undef', i, self.state.ideas);\n        }\n\n        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"openstad-component-info-block-ideas-list-idea\",\n          onClick: function onClick() {\n            return self.config.onIdeaClick(idea);\n          },\n          key: 'info-block-' + i\n        }, eval(\"idea.\".concat(self.config.titleField)), \"(\", idea.id, \")\", react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"br\", null), eval(\"idea.\".concat(self.config.summaryField)), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"br\", null), idea._distance, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"br\", null));\n      }));\n    }\n  }]);\n\n  return IdeasList;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/component/ideas-list.jsx\n");

/***/ }),

/***/ "./src/component/ideas-on-map.jsx":
/*!****************************************!*\
  !*** ./src/component/ideas-on-map.jsx ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return OpenStadComponentIdeasOnMap; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"react-dom\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var openstad_component_src_index_jsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! openstad-component/src/index.jsx */ \"../openstad-component/src/index.jsx\");\n/* harmony import */ var _filterbar_jsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./filterbar.jsx */ \"./src/component/filterbar.jsx\");\n/* harmony import */ var _info_block_jsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./info-block.jsx */ \"./src/component/info-block.jsx\");\n/* harmony import */ var _map_jsx__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./map.jsx */ \"./src/component/map.jsx\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n\n\n\n\n'use strict';\n\nvar OpenStadComponentIdeasOnMap =\n/*#__PURE__*/\nfunction (_OpenStadComponent) {\n  _inherits(OpenStadComponentIdeasOnMap, _OpenStadComponent);\n\n  function OpenStadComponentIdeasOnMap(props) {\n    var _this;\n\n    _classCallCheck(this, OpenStadComponentIdeasOnMap);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OpenStadComponentIdeasOnMap).call(this, props));\n\n    var self = _assertThisInitialized(_this); // config\n\n\n    self.defaultConfig = {\n      title: 'Kansen en knelpunten' || false,\n      editMarker: undefined,\n      currentPolygon: undefined,\n      types: [{\n        name: \"Volle afvalcontainer\",\n        color: \"#FF9100\",\n        icon: \"\"\n      }, {\n        name: \"Defecte afvalcontainer\",\n        color: \"#00A03C\",\n        icon: \"\"\n      }, {\n        name: \"Afval naast afvalcontainer\",\n        color: \"#00A03C\",\n        icon: \"\"\n      }, {\n        name: \"Afval op straat\",\n        color: \"#004699\",\n        icon: \"\"\n      }, {\n        name: \"Overig\",\n        color: \"#00A03C\",\n        icon: \"\"\n      }],\n      areas: [{\n        name: \"Heel West\",\n        value: \"Heel West\",\n        polygon: [{\n          \"lng\": 4.8353454,\n          \"lat\": 52.3731265\n        }, {\n          \"lng\": 4.8422025,\n          \"lat\": 52.3721002\n        }, {\n          \"lng\": 4.8421761,\n          \"lat\": 52.3695836\n        }, {\n          \"lng\": 4.8455807,\n          \"lat\": 52.3696369\n        }, {\n          \"lng\": 4.8476385,\n          \"lat\": 52.369853\n        }, {\n          \"lng\": 4.8477361,\n          \"lat\": 52.3695885\n        }, {\n          \"lng\": 4.8484176,\n          \"lat\": 52.369697\n        }, {\n          \"lng\": 4.8504835,\n          \"lat\": 52.3653302\n        }, {\n          \"lng\": 4.8504956,\n          \"lat\": 52.3643692\n        }, {\n          \"lng\": 4.8501587,\n          \"lat\": 52.3638376\n        }, {\n          \"lng\": 4.8494487,\n          \"lat\": 52.3633001\n        }, {\n          \"lng\": 4.8495059,\n          \"lat\": 52.3610989\n        }, {\n          \"lng\": 4.8489152,\n          \"lat\": 52.3608149\n        }, {\n          \"lng\": 4.8487824,\n          \"lat\": 52.3578658\n        }, {\n          \"lng\": 4.8504012,\n          \"lat\": 52.3578553\n        }, {\n          \"lng\": 4.8518982,\n          \"lat\": 52.357844\n        }, {\n          \"lng\": 4.8538275,\n          \"lat\": 52.3581295\n        }, {\n          \"lng\": 4.854723,\n          \"lat\": 52.3578629\n        }, {\n          \"lng\": 4.854635,\n          \"lat\": 52.3577532\n        }, {\n          \"lng\": 4.85436,\n          \"lat\": 52.3572975\n        }, {\n          \"lng\": 4.8540881,\n          \"lat\": 52.3564026\n        }, {\n          \"lng\": 4.8547969,\n          \"lat\": 52.3562758\n        }, {\n          \"lng\": 4.8698903,\n          \"lat\": 52.3601067\n        }, {\n          \"lng\": 4.8699397,\n          \"lat\": 52.3600231\n        }, {\n          \"lng\": 4.8714122,\n          \"lat\": 52.3603737\n        }, {\n          \"lng\": 4.8712647,\n          \"lat\": 52.3605634\n        }, {\n          \"lng\": 4.8715288,\n          \"lat\": 52.3605997\n        }, {\n          \"lng\": 4.8716826,\n          \"lat\": 52.3604277\n        }, {\n          \"lng\": 4.8738605,\n          \"lat\": 52.3608533\n        }, {\n          \"lng\": 4.8738525,\n          \"lat\": 52.3610213\n        }, {\n          \"lng\": 4.8740097,\n          \"lat\": 52.3610407\n        }, {\n          \"lng\": 4.8741351,\n          \"lat\": 52.3608935\n        }, {\n          \"lng\": 4.8750611,\n          \"lat\": 52.3608041\n        }, {\n          \"lng\": 4.8756501,\n          \"lat\": 52.3606138\n        }, {\n          \"lng\": 4.876429,\n          \"lat\": 52.3607996\n        }, {\n          \"lng\": 4.8765642,\n          \"lat\": 52.3606177\n        }, {\n          \"lng\": 4.876929,\n          \"lat\": 52.3606957\n        }, {\n          \"lng\": 4.8768495,\n          \"lat\": 52.360911\n        }, {\n          \"lng\": 4.8771709,\n          \"lat\": 52.3609696\n        }, {\n          \"lng\": 4.8774,\n          \"lat\": 52.3607583\n        }, {\n          \"lng\": 4.8819952,\n          \"lat\": 52.3620427\n        }, {\n          \"lng\": 4.8813956,\n          \"lat\": 52.3630818\n        }, {\n          \"lng\": 4.8808146,\n          \"lat\": 52.3634904\n        }, {\n          \"lng\": 4.8793708,\n          \"lat\": 52.3643261\n        }, {\n          \"lng\": 4.8792691,\n          \"lat\": 52.3649574\n        }, {\n          \"lng\": 4.8787082,\n          \"lat\": 52.3658206\n        }, {\n          \"lng\": 4.8775395,\n          \"lat\": 52.3667815\n        }, {\n          \"lng\": 4.8767523,\n          \"lat\": 52.3685117\n        }, {\n          \"lng\": 4.8754901,\n          \"lat\": 52.3697867\n        }, {\n          \"lng\": 4.8745065,\n          \"lat\": 52.3718772\n        }, {\n          \"lng\": 4.8745782,\n          \"lat\": 52.3725454\n        }, {\n          \"lng\": 4.8753796,\n          \"lat\": 52.373407\n        }, {\n          \"lng\": 4.8755899,\n          \"lat\": 52.3743025\n        }, {\n          \"lng\": 4.8799131,\n          \"lat\": 52.3813052\n        }, {\n          \"lng\": 4.8796339,\n          \"lat\": 52.3819128\n        }, {\n          \"lng\": 4.880478,\n          \"lat\": 52.3822531\n        }, {\n          \"lng\": 4.8818058,\n          \"lat\": 52.3843528\n        }, {\n          \"lng\": 4.882637,\n          \"lat\": 52.3854107\n        }, {\n          \"lng\": 4.8846503,\n          \"lat\": 52.3883466\n        }, {\n          \"lng\": 4.8857963,\n          \"lat\": 52.3881476\n        }, {\n          \"lng\": 4.8911796,\n          \"lat\": 52.3884502\n        }, {\n          \"lng\": 4.8937804,\n          \"lat\": 52.3886712\n        }, {\n          \"lng\": 4.8956658,\n          \"lat\": 52.3888313\n        }, {\n          \"lng\": 4.8927982,\n          \"lat\": 52.3933453\n        }, {\n          \"lng\": 4.8850924,\n          \"lat\": 52.398824\n        }, {\n          \"lng\": 4.8762366,\n          \"lat\": 52.3945287\n        }, {\n          \"lng\": 4.8726422,\n          \"lat\": 52.3948206\n        }, {\n          \"lng\": 4.8719896,\n          \"lat\": 52.3947192\n        }, {\n          \"lng\": 4.8719508,\n          \"lat\": 52.3952766\n        }, {\n          \"lng\": 4.8715979,\n          \"lat\": 52.39538\n        }, {\n          \"lng\": 4.8667403,\n          \"lat\": 52.393136\n        }, {\n          \"lng\": 4.8643092,\n          \"lat\": 52.3927072\n        }, {\n          \"lng\": 4.8627057,\n          \"lat\": 52.3938521\n        }, {\n          \"lng\": 4.8603441,\n          \"lat\": 52.3949382\n        }, {\n          \"lng\": 4.858593,\n          \"lat\": 52.3952782\n        }, {\n          \"lng\": 4.8569204,\n          \"lat\": 52.3953667\n        }, {\n          \"lng\": 4.8569896,\n          \"lat\": 52.3938363\n        }, {\n          \"lng\": 4.8573172,\n          \"lat\": 52.3938424\n        }, {\n          \"lng\": 4.8574043,\n          \"lat\": 52.3920751\n        }, {\n          \"lng\": 4.8589526,\n          \"lat\": 52.3912226\n        }, {\n          \"lng\": 4.8592744,\n          \"lat\": 52.3905434\n        }, {\n          \"lng\": 4.8592929,\n          \"lat\": 52.3887899\n        }, {\n          \"lng\": 4.8449045,\n          \"lat\": 52.3887733\n        }, {\n          \"lng\": 4.8451066,\n          \"lat\": 52.3850658\n        }, {\n          \"lng\": 4.8446526,\n          \"lat\": 52.3850638\n        }, {\n          \"lng\": 4.8390117,\n          \"lat\": 52.3850241\n        }, {\n          \"lng\": 4.8392807,\n          \"lat\": 52.3829687\n        }, {\n          \"lng\": 4.838548,\n          \"lat\": 52.3808766\n        }, {\n          \"lng\": 4.836707,\n          \"lat\": 52.3763581\n        }, {\n          \"lng\": 4.8353454,\n          \"lat\": 52.3731265\n        }]\n      }, {\n        name: \"De Baarsjes\",\n        value: \"De Baarsjes\",\n        polygon: [{\n          \"lng\": 4.8558724,\n          \"lat\": 52.374202\n        }, {\n          \"lng\": 4.8577714,\n          \"lat\": 52.3681953\n        }, {\n          \"lng\": 4.8582878,\n          \"lat\": 52.3648623\n        }, {\n          \"lng\": 4.8592819,\n          \"lat\": 52.3648966\n        }, {\n          \"lng\": 4.8598228,\n          \"lat\": 52.364783\n        }, {\n          \"lng\": 4.8613989,\n          \"lat\": 52.3664539\n        }, {\n          \"lng\": 4.8661845,\n          \"lat\": 52.3717538\n        }, {\n          \"lng\": 4.8664001,\n          \"lat\": 52.3721596\n        }, {\n          \"lng\": 4.8663889,\n          \"lat\": 52.372566\n        }, {\n          \"lng\": 4.865846,\n          \"lat\": 52.3733281\n        }, {\n          \"lng\": 4.8646717,\n          \"lat\": 52.3734961\n        }, {\n          \"lng\": 4.8641583,\n          \"lat\": 52.3750737\n        }, {\n          \"lng\": 4.8640923,\n          \"lat\": 52.3752839\n        }, {\n          \"lng\": 4.8559599,\n          \"lat\": 52.3743342\n        }, {\n          \"lng\": 4.8558724,\n          \"lat\": 52.374202\n        }]\n      }, {\n        name: \"Oud West\",\n        value: \"Oud West\",\n        polygon: [{\n          \"lng\": 4.8546816,\n          \"lat\": 52.3568634\n        }, {\n          \"lng\": 4.855041,\n          \"lat\": 52.3563261\n        }, {\n          \"lng\": 4.858839,\n          \"lat\": 52.3572696\n        }, {\n          \"lng\": 4.8625458,\n          \"lat\": 52.3582427\n        }, {\n          \"lng\": 4.8646701,\n          \"lat\": 52.3588487\n        }, {\n          \"lng\": 4.868731,\n          \"lat\": 52.3597955\n        }, {\n          \"lng\": 4.8703188,\n          \"lat\": 52.3601231\n        }, {\n          \"lng\": 4.8717136,\n          \"lat\": 52.3604376\n        }, {\n          \"lng\": 4.8738218,\n          \"lat\": 52.3609651\n        }, {\n          \"lng\": 4.8763055,\n          \"lat\": 52.3607226\n        }, {\n          \"lng\": 4.8776842,\n          \"lat\": 52.3608635\n        }, {\n          \"lng\": 4.878167,\n          \"lat\": 52.3610044\n        }, {\n          \"lng\": 4.8812676,\n          \"lat\": 52.3618856\n        }, {\n          \"lng\": 4.8807043,\n          \"lat\": 52.3623966\n        }, {\n          \"lng\": 4.8798675,\n          \"lat\": 52.3633663\n        }, {\n          \"lng\": 4.8795778,\n          \"lat\": 52.3639428\n        }, {\n          \"lng\": 4.8792613,\n          \"lat\": 52.3644931\n        }, {\n          \"lng\": 4.8791272,\n          \"lat\": 52.3650598\n        }, {\n          \"lng\": 4.8787785,\n          \"lat\": 52.3656691\n        }, {\n          \"lng\": 4.8779202,\n          \"lat\": 52.3663734\n        }, {\n          \"lng\": 4.8773838,\n          \"lat\": 52.366809\n        }, {\n          \"lng\": 4.8772336,\n          \"lat\": 52.3676312\n        }, {\n          \"lng\": 4.8769385,\n          \"lat\": 52.3681389\n        }, {\n          \"lng\": 4.8754311,\n          \"lat\": 52.3697536\n        }, {\n          \"lng\": 4.8746211,\n          \"lat\": 52.3714043\n        }, {\n          \"lng\": 4.8744494,\n          \"lat\": 52.3720594\n        }, {\n          \"lng\": 4.8744602,\n          \"lat\": 52.3723083\n        }, {\n          \"lng\": 4.8752166,\n          \"lat\": 52.3729895\n        }, {\n          \"lng\": 4.8745943,\n          \"lat\": 52.3731762\n        }, {\n          \"lng\": 4.870925,\n          \"lat\": 52.3724033\n        }, {\n          \"lng\": 4.8680175,\n          \"lat\": 52.3717974\n        }, {\n          \"lng\": 4.8665959,\n          \"lat\": 52.3715648\n        }, {\n          \"lng\": 4.8654211,\n          \"lat\": 52.3703825\n        }, {\n          \"lng\": 4.8641176,\n          \"lat\": 52.3689905\n        }, {\n          \"lng\": 4.8628623,\n          \"lat\": 52.3676443\n        }, {\n          \"lng\": 4.8616499,\n          \"lat\": 52.3662554\n        }, {\n          \"lng\": 4.8604268,\n          \"lat\": 52.3648862\n        }, {\n          \"lng\": 4.8602505,\n          \"lat\": 52.3647431\n        }, {\n          \"lng\": 4.8591448,\n          \"lat\": 52.3634056\n        }, {\n          \"lng\": 4.8580772,\n          \"lat\": 52.3621247\n        }, {\n          \"lng\": 4.8575783,\n          \"lat\": 52.3615515\n        }, {\n          \"lng\": 4.857117,\n          \"lat\": 52.3604245\n        }, {\n          \"lng\": 4.856248,\n          \"lat\": 52.3592681\n        }, {\n          \"lng\": 4.8555345,\n          \"lat\": 52.3580035\n        }, {\n          \"lng\": 4.855299,\n          \"lat\": 52.357674\n        }, {\n          \"lng\": 4.855269,\n          \"lat\": 52.3576447\n        }, {\n          \"lng\": 4.855115,\n          \"lat\": 52.3574166\n        }, {\n          \"lng\": 4.8549071,\n          \"lat\": 52.3571512\n        }, {\n          \"lng\": 4.85479,\n          \"lat\": 52.3570018\n        }, {\n          \"lng\": 4.8546816,\n          \"lat\": 52.3568634\n        }]\n      }],\n      titleField: 'description',\n      summaryField: 'extraData.solution',\n      typeField: self.config.typeField || 'extraData.categorie',\n      areaField: self.config.areaField || 'extraData.gebied'\n    };\n    self.config = Object.assign(self.defaultConfig, self.config || {}); // defaults\n\n    self.config.doSearchFunction = self.config.doSearchFunction || self.doSearch.bind(self);\n    self.config.map = self.config.map || {};\n    self.config.map.onMapClick = self.config.map.onMapClick || self.onMapClick.bind(self);\n    self.config.map.onMarkerClick = self.config.map.onMarkerClick || self.onMarkerClick.bind(self);\n    self.config.map.clustering = self.config.map.clustering || {};\n    self.config.map.clustering.onClusterClick = self.config.map.clustering.onClusterClick || self.onClusterClick.bind(self);\n    return _this;\n  }\n\n  _createClass(OpenStadComponentIdeasOnMap, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount(prevProps, prevState) {\n      var self = this; // when the map is ready\n\n      self.map.instance.addEventListener('mapIsReady', function (e) {\n        // fetch the data\n        self.fetchData(); // handle map changes\n\n        self.map.map.on('zoomend', function () {\n          self.onChangeMapBoundaries();\n        });\n        self.map.map.on('moveend', function () {\n          self.onChangeMapBoundaries();\n        });\n      }); // handle filter changes\n\n      self.filterbar.instance.addEventListener('typeFilterUpdate', function (event) {\n        self.onChangeTypeFilter(event.detail.value);\n      });\n      self.filterbar.instance.addEventListener('areaFilterUpdate', function (event) {\n        self.onChangeAreaFilter(event.detail.value);\n      }); // handle infoblock changes\n\n      self.infoblock.instance.addEventListener('removeEditMarker', function (event) {\n        self.removeEditMarker();\n      });\n      self.infoblock.instance.addEventListener('updateSelectedIdea', function (event) {\n        self.onUpdateSelectedIdea(event.detail.idea);\n      });\n      self.infoblock.instance.addEventListener('updateNewIdea', function (event) {\n        self.onUpdateNewIdea(event.detail.idea);\n      });\n    }\n  }, {\n    key: \"fetchData\",\n    value: function fetchData() {\n      var self = this;\n      var url = \"\".concat(self.config.apiUrl, \"/api/site/\").concat(self.config.siteId, \"/idea?includeQuestions=1\");\n      fetch(url, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        var ideas = json.filter(function (idea) {\n          return idea.location;\n        });\n        self.map.addMarkers(ideas.map(function (idea) {\n          var type = idea && eval(\"idea.\".concat(self.config.typeField));\n          var tmp = self.config.types.find(function (entry) {\n            return entry.name == type;\n          });\n          var color = tmp && tmp.color || 'black';\n          var html = \"<svg viewBox=\\\"0 0 26 26\\\"><circle cx=\\\"13\\\" cy=\\\"13\\\" r=\\\"13\\\" fill=\\\"\".concat(color, \"\\\"/></svg>\");\n          var icon = L.divIcon({\n            html: html,\n            className: 'icon cluster',\n            iconSize: L.point(26, 26),\n            iconAnchor: [13, 13]\n          });\n          return {\n            lat: idea.location.coordinates[0],\n            lng: idea.location.coordinates[1],\n            data: idea,\n            icon: icon\n          };\n        }));\n        self.setState({\n          ideas: ideas\n        });\n        self.map.setBoundsAndCenter(self.map.markers);\n      })[\"catch\"](function (err) {\n        console.log('Niet goed');\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"doSearch\",\n    value: function doSearch(searchValue, callback) {\n      var self = this;\n      var searchResult = {\n        ideas: [],\n        locations: []\n      };\n      this.state.ideas.forEach(function (idea) {\n        var title = eval(\"idea.\".concat(self.config.titleField)) || '';\n        var summary = eval(\"idea.\".concat(self.config.summaryField)) || '';\n\n        if (title.match(searchValue) || summary.match(searchValue)) {\n          searchResult.ideas.push({\n            text: title,\n            onClick: function onClick() {\n              self.onUpdateSelectedIdea(idea);\n            }\n          });\n        }\n      });\n      console.log('search done');\n      callback(searchValue, searchResult);\n    }\n  }, {\n    key: \"setCurrentPolygon\",\n    value: function setCurrentPolygon(polygon) {\n      var state = _objectSpread({}, this.state);\n\n      state.currentPolygon = polygon ? this.map.createCutoutPolygon(polygon) : undefined;\n      this.setState(state);\n    }\n  }, {\n    key: \"removeCurrentPolygon\",\n    value: function removeCurrentPolygon() {\n      this.map.removePolygon(this.state.currentPolygon);\n\n      var state = _objectSpread({}, this.state);\n\n      state.currentPolygon = undefined;\n      this.setState(state);\n    }\n  }, {\n    key: \"createEditMarker\",\n    value: function createEditMarker(location) {\n      if (this.state.editMarker) {\n        this.removeEditMarker();\n      }\n\n      ;\n      this.setState(_objectSpread({}, this.state, {\n        editMarker: this.map.addMarker({\n          lat: location.lat,\n          lng: location.lng,\n          doNotCluster: true\n        })\n      }));\n    }\n  }, {\n    key: \"updateEditMarker\",\n    value: function updateEditMarker(location) {\n      this.map.updateMarker(this.state.editMarker, {\n        location: {\n          lat: location.lat,\n          lng: location.lng\n        }\n      });\n    }\n  }, {\n    key: \"removeEditMarker\",\n    value: function removeEditMarker() {\n      if (this.state.editMarker) this.map.removeMarker(this.state.editMarker);\n      this.setState(_objectSpread({}, this.state, {\n        editMarker: null\n      }));\n    }\n  }, {\n    key: \"getVisibleIdeas\",\n    value: function getVisibleIdeas() {\n      var self = this;\n      var visibleIdeas = self.map.markers.filter(function (marker) {\n        return marker.visible && marker.data && self.map.map.getBounds().contains(marker.getLatLng());\n      }).map(function (marker) {\n        return marker.data;\n      });\n      return visibleIdeas;\n    }\n  }, {\n    key: \"setNewIdea\",\n    value: function setNewIdea(idea) {\n      if (idea) {\n        this.map.fadeMarkers({\n          exception: [location]\n        });\n\n        if (this.state.editMarker) {\n          this.updateEditMarker({\n            lat: idea.location.coordinates[0],\n            lng: idea.location.coordinates[1]\n          });\n        } else {\n          this.createEditMarker({\n            lat: idea.location.coordinates[0],\n            lng: idea.location.coordinates[1]\n          });\n        }\n\n        this.infoblock.setNewIdea({\n          location: idea.location\n        });\n        this.infoblock.updateIdeas({\n          ideas: this.getVisibleIdeas().filter(function (x) {\n            return x.id != idea.id;\n          }),\n          sortOrder: 'distance',\n          showSortButton: false,\n          center: {\n            lat: idea.location.coordinates[0],\n            lng: idea.location.coordinates[1]\n          },\n          maxLength: 5\n        });\n      } else {\n        this.map.unfadeAllMarkers();\n        this.removeEditMarker();\n        this.infoblock.setNewIdea(null);\n        this.infoblock.updateIdeas({\n          ideas: this.getVisibleIdeas(),\n          showSortButton: true\n        });\n      }\n    }\n  }, {\n    key: \"setSelectedIdea\",\n    value: function setSelectedIdea(idea) {\n      this.selectedIdea = idea;\n\n      if (idea) {\n        this.map.fadeMarkers({\n          exception: idea\n        });\n        this.infoblock.setSelectedIdea(idea);\n        if (!idea.location) console.log('WTF', idea);\n        this.infoblock.updateIdeas({\n          ideas: this.getVisibleIdeas().filter(function (x) {\n            return x.id != idea.id;\n          }),\n          sortOrder: 'distance',\n          showSortButton: false,\n          center: {\n            lat: idea.location.coordinates[0],\n            lng: idea.location.coordinates[1]\n          },\n          maxLength: 5\n        });\n      } else {\n        this.map.unfadeAllMarkers();\n        this.infoblock.setSelectedIdea(null);\n        this.infoblock.updateIdeas({\n          ideas: this.getVisibleIdeas(),\n          showSortButton: true\n        });\n      }\n    }\n  }, {\n    key: \"onMapClick\",\n    value: function onMapClick(event) {\n      if (this.selectedIdea || this.state.editMarker) {\n        // als er een select is dan eerst naar niets geselecteerd\n        this.setSelectedIdea(null);\n        this.setNewIdea(null);\n        this.infoblock.updateIdeas({\n          ideas: this.getVisibleIdeas(),\n          showSortButton: true\n        });\n      } else {\n        this.setSelectedIdea(null);\n        this.setNewIdea({\n          id: 'New Idea',\n          location: {\n            coordinates: [event.latlng.lat, event.latlng.lng]\n          }\n        });\n      }\n\n      this.map.updateFading();\n    }\n  }, {\n    key: \"onMarkerClick\",\n    value: function onMarkerClick(event) {\n      this.setNewIdea(null);\n      this.setSelectedIdea(event.target.data);\n    }\n  }, {\n    key: \"onClusterClick\",\n    value: function onClusterClick(event) {\n      console.log('clustermarkerclick');\n      this.setNewIdea(null);\n      this.setSelectedIdea(null);\n    }\n  }, {\n    key: \"onUpdateSelectedIdea\",\n    value: function onUpdateSelectedIdea(idea) {\n      this.setNewIdea(null);\n      this.setSelectedIdea(idea);\n    }\n  }, {\n    key: \"onUpdateNewIdea\",\n    value: function onUpdateNewIdea(idea) {\n      this.setSelectedIdea(null);\n      this.setNewIdea(idea);\n    }\n  }, {\n    key: \"onChangeMapBoundaries\",\n    value: function onChangeMapBoundaries() {\n      this.map.updateFading();\n\n      if (!(this.selectedIdea || this.state.editMarker)) {\n        this.infoblock.updateIdeas({\n          ideas: this.getVisibleIdeas(),\n          showSortButton: true\n        });\n      }\n    }\n  }, {\n    key: \"onChangeTypeFilter\",\n    value: function onChangeTypeFilter(value) {\n      var self = this;\n      self.setSelectedIdea(null);\n      self.setNewIdea(null);\n      self.map.setFilter(function (marker) {\n        if (value && value !== '0') {\n          return marker.data && eval(\"marker.data.\".concat(self.config.typeField)) && eval(\"marker.data.\".concat(self.config.typeField)) == value;\n        } else {\n          return true;\n        }\n      });\n      self.onChangeMapBoundaries(); // todo: rename\n    }\n  }, {\n    key: \"onChangeAreaFilter\",\n    value: function onChangeAreaFilter(area) {\n      var self = this;\n      self.setSelectedIdea(null);\n      self.setNewIdea(null);\n      self.removeCurrentPolygon();\n      self.setCurrentPolygon(area && area.polygon);\n      self.map.setBoundsAndCenter(area && area.polygon || self.map.markers);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        id: this.divId,\n        ref: function ref(el) {\n          return _this2.instance = el;\n        }\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_filterbar_jsx__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        id: this.divId + '-filterbar',\n        config: {\n          types: this.config.types,\n          areas: this.config.areas,\n          doSearchFunction: this.config.doSearchFunction,\n          title: this.config.title\n        },\n        className: \"openstad-component-ideas-on-map-filterbar\",\n        ref: function ref(el) {\n          return _this2.filterbar = el;\n        }\n      }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_info_block_jsx__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n        id: this.divId + '-filterbar',\n        config: this.config,\n        className: \"openstad-component-ideas-on-map-info\",\n        ref: function ref(el) {\n          return _this2.infoblock = el;\n        }\n      }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_map_jsx__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n        id: this.divId + '-map',\n        className: \"openstad-component-ideas-on-map-map\",\n        config: _objectSpread({}, this.config.map, {\n          types: this.config.types,\n          typeField: this.config.typeField\n        }),\n        ref: function ref(el) {\n          return _this2.map = el;\n        }\n      }));\n    }\n  }]);\n\n  return OpenStadComponentIdeasOnMap;\n}(openstad_component_src_index_jsx__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/component/ideas-on-map.jsx\n");

/***/ }),

/***/ "./src/component/info-block.jsx":
/*!**************************************!*\
  !*** ./src/component/info-block.jsx ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return InfoBlock; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ideas_list_jsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ideas-list.jsx */ \"./src/component/ideas-list.jsx\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n'use strict';\n\nvar InfoBlock =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(InfoBlock, _React$Component);\n\n  function InfoBlock(props) {\n    var _this;\n\n    _classCallCheck(this, InfoBlock);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InfoBlock).call(this, props)); // config\n\n    var defaultConfig = {};\n    _this.config = Object.assign(defaultConfig, _this.props.config || {});\n    _this.state = {\n      currentSortOrder: _this.config.defaultSortOrder,\n      selectedIdea: undefined,\n      newIdea: undefined,\n      ideas: []\n    };\n    return _this;\n  }\n\n  _createClass(InfoBlock, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount(prevProps, prevState) {}\n  }, {\n    key: \"updateIdeas\",\n    value: function updateIdeas(_ref) {\n      var _ref$ideas = _ref.ideas,\n          ideas = _ref$ideas === void 0 ? this.state.ideas : _ref$ideas,\n          _ref$sortOrder = _ref.sortOrder,\n          sortOrder = _ref$sortOrder === void 0 ? this.state.currentSortOrder : _ref$sortOrder,\n          showSortButton = _ref.showSortButton,\n          _ref$center = _ref.center,\n          center = _ref$center === void 0 ? {\n        lat: 52.37104644463586,\n        lng: 4.900402911007405\n      } : _ref$center,\n          maxLength = _ref.maxLength;\n      this.list.updateIdeas({\n        ideas: ideas,\n        sortOrder: sortOrder,\n        showSortButton: showSortButton,\n        center: center,\n        maxLength: maxLength\n      });\n    }\n  }, {\n    key: \"setSelectedIdea\",\n    value: function setSelectedIdea(idea) {\n      this.setState(_objectSpread({}, this.state, {\n        selectedIdea: idea,\n        newIdea: null\n      }));\n    }\n  }, {\n    key: \"setNewIdea\",\n    value: function setNewIdea(idea) {\n      this.setState(_objectSpread({}, this.state, {\n        newIdea: idea,\n        selectedIdea: null\n      }));\n    }\n  }, {\n    key: \"dispatchUpdateSelectedIdea\",\n    value: function dispatchUpdateSelectedIdea(idea) {\n      var event = new CustomEvent('updateSelectedIdea', {\n        detail: {\n          idea: idea\n        }\n      });\n      this.instance.dispatchEvent(event);\n    }\n  }, {\n    key: \"dispatchUpdateNewIdea\",\n    value: function dispatchUpdateNewIdea(idea) {\n      var event = new CustomEvent('updateNewIdea', {\n        detail: {\n          idea: idea\n        }\n      });\n      this.instance.dispatchEvent(event);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var self = this; // new idea\n\n      var newIdeaHTML = null;\n\n      if (self.state.newIdea) {\n        newIdeaHTML = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"openstad-component-info-block-new-idea\"\n        }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"button\", {\n          className: \"openstad-close-button\",\n          onClick: function onClick() {\n            return self.dispatchUpdateNewIdea(null);\n          },\n          ref: function ref(el) {\n            return self.resetButton = el;\n          }\n        }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"h3\", null, \"Geselecteerd\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"p\", null, \"Een locatie vlakbij\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"h4\", null, self.state.newIdea.location.coordinates[0], \", \", self.state.newIdea.location.coordinates[1]), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"p\", null, \"Op deze exacte locatie is nog geen kans of knelpunt ingediend. Wellicht heeft een medebewoner wel al in de buurt een melding gedaan waar u aan wilt bijdragen, dit kunt u bekijken in de lijst hieronder. Wilt u een nieuw kans of knelpunt toevoegen? Klik dan hier:\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"openstad-align-right-container\"\n        }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"button\", {\n          className: \"openstad-button openstad-button-blue\",\n          onClick: function onClick() {\n            return self.dispatchNewIdeaForm();\n          },\n          ref: function ref(el) {\n            return self.newIdeaButton = el;\n          }\n        }, \"Nieuwe kans of knelpunt toevoegen\")));\n      } // selected idea\n\n\n      var selectedIdeaHTML = null;\n\n      if (self.state.selectedIdea) {\n        selectedIdeaHTML = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"openstad-component-info-block-selected-idea\"\n        }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"button\", {\n          className: \"openstad-close-button\",\n          onClick: function onClick() {\n            return self.dispatchUpdateNewIdea(null);\n          },\n          ref: function ref(el) {\n            return self.resetButton = el;\n          }\n        }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"h3\", null, \"Geselecteerd\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"h4\", null, eval(\"self.state.selectedIdea.\".concat(self.config.titleField)), \"(\", self.state.selectedIdea.id, \")\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"p\", null, eval(\"self.state.selectedIdea.\".concat(self.config.summaryField))));\n      } // ideas\n\n\n      var ideas = null;\n\n      if (self.state.ideas) {} // TODO: kan de key weg uit IdeasList\n\n\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        id: self.id,\n        className: self.props.className || 'openstad-component-info-block',\n        ref: function ref(el) {\n          return self.instance = el;\n        }\n      }, newIdeaHTML, selectedIdeaHTML, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_ideas_list_jsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n        config: _objectSpread({}, self.config, {\n          onIdeaClick: function onIdeaClick(idea) {\n            return self.dispatchUpdateSelectedIdea(idea);\n          }\n        }),\n        ideas: self.state.ideas,\n        key: \"openstad-component-ideas-list-321\",\n        ref: function ref(el) {\n          return self.list = el;\n        }\n      }));\n    }\n  }]);\n\n  return InfoBlock;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/component/info-block.jsx\n");

/***/ }),

/***/ "./src/component/map.jsx":
/*!*******************************!*\
  !*** ./src/component/map.jsx ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Map; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var openstad_component_nlmap_src_component_map_jsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! openstad-component-nlmap/src/component/map.jsx */ \"../openstad-component-nlmap/src/component/map.jsx\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n'use strict';\n\nvar Map =\n/*#__PURE__*/\nfunction (_OpenStadComponentNLM) {\n  _inherits(Map, _OpenStadComponentNLM);\n\n  function Map(props) {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Map).call(this, props)); // config\n\n    _this.defaultConfig = {\n      editMarker: undefined,\n      currentPolygon: undefined\n    };\n    _this.config = Object.assign(_this.defaultConfig, _this.config || {}); // defaults\n\n    _this.config = _this.config || {}; // this.config.onMapClick = this.config.onMapClick || this.onMapClick.bind(this);\n    // this.config.onMarkerClick = this.config.onMarkerClick || this.onMarkerClick.bind(this);\n\n    _this.config.clustering = _this.config.clustering || {};\n    _this.config.clustering.iconCreateFunction = _this.config.clustering.createClusterIcon || _this.createClusterIcon.bind(_assertThisInitialized(_this));\n    _this.config.clustering.showCoverageOnHover = typeof _this.config.showCoverageOnHover != 'undefined' ? _this.config.showCoverageOnHover : false;\n    _this.config.clustering.onClusterAnimationEnd = _this.config.clustering.onClusterAnimationEnd || _this.onClusterAnimationEnd.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"createClusterIcon\",\n    value: function createClusterIcon(cluster) {\n      var self = this;\n      var count = cluster.getChildCount();\n\n      if (self.config.typeField && self.config.types && self.config.types.length) {\n        // todo: configurable\n        var _count = cluster.getChildCount();\n\n        var markers = cluster.getAllChildMarkers();\n        var colors = {};\n        var total = markers.length;\n        var isFaded = false;\n        markers.forEach(function (entry) {\n          var type = entry.data && eval(\"entry.data.\".concat(self.config.typeField));\n          var tmp = self.config.types.find(function (entry) {\n            return entry.name == type;\n          });\n          var color = tmp && tmp.color || 'black';\n          if (type == undefined) type = 'undef';\n          if (!colors[color]) colors[color] = 0;\n          colors[color]++;\n          if (entry.data && entry.data.isFaded) isFaded = true;\n        });\n        var html = '<svg viewBox=\"0 0 36 36\"><circle cx=\"18\" cy=\"18\" r=\"14\" fill=\"white\"/>';\n        var soFar = 0;\n        Object.keys(colors).forEach(function (key) {\n          var myColor = key;\n          var perc = 100 * colors[key] / total;\n          var angle = soFar / 100 * 360;\n          html += \"  <path\\n             d=\\\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\\\"\\n             fill=\\\"none\\\"\\n             transform=\\\"rotate(\".concat(angle, \", 18, 18)\\\"\\n             stroke=\\\"\").concat(myColor, \"\\\"\\n             stroke-width=\\\"4\\\"\\n             stroke-dasharray=\\\"\").concat(perc, \", 100\\\"\\n             />\");\n          soFar = soFar + perc;\n        });\n        html += '<text x=\"18\" y=\"21\" text-anchor=\"middle\" class=\"openstad-component-ideas-on-map-icon openstad-component-ideas-on-map-icon-text\">' + _count + '</text></svg>';\n        return L.divIcon({\n          html: html,\n          className: 'icon cluster',\n          iconSize: L.point(36, 36),\n          iconAnchor: [18, 18],\n          isFaded: isFaded\n        });\n      } else {\n        return L.divIcon({\n          html: count,\n          className: 'icon cluster',\n          iconSize: L.point(20, 20),\n          iconAnchor: [20, 10]\n        });\n      }\n    }\n  }, {\n    key: \"fadeMarkers\",\n    value: function fadeMarkers(_ref) {\n      var exception = _ref.exception;\n      var self = this;\n      self.markers.forEach(function (marker) {\n        if (!(exception && marker.data && marker.data.id && exception.id == marker.data.id)) {\n          if (marker.data) marker.data.isFaded = true;\n          var visibleParent = self.markerClusterGroup.getVisibleParent(marker);\n          var ignore = visibleParent && visibleParent.getAllChildMarkers && visibleParent.getAllChildMarkers().find(function (m) {\n            return m.data && m.data.isFaded === false;\n          });\n\n          if (!ignore && visibleParent) {\n            visibleParent.setOpacity(0.3);\n          }\n        }\n      });\n    } // fix for https://github.com/Leaflet/Leaflet.markercluster/issues/177\n\n  }, {\n    key: \"updateFading\",\n    value: function updateFading() {\n      var self = this;\n      self.markers.forEach(function (marker) {\n        var visibleParent = self.markerClusterGroup.getVisibleParent(marker);\n\n        if (visibleParent) {\n          var ignore = visibleParent && visibleParent.getAllChildMarkers && visibleParent.getAllChildMarkers().find(function (m) {\n            return m.data && m.data.isFaded === false;\n          });\n          visibleParent.setOpacity(!ignore && marker.data && marker.data.isFaded ? 0.3 : 1);\n        }\n      });\n    }\n  }, {\n    key: \"unfadeAllMarkers\",\n    value: function unfadeAllMarkers() {\n      var self = this; // markers\n\n      self.markers.forEach(function (marker) {\n        if (marker.data) marker.data.isFaded = false;\n        var visibleParent = self.markerClusterGroup.getVisibleParent(marker);\n\n        if (visibleParent) {\n          visibleParent.setOpacity(1);\n        }\n      });\n    }\n  }, {\n    key: \"onClusterAnimationEnd\",\n    value: function onClusterAnimationEnd() {\n      this.updateFading();\n    }\n  }]);\n\n  return Map;\n}(openstad_component_nlmap_src_component_map_jsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/component/map.jsx\n");

/***/ }),

/***/ "./src/component/search.jsx":
/*!**********************************!*\
  !*** ./src/component/search.jsx ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Search; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n'use strict';\n\nvar Search =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Search, _React$Component);\n\n  function Search(props) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Search).call(this, props));\n    var defaultConfig = {};\n    _this.config = Object.assign(defaultConfig, _this.props.config || {});\n    _this.config.doSearchFunction = _this.config.doSearchFunction || _this.doSearchx.bind(_assertThisInitialized(_this));\n    _this.state = {\n      searchValue: '',\n      searchResult: {\n        locations: [],\n        ideas: []\n      },\n      showSuggestions: false\n    };\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount(prevProps, prevState) {}\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(value) {\n      this.setState(_objectSpread({}, this.state, {\n        searchValue: value,\n        showSuggestions: value.length >= 3 ? true : false\n      }));\n\n      if (value.length >= 3) {\n        this.config.doSearchFunction(value, this.updateSearchResult.bind(this));\n      } // dispatch an event\n      //var event = new CustomEvent('typeFilterUpdate', { detail: { value: value } });\n      //this.instance.dispatchEvent(event);\n\n    }\n  }, {\n    key: \"showSuggestions\",\n    value: function showSuggestions() {\n      this.setState({\n        showSuggestions: this.state.searchValue.length >= 3 ? true : false\n      });\n    }\n  }, {\n    key: \"hideSuggestions\",\n    value: function hideSuggestions() {\n      var self = this; // TODO: dit moet anders; het gaat er om dat de onclick op suggesties niet doorkomt omdat hij deze eerst doet\n\n      setTimeout(function () {\n        self.setState({\n          showSuggestions: false\n        });\n      }, 500);\n    }\n  }, {\n    key: \"updateSearchResult\",\n    value: function updateSearchResult(searchValue, searchResult) {\n      console.log('update', searchValue, searchResult);\n      this.setState(_objectSpread({}, this.state, {\n        searchValue: searchValue,\n        searchResult: searchResult,\n        showSuggestions: searchValue.length >= 3 ? true : false\n      }));\n    }\n  }, {\n    key: \"doSearchx\",\n    value: function doSearchx(value) {\n      console.log('search function not defined');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var self = this;\n      console.log('render', this.state);\n      var suggestionsHTML = null;\n\n      if (self.state.showSuggestions) {\n        suggestionsHTML = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"openstad-component-search-suggestions\",\n          ref: function ref(el) {\n            return self.suggestions = el;\n          }\n        }, \"Adressen:\", self.state.searchResult.locations.map(function (result, i) {\n          var text = result.text.replace(new RegExp(self.state.searchValue, 'g'), function ($0) {\n            return '<strong>' + $0 + '</strong>';\n          });\n          return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n            className: \"openstad-component-search-suggestion openstad-component-search-suggestion-idea\",\n            onClick: result.onClick,\n            key: 'search-result-' + i,\n            dangerouslySetInnerHTML: text\n          });\n        }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"openstad-component-search-suggestions-hr\"\n        }), this.config.title, \":\", self.state.searchResult.ideas.map(function (result, i) {\n          console.log(\"\".concat(self.state.searchValue));\n          var text = result.text.replace(new RegExp(self.state.searchValue, 'g'), function ($0) {\n            return '<strong>' + $0 + '</strong>';\n          });\n          return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n            className: \"openstad-component-search-suggestion openstad-component-search-suggestion-idea\",\n            onClick: result.onClick,\n            key: 'search-result-' + i,\n            dangerouslySetInnerHTML: {\n              __html: text\n            }\n          });\n        }));\n      }\n\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        id: self.id,\n        className: self.props.className || 'openstad-component-search',\n        ref: function ref(el) {\n          return self.instance = el;\n        }\n      }, suggestionsHTML, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"input\", {\n        type: \"text\",\n        onChange: function onChange() {\n          return self.handleChange(self.inputfield.value);\n        },\n        onBlur: function onBlur() {\n          return self.hideSuggestions();\n        },\n        onFocus: function onFocus() {\n          return self.showSuggestions();\n        },\n        className: \"openstad-default-input openstad-component-search-input\",\n        ref: function ref(el) {\n          return self.inputfield = el;\n        }\n      }));\n    }\n  }]);\n\n  return Search;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50L3NlYXJjaC5qc3g/NjY3YyJdLCJuYW1lcyI6WyJTZWFyY2giLCJwcm9wcyIsImRlZmF1bHRDb25maWciLCJjb25maWciLCJPYmplY3QiLCJhc3NpZ24iLCJkb1NlYXJjaEZ1bmN0aW9uIiwiZG9TZWFyY2h4IiwiYmluZCIsInN0YXRlIiwic2VhcmNoVmFsdWUiLCJzZWFyY2hSZXN1bHQiLCJsb2NhdGlvbnMiLCJpZGVhcyIsInNob3dTdWdnZXN0aW9ucyIsInByZXZQcm9wcyIsInByZXZTdGF0ZSIsInZhbHVlIiwic2V0U3RhdGUiLCJsZW5ndGgiLCJ1cGRhdGVTZWFyY2hSZXN1bHQiLCJzZWxmIiwic2V0VGltZW91dCIsImNvbnNvbGUiLCJsb2ciLCJzdWdnZXN0aW9uc0hUTUwiLCJlbCIsInN1Z2dlc3Rpb25zIiwibWFwIiwicmVzdWx0IiwiaSIsInRleHQiLCJyZXBsYWNlIiwiUmVnRXhwIiwiJDAiLCJvbkNsaWNrIiwidGl0bGUiLCJfX2h0bWwiLCJpZCIsImNsYXNzTmFtZSIsImluc3RhbmNlIiwiaGFuZGxlQ2hhbmdlIiwiaW5wdXRmaWVsZCIsImhpZGVTdWdnZXN0aW9ucyIsIlJlYWN0IiwiQ29tcG9uZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFFQTs7SUFFcUJBLE07Ozs7O0FBRW5CLGtCQUFZQyxLQUFaLEVBQW1CO0FBQUE7O0FBQUE7O0FBRWpCLGdGQUFNQSxLQUFOO0FBRUYsUUFBSUMsYUFBYSxHQUFHLEVBQXBCO0FBRUEsVUFBS0MsTUFBTCxHQUFjQyxNQUFNLENBQUNDLE1BQVAsQ0FBY0gsYUFBZCxFQUE2QixNQUFLRCxLQUFMLENBQVdFLE1BQVgsSUFBcUIsRUFBbEQsQ0FBZDtBQUVFLFVBQUtBLE1BQUwsQ0FBWUcsZ0JBQVosR0FBK0IsTUFBS0gsTUFBTCxDQUFZRyxnQkFBWixJQUFnQyxNQUFLQyxTQUFMLENBQWVDLElBQWYsK0JBQS9EO0FBR0EsVUFBS0MsS0FBTCxHQUFhO0FBQ2RDLGlCQUFXLEVBQUUsRUFEQztBQUVkQyxrQkFBWSxFQUFFO0FBQUVDLGlCQUFTLEVBQUUsRUFBYjtBQUFpQkMsYUFBSyxFQUFFO0FBQXhCLE9BRkE7QUFHZEMscUJBQWUsRUFBRTtBQUhILEtBQWI7QUFYaUI7QUFpQmxCOzs7O3NDQUVnQkMsUyxFQUFXQyxTLEVBQVcsQ0FDdkM7OztpQ0FFYUMsSyxFQUFPO0FBRWxCLFdBQUtDLFFBQUwsbUJBQ0UsS0FBS1QsS0FEUDtBQUVEQyxtQkFBVyxFQUFFTyxLQUZaO0FBR0RILHVCQUFlLEVBQUVHLEtBQUssQ0FBQ0UsTUFBTixJQUFlLENBQWYsR0FBbUIsSUFBbkIsR0FBMEI7QUFIMUM7O0FBTUYsVUFBSUYsS0FBSyxDQUFDRSxNQUFOLElBQWUsQ0FBbkIsRUFBc0I7QUFDckIsYUFBS2hCLE1BQUwsQ0FBWUcsZ0JBQVosQ0FBNkJXLEtBQTdCLEVBQW9DLEtBQUtHLGtCQUFMLENBQXdCWixJQUF4QixDQUE2QixJQUE3QixDQUFwQztBQUNBLE9BVm1CLENBWXBCO0FBQ0E7QUFDQTs7QUFFQzs7O3NDQUVnQjtBQUNmLFdBQUtVLFFBQUwsQ0FBYztBQUFFSix1QkFBZSxFQUFFLEtBQUtMLEtBQUwsQ0FBV0MsV0FBWCxDQUF1QlMsTUFBdkIsSUFBaUMsQ0FBakMsR0FBcUMsSUFBckMsR0FBNEM7QUFBL0QsT0FBZDtBQUNGOzs7c0NBRWlCO0FBQ2pCLFVBQUlFLElBQUksR0FBRyxJQUFYLENBRGlCLENBRWpCOztBQUNBQyxnQkFBVSxDQUFDLFlBQVU7QUFBQ0QsWUFBSSxDQUFDSCxRQUFMLENBQWM7QUFBRUoseUJBQWUsRUFBRTtBQUFuQixTQUFkO0FBQTJDLE9BQXZELEVBQXlELEdBQXpELENBQVY7QUFDQTs7O3VDQUVrQkosVyxFQUFhQyxZLEVBQWM7QUFDN0NZLGFBQU8sQ0FBQ0MsR0FBUixDQUFZLFFBQVosRUFBc0JkLFdBQXRCLEVBQW1DQyxZQUFuQztBQUNFLFdBQUtPLFFBQUwsbUJBQWtCLEtBQUtULEtBQXZCO0FBQThCQyxtQkFBVyxFQUFYQSxXQUE5QjtBQUEyQ0Msb0JBQVksRUFBWkEsWUFBM0M7QUFBeURHLHVCQUFlLEVBQUVKLFdBQVcsQ0FBQ1MsTUFBWixJQUFzQixDQUF0QixHQUEwQixJQUExQixHQUFpQztBQUEzRztBQUNGOzs7OEJBRVNGLEssRUFBTztBQUNoQk0sYUFBTyxDQUFDQyxHQUFSLENBQVksNkJBQVo7QUFDQTs7OzZCQUVRO0FBRU4sVUFBSUgsSUFBSSxHQUFHLElBQVg7QUFDRkUsYUFBTyxDQUFDQyxHQUFSLENBQVksUUFBWixFQUFzQixLQUFLZixLQUEzQjtBQUVBLFVBQUlnQixlQUFlLEdBQUcsSUFBdEI7O0FBQ0EsVUFBSUosSUFBSSxDQUFDWixLQUFMLENBQVdLLGVBQWYsRUFBZ0M7QUFDL0JXLHVCQUFlLEdBQ2Q7QUFBSyxtQkFBUyxFQUFDLHVDQUFmO0FBQXVELGFBQUcsRUFBRSxhQUFBQyxFQUFFO0FBQUEsbUJBQUtMLElBQUksQ0FBQ00sV0FBTCxHQUFtQkQsRUFBeEI7QUFBQTtBQUE5RCx3QkFFUUwsSUFBSSxDQUFDWixLQUFMLENBQVdFLFlBQVgsQ0FBd0JDLFNBQXhCLENBQWtDZ0IsR0FBbEMsQ0FBc0MsVUFBQ0MsTUFBRCxFQUFTQyxDQUFULEVBQWU7QUFDM0QsY0FBSUMsSUFBSSxHQUFHRixNQUFNLENBQUNFLElBQVAsQ0FBWUMsT0FBWixDQUFvQixJQUFJQyxNQUFKLENBQVdaLElBQUksQ0FBQ1osS0FBTCxDQUFXQyxXQUF0QixFQUFtQyxHQUFuQyxDQUFwQixFQUE2RCxVQUFDd0IsRUFBRDtBQUFBLG1CQUFRLGFBQWFBLEVBQWIsR0FBa0IsV0FBMUI7QUFBQSxXQUE3RCxDQUFYO0FBQ00saUJBQU87QUFBSyxxQkFBUyxFQUFDLGdGQUFmO0FBQWdHLG1CQUFPLEVBQUdMLE1BQU0sQ0FBQ00sT0FBakg7QUFBMkgsZUFBRyxFQUFFLG1CQUFtQkwsQ0FBbko7QUFBc0osbUNBQXVCLEVBQUVDO0FBQS9LLFlBQVA7QUFDRCxTQUhDLENBRlIsRUFNQztBQUFLLG1CQUFTLEVBQUM7QUFBZixVQU5ELEVBT0csS0FBSzVCLE1BQUwsQ0FBWWlDLEtBUGYsT0FRUWYsSUFBSSxDQUFDWixLQUFMLENBQVdFLFlBQVgsQ0FBd0JFLEtBQXhCLENBQThCZSxHQUE5QixDQUFrQyxVQUFDQyxNQUFELEVBQVNDLENBQVQsRUFBZTtBQUN2RFAsaUJBQU8sQ0FBQ0MsR0FBUixXQUFlSCxJQUFJLENBQUNaLEtBQUwsQ0FBV0MsV0FBMUI7QUFDQSxjQUFJcUIsSUFBSSxHQUFHRixNQUFNLENBQUNFLElBQVAsQ0FBWUMsT0FBWixDQUFvQixJQUFJQyxNQUFKLENBQVdaLElBQUksQ0FBQ1osS0FBTCxDQUFXQyxXQUF0QixFQUFtQyxHQUFuQyxDQUFwQixFQUE2RCxVQUFDd0IsRUFBRDtBQUFBLG1CQUFRLGFBQWFBLEVBQWIsR0FBa0IsV0FBMUI7QUFBQSxXQUE3RCxDQUFYO0FBQ00saUJBQU87QUFBSyxxQkFBUyxFQUFDLGdGQUFmO0FBQWdHLG1CQUFPLEVBQUdMLE1BQU0sQ0FBQ00sT0FBakg7QUFBMkgsZUFBRyxFQUFFLG1CQUFtQkwsQ0FBbko7QUFBc0osbUNBQXVCLEVBQUU7QUFBQ08sb0JBQU0sRUFBRU47QUFBVDtBQUEvSyxZQUFQO0FBQ0QsU0FKQyxDQVJSLENBREQ7QUFnQkE7O0FBRUMsYUFDRDtBQUFLLFVBQUUsRUFBRVYsSUFBSSxDQUFDaUIsRUFBZDtBQUFrQixpQkFBUyxFQUFFakIsSUFBSSxDQUFDcEIsS0FBTCxDQUFXc0MsU0FBWCxJQUF3QiwyQkFBckQ7QUFBa0YsV0FBRyxFQUFFLGFBQUFiLEVBQUU7QUFBQSxpQkFBS0wsSUFBSSxDQUFDbUIsUUFBTCxHQUFnQmQsRUFBckI7QUFBQTtBQUF6RixTQUVFRCxlQUZGLEVBR0M7QUFBTyxZQUFJLEVBQUMsTUFBWjtBQUFtQixnQkFBUSxFQUFFO0FBQUEsaUJBQU1KLElBQUksQ0FBQ29CLFlBQUwsQ0FBbUJwQixJQUFJLENBQUNxQixVQUFMLENBQWdCekIsS0FBbkMsQ0FBTjtBQUFBLFNBQTdCO0FBQStFLGNBQU0sRUFBRTtBQUFBLGlCQUFNSSxJQUFJLENBQUNzQixlQUFMLEVBQU47QUFBQSxTQUF2RjtBQUFxSCxlQUFPLEVBQUU7QUFBQSxpQkFBTXRCLElBQUksQ0FBQ1AsZUFBTCxFQUFOO0FBQUEsU0FBOUg7QUFBNEosaUJBQVMsRUFBQyx3REFBdEs7QUFBK04sV0FBRyxFQUFFLGFBQUFZLEVBQUU7QUFBQSxpQkFBS0wsSUFBSSxDQUFDcUIsVUFBTCxHQUFrQmhCLEVBQXZCO0FBQUE7QUFBdE8sUUFIRCxDQURDO0FBU0Q7Ozs7RUEvRmlDa0IsNENBQUssQ0FBQ0MsUyIsImZpbGUiOiIuL3NyYy9jb21wb25lbnQvc2VhcmNoLmpzeC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbid1c2Ugc3RyaWN0JztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VhcmNoIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcblxuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuXG4gICAgc3VwZXIocHJvcHMpO1xuXG5cdFx0bGV0IGRlZmF1bHRDb25maWcgPSB7XG5cdFx0fTtcblx0XHR0aGlzLmNvbmZpZyA9IE9iamVjdC5hc3NpZ24oZGVmYXVsdENvbmZpZywgdGhpcy5wcm9wcy5jb25maWcgfHwge30pXG5cbiAgICB0aGlzLmNvbmZpZy5kb1NlYXJjaEZ1bmN0aW9uID0gdGhpcy5jb25maWcuZG9TZWFyY2hGdW5jdGlvbiB8fCB0aGlzLmRvU2VhcmNoeC5iaW5kKHRoaXMpO1xuXG5cdFx0XG4gICAgdGhpcy5zdGF0ZSA9IHtcblx0XHRcdHNlYXJjaFZhbHVlOiAnJyxcblx0XHRcdHNlYXJjaFJlc3VsdDogeyBsb2NhdGlvbnM6IFtdLCBpZGVhczogW10gfSxcblx0XHRcdHNob3dTdWdnZXN0aW9uczogZmFsc2UsXG4gICAgfVxuXG4gIH1cblxuXHRjb21wb25lbnREaWRNb3VudChwcmV2UHJvcHMsIHByZXZTdGF0ZSkge1xuXHR9XG5cbiAgaGFuZGxlQ2hhbmdlKHZhbHVlKSB7XG5cbiAgICB0aGlzLnNldFN0YXRlKHtcblx0XHRcdC4uLnRoaXMuc3RhdGUsXG5cdFx0XHRzZWFyY2hWYWx1ZTogdmFsdWUsXG5cdFx0XHRzaG93U3VnZ2VzdGlvbnM6IHZhbHVlLmxlbmd0aCA+PTMgPyB0cnVlIDogZmFsc2UsXG5cdFx0fSk7XG5cblx0XHRpZiAodmFsdWUubGVuZ3RoID49Mykge1xuXHRcdFx0dGhpcy5jb25maWcuZG9TZWFyY2hGdW5jdGlvbih2YWx1ZSwgdGhpcy51cGRhdGVTZWFyY2hSZXN1bHQuYmluZCh0aGlzKSk7XG5cdFx0fVxuXG5cdFx0Ly8gZGlzcGF0Y2ggYW4gZXZlbnRcblx0XHQvL3ZhciBldmVudCA9IG5ldyBDdXN0b21FdmVudCgndHlwZUZpbHRlclVwZGF0ZScsIHsgZGV0YWlsOiB7IHZhbHVlOiB2YWx1ZSB9IH0pO1xuXHRcdC8vdGhpcy5pbnN0YW5jZS5kaXNwYXRjaEV2ZW50KGV2ZW50KTtcblxuICB9XG5cblx0c2hvd1N1Z2dlc3Rpb25zKCkge1xuICAgIHRoaXMuc2V0U3RhdGUoeyBzaG93U3VnZ2VzdGlvbnM6IHRoaXMuc3RhdGUuc2VhcmNoVmFsdWUubGVuZ3RoID49IDMgPyB0cnVlIDogZmFsc2UgfSk7XG5cdH1cblxuXHRoaWRlU3VnZ2VzdGlvbnMoKSB7XG5cdFx0bGV0IHNlbGYgPSB0aGlzO1xuXHRcdC8vIFRPRE86IGRpdCBtb2V0IGFuZGVyczsgaGV0IGdhYXQgZXIgb20gZGF0IGRlIG9uY2xpY2sgb3Agc3VnZ2VzdGllcyBuaWV0IGRvb3Jrb210IG9tZGF0IGhpaiBkZXplIGVlcnN0IGRvZXRcblx0XHRzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7c2VsZi5zZXRTdGF0ZSh7IHNob3dTdWdnZXN0aW9uczogZmFsc2UgfSk7fSwgNTAwKTtcblx0fVxuXG5cdHVwZGF0ZVNlYXJjaFJlc3VsdChzZWFyY2hWYWx1ZSwgc2VhcmNoUmVzdWx0KSB7XG5cdFx0Y29uc29sZS5sb2coJ3VwZGF0ZScsIHNlYXJjaFZhbHVlLCBzZWFyY2hSZXN1bHQpO1xuICAgIHRoaXMuc2V0U3RhdGUoey4uLnRoaXMuc3RhdGUsIHNlYXJjaFZhbHVlLCBzZWFyY2hSZXN1bHQsIHNob3dTdWdnZXN0aW9uczogc2VhcmNoVmFsdWUubGVuZ3RoID49IDMgPyB0cnVlIDogZmFsc2UgfSk7XG5cdH1cblxuXHRkb1NlYXJjaHgodmFsdWUpIHtcblx0XHRjb25zb2xlLmxvZygnc2VhcmNoIGZ1bmN0aW9uIG5vdCBkZWZpbmVkJyk7XG5cdH1cblxuXHRyZW5kZXIoKSB7XG5cbiAgICBsZXQgc2VsZiA9IHRoaXM7XG5cdFx0Y29uc29sZS5sb2coJ3JlbmRlcicsIHRoaXMuc3RhdGUpO1xuXG5cdFx0bGV0IHN1Z2dlc3Rpb25zSFRNTCA9IG51bGw7XG5cdFx0aWYgKHNlbGYuc3RhdGUuc2hvd1N1Z2dlc3Rpb25zKSB7XG5cdFx0XHRzdWdnZXN0aW9uc0hUTUwgPSAoXG5cdFx0XHRcdDxkaXYgY2xhc3NOYW1lPVwib3BlbnN0YWQtY29tcG9uZW50LXNlYXJjaC1zdWdnZXN0aW9uc1wiIHJlZj17ZWwgPT4gKHNlbGYuc3VnZ2VzdGlvbnMgPSBlbCl9PlxuXHRcdFx0XHRcdEFkcmVzc2VuOlxuICAgICAgICAgIHsgc2VsZi5zdGF0ZS5zZWFyY2hSZXN1bHQubG9jYXRpb25zLm1hcCgocmVzdWx0LCBpKSA9PiB7XG5cdFx0XHRcdFx0XHRsZXQgdGV4dCA9IHJlc3VsdC50ZXh0LnJlcGxhY2UobmV3IFJlZ0V4cChzZWxmLnN0YXRlLnNlYXJjaFZhbHVlLCAnZycpLCAoJDApID0+ICc8c3Ryb25nPicgKyAkMCArICc8L3N0cm9uZz4nKTtcbiAgICAgICAgICAgIHJldHVybiA8ZGl2IGNsYXNzTmFtZT1cIm9wZW5zdGFkLWNvbXBvbmVudC1zZWFyY2gtc3VnZ2VzdGlvbiBvcGVuc3RhZC1jb21wb25lbnQtc2VhcmNoLXN1Z2dlc3Rpb24taWRlYVwiIG9uQ2xpY2s9eyByZXN1bHQub25DbGljayB9IGtleT17J3NlYXJjaC1yZXN1bHQtJyArIGl9IGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt0ZXh0fT48L2Rpdj47XG4gICAgICAgICAgfSl9XG5cdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJvcGVuc3RhZC1jb21wb25lbnQtc2VhcmNoLXN1Z2dlc3Rpb25zLWhyXCIvPlxuXHRcdFx0XHRcdHsgdGhpcy5jb25maWcudGl0bGUgfTpcbiAgICAgICAgICB7IHNlbGYuc3RhdGUuc2VhcmNoUmVzdWx0LmlkZWFzLm1hcCgocmVzdWx0LCBpKSA9PiB7XG5cdFx0XHRcdFx0XHRjb25zb2xlLmxvZyhgJHtzZWxmLnN0YXRlLnNlYXJjaFZhbHVlfWApO1xuXHRcdFx0XHRcdFx0bGV0IHRleHQgPSByZXN1bHQudGV4dC5yZXBsYWNlKG5ldyBSZWdFeHAoc2VsZi5zdGF0ZS5zZWFyY2hWYWx1ZSwgJ2cnKSwgKCQwKSA9PiAnPHN0cm9uZz4nICsgJDAgKyAnPC9zdHJvbmc+Jyk7XG4gICAgICAgICAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJvcGVuc3RhZC1jb21wb25lbnQtc2VhcmNoLXN1Z2dlc3Rpb24gb3BlbnN0YWQtY29tcG9uZW50LXNlYXJjaC1zdWdnZXN0aW9uLWlkZWFcIiBvbkNsaWNrPXsgcmVzdWx0Lm9uQ2xpY2sgfSBrZXk9eydzZWFyY2gtcmVzdWx0LScgKyBpfSBkYW5nZXJvdXNseVNldElubmVySFRNTD17e19faHRtbDogdGV4dH19PjwvZGl2PjtcbiAgICAgICAgICB9KX1cblx0XHRcdFx0PC9kaXY+XG5cdFx0XHQpO1xuXHRcdH1cblx0XHRcbiAgICByZXR1cm4gKFxuXHRcdFx0PGRpdiBpZD17c2VsZi5pZH0gY2xhc3NOYW1lPXtzZWxmLnByb3BzLmNsYXNzTmFtZSB8fCAnb3BlbnN0YWQtY29tcG9uZW50LXNlYXJjaCd9IHJlZj17ZWwgPT4gKHNlbGYuaW5zdGFuY2UgPSBlbCl9PlxuXG5cdFx0XHRcdHtzdWdnZXN0aW9uc0hUTUx9XG5cdFx0XHRcdDxpbnB1dCB0eXBlPVwidGV4dFwiIG9uQ2hhbmdlPXsoKSA9PiBzZWxmLmhhbmRsZUNoYW5nZSggc2VsZi5pbnB1dGZpZWxkLnZhbHVlICl9IG9uQmx1cj17KCkgPT4gc2VsZi5oaWRlU3VnZ2VzdGlvbnMoKX0gb25Gb2N1cz17KCkgPT4gc2VsZi5zaG93U3VnZ2VzdGlvbnMoKX0gY2xhc3NOYW1lPVwib3BlbnN0YWQtZGVmYXVsdC1pbnB1dCBvcGVuc3RhZC1jb21wb25lbnQtc2VhcmNoLWlucHV0XCIgcmVmPXtlbCA9PiAoc2VsZi5pbnB1dGZpZWxkID0gZWwpfS8+XG5cblx0XHRcdDwvZGl2PlxuICAgICk7XG5cbiAgfVxuXG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/component/search.jsx\n");

/***/ }),

/***/ "./src/css/default.less":
/*!******************************!*\
  !*** ./src/css/default.less ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY3NzL2RlZmF1bHQubGVzcz8yMjE1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6Ii4vc3JjL2Nzcy9kZWZhdWx0Lmxlc3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/css/default.less\n");

/***/ }),

/***/ "./src/index.jsx":
/*!***********************!*\
  !*** ./src/index.jsx ***!
  \***********************/
/*! exports provided: OpenStadComponentIdeasOnMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"react-dom\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _css_default_less__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./css/default.less */ \"./src/css/default.less\");\n/* harmony import */ var _css_default_less__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_css_default_less__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _component_ideas_on_map_jsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./component/ideas-on-map.jsx */ \"./src/component/ideas-on-map.jsx\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"OpenStadComponentIdeasOnMap\", function() { return _component_ideas_on_map_jsx__WEBPACK_IMPORTED_MODULE_3__[\"default\"]; });\n\n\n\n\n\n\nvar elements = document.querySelectorAll('.openstad-component-ideas-on-map');\nelements.forEach(function (elem) {\n  var attributes = elem.attributes;\n  react_dom__WEBPACK_IMPORTED_MODULE_1___default.a.render(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_component_ideas_on_map_jsx__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    attributes: attributes\n  }), elem);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanN4P2VkMTIiXSwibmFtZXMiOlsiZWxlbWVudHMiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwiZWxlbSIsImF0dHJpYnV0ZXMiLCJSZWFjdERPTSIsInJlbmRlciJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBRUEsSUFBSUEsUUFBUSxHQUFHQyxRQUFRLENBQUNDLGdCQUFULENBQTBCLGtDQUExQixDQUFmO0FBQ0FGLFFBQVEsQ0FBQ0csT0FBVCxDQUFpQixVQUFDQyxJQUFELEVBQVU7QUFDekIsTUFBSUMsVUFBVSxHQUFHRCxJQUFJLENBQUNDLFVBQXRCO0FBQ0RDLGtEQUFRLENBQUNDLE1BQVQsQ0FBaUIsMkRBQUMsbUVBQUQ7QUFBNkIsY0FBVSxFQUFFRjtBQUF6QyxJQUFqQixFQUF5RUQsSUFBekU7QUFDQSxDQUhEIiwiZmlsZSI6Ii4vc3JjL2luZGV4LmpzeC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJztcblxuaW1wb3J0IFwiLi9jc3MvZGVmYXVsdC5sZXNzXCI7XG5cbmltcG9ydCBPcGVuU3RhZENvbXBvbmVudElkZWFzT25NYXAgZnJvbSAnLi9jb21wb25lbnQvaWRlYXMtb24tbWFwLmpzeCc7XG5leHBvcnQge09wZW5TdGFkQ29tcG9uZW50SWRlYXNPbk1hcH1cblxubGV0IGVsZW1lbnRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLm9wZW5zdGFkLWNvbXBvbmVudC1pZGVhcy1vbi1tYXAnKTtcbmVsZW1lbnRzLmZvckVhY2goKGVsZW0pID0+IHtcbiAgbGV0IGF0dHJpYnV0ZXMgPSBlbGVtLmF0dHJpYnV0ZXM7XG5cdFJlYWN0RE9NLnJlbmRlciggPE9wZW5TdGFkQ29tcG9uZW50SWRlYXNPbk1hcCBhdHRyaWJ1dGVzPXthdHRyaWJ1dGVzfS8+LCBlbGVtKVxufSlcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.jsx\n");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "React" ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = React;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJSZWFjdFwiP2M0ODEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoicmVhY3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFJlYWN0OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///react\n");

/***/ }),

/***/ "react-dom":
/*!***************************!*\
  !*** external "ReactDOM" ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = ReactDOM;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJSZWFjdERPTVwiPzRiMmQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoicmVhY3QtZG9tLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBSZWFjdERPTTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///react-dom\n");

/***/ })

/******/ });