/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.jsx");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../openstad-component-nlmap/node_modules/openstad-component/src/index.jsx":
/*!*********************************************************************************!*\
  !*** ../openstad-component-nlmap/node_modules/openstad-component/src/index.jsx ***!
  \*********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return OpenStadComponent; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n'use strict';\n\nvar OpenStadComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(OpenStadComponent, _React$Component);\n\n  function OpenStadComponent(props) {\n    var _this;\n\n    _classCallCheck(this, OpenStadComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OpenStadComponent).call(this, props));\n\n    var self = _assertThisInitialized(_this);\n\n    if (props.attributes) {\n      Object.keys(props.attributes).forEach(function (key) {\n        var attribute = props.attributes[key];\n        self[attribute.name] = attribute.value;\n      });\n    }\n\n    self.config = self.config || props.config;\n\n    if (self.config) {\n      try {\n        self.config = JSON.parse(self.config);\n      } catch (err) {}\n    }\n\n    self.divId = self.divId || self.config && self.config.divId || props.id || \"openstad-component-\".concat(parseInt(100000000 * Math.random()));\n    window[self.divId] = _assertThisInitialized(_this);\n    return _this;\n  }\n\n  _createClass(OpenStadComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount(prevProps, prevState) {\n      var event = new Event('isReady');\n      self.isReady = true;\n      self.instance.dispatchEvent(event);\n    }\n  }]);\n\n  return OpenStadComponent;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vb3BlbnN0YWQtY29tcG9uZW50LW5sbWFwL25vZGVfbW9kdWxlcy9vcGVuc3RhZC1jb21wb25lbnQvc3JjL2luZGV4LmpzeD8xM2YyIl0sIm5hbWVzIjpbIk9wZW5TdGFkQ29tcG9uZW50IiwicHJvcHMiLCJzZWxmIiwiYXR0cmlidXRlcyIsIk9iamVjdCIsImtleXMiLCJmb3JFYWNoIiwia2V5IiwiYXR0cmlidXRlIiwibmFtZSIsInZhbHVlIiwiY29uZmlnIiwiSlNPTiIsInBhcnNlIiwiZXJyIiwiZGl2SWQiLCJpZCIsInBhcnNlSW50IiwiTWF0aCIsInJhbmRvbSIsIndpbmRvdyIsInByZXZQcm9wcyIsInByZXZTdGF0ZSIsImV2ZW50IiwiRXZlbnQiLCJpc1JlYWR5IiwiaW5zdGFuY2UiLCJkaXNwYXRjaEV2ZW50IiwiUmVhY3QiLCJDb21wb25lbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUVBOztJQUVxQkEsaUI7Ozs7O0FBRW5CLDZCQUFZQyxLQUFaLEVBQW1CO0FBQUE7O0FBQUE7O0FBRWpCLDJGQUFNQSxLQUFOOztBQUVBLFFBQUlDLElBQUksZ0NBQVI7O0FBRUEsUUFBSUQsS0FBSyxDQUFDRSxVQUFWLEVBQXNCO0FBQ3BCQyxZQUFNLENBQUNDLElBQVAsQ0FBWUosS0FBSyxDQUFDRSxVQUFsQixFQUE4QkcsT0FBOUIsQ0FBc0MsVUFBQ0MsR0FBRCxFQUFTO0FBQzdDLFlBQUlDLFNBQVMsR0FBR1AsS0FBSyxDQUFDRSxVQUFOLENBQWlCSSxHQUFqQixDQUFoQjtBQUNBTCxZQUFJLENBQUNNLFNBQVMsQ0FBQ0MsSUFBWCxDQUFKLEdBQXVCRCxTQUFTLENBQUNFLEtBQWpDO0FBQ0QsT0FIRDtBQUlEOztBQUVEUixRQUFJLENBQUNTLE1BQUwsR0FBY1QsSUFBSSxDQUFDUyxNQUFMLElBQWVWLEtBQUssQ0FBQ1UsTUFBbkM7O0FBRUEsUUFBSVQsSUFBSSxDQUFDUyxNQUFULEVBQWlCO0FBQ2YsVUFBSTtBQUNGVCxZQUFJLENBQUNTLE1BQUwsR0FBY0MsSUFBSSxDQUFDQyxLQUFMLENBQVdYLElBQUksQ0FBQ1MsTUFBaEIsQ0FBZDtBQUNELE9BRkQsQ0FFRSxPQUFPRyxHQUFQLEVBQVksQ0FBRTtBQUNqQjs7QUFFRFosUUFBSSxDQUFDYSxLQUFMLEdBQWFiLElBQUksQ0FBQ2EsS0FBTCxJQUFnQmIsSUFBSSxDQUFDUyxNQUFMLElBQWVULElBQUksQ0FBQ1MsTUFBTCxDQUFZSSxLQUEzQyxJQUFzRGQsS0FBSyxDQUFDZSxFQUE1RCxpQ0FBMEZDLFFBQVEsQ0FBRSxZQUFZQyxJQUFJLENBQUNDLE1BQUwsRUFBZCxDQUFsRyxDQUFiO0FBRUFDLFVBQU0sQ0FBQ2xCLElBQUksQ0FBQ2EsS0FBTixDQUFOO0FBdkJpQjtBQXlCbEI7Ozs7c0NBRWlCTSxTLEVBQVdDLFMsRUFBVztBQUN0QyxVQUFJQyxLQUFLLEdBQUcsSUFBSUMsS0FBSixDQUFVLFNBQVYsQ0FBWjtBQUNBdEIsVUFBSSxDQUFDdUIsT0FBTCxHQUFlLElBQWY7QUFDQXZCLFVBQUksQ0FBQ3dCLFFBQUwsQ0FBY0MsYUFBZCxDQUE0QkosS0FBNUI7QUFDRDs7OztFQWpDNENLLDRDQUFLLENBQUNDLFMiLCJmaWxlIjoiLi4vb3BlbnN0YWQtY29tcG9uZW50LW5sbWFwL25vZGVfbW9kdWxlcy9vcGVuc3RhZC1jb21wb25lbnQvc3JjL2luZGV4LmpzeC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbid1c2Ugc3RyaWN0JztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgT3BlblN0YWRDb21wb25lbnQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuXG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG5cbiAgICBzdXBlcihwcm9wcyk7XG5cbiAgICBsZXQgc2VsZiA9IHRoaXM7XG5cbiAgICBpZiAocHJvcHMuYXR0cmlidXRlcykge1xuICAgICAgT2JqZWN0LmtleXMocHJvcHMuYXR0cmlidXRlcykuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICAgIGxldCBhdHRyaWJ1dGUgPSBwcm9wcy5hdHRyaWJ1dGVzW2tleV07XG4gICAgICAgIHNlbGZbYXR0cmlidXRlLm5hbWVdID0gYXR0cmlidXRlLnZhbHVlO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgc2VsZi5jb25maWcgPSBzZWxmLmNvbmZpZyB8fCBwcm9wcy5jb25maWc7XG5cbiAgICBpZiAoc2VsZi5jb25maWcpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHNlbGYuY29uZmlnID0gSlNPTi5wYXJzZShzZWxmLmNvbmZpZyk7XG4gICAgICB9IGNhdGNoIChlcnIpIHt9XG4gICAgfVxuXG4gICAgc2VsZi5kaXZJZCA9IHNlbGYuZGl2SWQgfHwgKCBzZWxmLmNvbmZpZyAmJiBzZWxmLmNvbmZpZy5kaXZJZCApIHx8IHByb3BzLmlkIHx8IGBvcGVuc3RhZC1jb21wb25lbnQtJHsgIHBhcnNlSW50KCAxMDAwMDAwMDAgKiBNYXRoLnJhbmRvbSgpICl9YDtcbiAgICBcbiAgICB3aW5kb3dbc2VsZi5kaXZJZF0gPSB0aGlzO1xuXG4gIH1cblxuICBjb21wb25lbnREaWRNb3VudChwcmV2UHJvcHMsIHByZXZTdGF0ZSkge1xuICAgIGxldCBldmVudCA9IG5ldyBFdmVudCgnaXNSZWFkeScpO1xuICAgIHNlbGYuaXNSZWFkeSA9IHRydWU7XG4gICAgc2VsZi5pbnN0YW5jZS5kaXNwYXRjaEV2ZW50KGV2ZW50KTtcbiAgfVxuXG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../openstad-component-nlmap/node_modules/openstad-component/src/index.jsx\n");

/***/ }),

/***/ "../openstad-component-nlmap/src/component/map.jsx":
/*!*********************************************************!*\
  !*** ../openstad-component-nlmap/src/component/map.jsx ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return OpenStadComponentNLMap; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"react-dom\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var openstad_component_src_index_jsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! openstad-component/src/index.jsx */ \"../openstad-component-nlmap/node_modules/openstad-component/src/index.jsx\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n\n'use strict';\n\nvar OpenStadComponentNLMap =\n/*#__PURE__*/\nfunction (_OpenStadComponent) {\n  _inherits(OpenStadComponentNLMap, _OpenStadComponent);\n\n  function OpenStadComponentNLMap(props) {\n    var _this;\n\n    _classCallCheck(this, OpenStadComponentNLMap);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OpenStadComponentNLMap).call(this, props));\n\n    var self = _assertThisInitialized(_this); // config\n\n\n    var defaultConfig = {\n      target: self.divId,\n      style: 'standaard',\n      marker: false,\n      search: false,\n      center: {\n        latitude: 52.37104644463586,\n        longitude: 4.900402911007405\n      },\n      zoom: 14,\n      zoomposition: 'bottomleft',\n      disableDefaultUI: true,\n      polygon: null,\n      autoZoomAndCenter: false // onQueryResult: self.onQueryHandler\n\n    };\n    self.config = Object.assign(defaultConfig, self.config || {}); // external css and script files\n\n    self._loadedFiles = 0;\n    self.files = [{\n      type: 'css',\n      href: \"https://unpkg.com/leaflet@1.0.3/dist/leaflet.css\"\n    }, {\n      type: 'script',\n      src: \"https://unpkg.com/leaflet@1.0.3/dist/leaflet.js\"\n    }];\n\n    switch (self.config.variant) {\n      case \"amaps\":\n        // self.files.push({ type: 'css', href: \"https://map.data.amsterdam.nl/dist/css/ams-map.css\"}); // in tegenstelling tot wat ze beloven overschrijft dit ook css buiten de map\n        self.files.push({\n          type: 'script',\n          src: \"https://map.data.amsterdam.nl/dist/amaps.iife.js\"\n        });\n        break;\n\n      default:\n        self.files.push({\n          type: 'css',\n          href: \"https://nlmaps.nl/dist/assets/css/nlmaps.css\"\n        });\n        self.files.push({\n          type: 'script',\n          src: \"https://nlmaps.nl/dist/nlmaps.iife.js\"\n        });\n    }\n\n    self.files.push({\n      type: 'css',\n      href: \"https://unpkg.com/leaflet.markercluster@1.4.1/dist/MarkerCluster.css\"\n    });\n    self.files.push({\n      type: 'script',\n      src: \"https://unpkg.com/leaflet.markercluster@1.4.1/dist/leaflet.markercluster.js\"\n    });\n    self.markers = self.config.markers || [];\n    return _this;\n  }\n\n  _createClass(OpenStadComponentNLMap, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount(prevProps, prevState) {\n      this.loadNextFile();\n    }\n  }, {\n    key: \"loadNextFile\",\n    value: function loadNextFile() {\n      var self = this;\n      var file = self.files[self._loadedFiles];\n\n      if (file) {\n        var element;\n\n        if (file.type === 'script') {\n          element = document.createElement('script');\n          element.src = file.src;\n          element.async = true;\n        }\n\n        if (file.type === 'css') {\n          element = document.createElement('link');\n          element.href = file.href;\n          element.rel = 'stylesheet';\n        }\n\n        if (element) {\n          element.onload = function () {\n            self.loadNextFile();\n          };\n\n          this.instance.appendChild(element);\n        }\n      }\n\n      if (self._loadedFiles == self.files.length) {\n        // loading script files is ready; create the map\n        self.createMap(); // dispatch an event\n\n        var event = new Event('mapIsReady');\n        self.mapIsReady = true;\n        self.instance.dispatchEvent(event);\n      }\n\n      self._loadedFiles++;\n    }\n  }, {\n    key: \"createMap\",\n    value: function createMap() {\n      var self = this; // init map\n\n      switch (self.config.variant) {\n        case \"amaps\":\n          self.map = amaps.createMap(self.config);\n          break;\n\n        default:\n          self.map = nlmaps.createMap(self.config);\n      } // clustering\n\n\n      if (self.config.clustering && self.config.clustering.isActive && L.markerClusterGroup) {\n        var iconCreateFunction = self.config.clustering.iconCreateFunction || self.createClusterIcon;\n        if (iconCreateFunction && typeof iconCreateFunction == 'string') iconCreateFunction = eval(iconCreateFunction);\n        console.log(self.config.clustering.maxClusterRadius);\n        self.markerClusterGroup = L.markerClusterGroup({\n          iconCreateFunction: iconCreateFunction,\n          showCoverageOnHover: self.config.clustering.showCoverageOnHover,\n          maxClusterRadius: self.config.clustering.maxClusterRadius || 80\n        });\n        var onClusterClick = self.config.clustering.onClusterClick || self.onClusterClick;\n        if (typeof onClusterClick == 'string') onClusterClick = eval(onClusterClick);\n        self.markerClusterGroup.on('clusterclick', onClusterClick);\n        var onClusterAnimationEnd = self.config.clustering.onClusterAnimationEnd || self.onClusterAnimationEnd;\n        if (typeof onClusterAnimationEnd == 'string') onClusterAnimationEnd = eval(onClusterAnimationEnd);\n        self.markerClusterGroup.on('animationend', onClusterAnimationEnd);\n        self.map.addLayer(self.markerClusterGroup);\n      } // on map click\n\n\n      if (self.config.onMapClick) {\n        if (typeof self.config.onMapClick == 'string') self.config.onMapClick = eval(self.config.onMapClick);\n      }\n\n      self.map.on('click', self.config.onMapClick || self.onMapClick); // add polygon\n\n      if (self.config.polygon) {\n        self.createCutoutPolygon(self.config.polygon);\n      } // add markers\n\n\n      if (self.markers.length) {\n        self.markers.forEach(function (marker) {\n          self.addMarker(marker);\n        });\n      } // set bounds and center\n\n\n      if (self.config.autoZoomAndCenter) {\n        var centerOn = self.config.autoZoomAndCenter == 'polygon' && self.config.polygon || self.markers && self.markers.length && self.markers;\n\n        if (self.editorMarker) {\n          if (self.editorMarker.position) {\n            centerOn = [self.editorMarker];\n          } else {\n            centerOn = self.config.polygon;\n          }\n        }\n\n        if (centerOn) {\n          self.setBoundsAndCenter(centerOn);\n        }\n      }\n    }\n  }, {\n    key: \"addMarkers\",\n    value: function addMarkers(markerData) {\n      var self = this;\n      markerData.forEach(function (marker) {\n        self.addMarker(marker);\n      });\n    }\n  }, {\n    key: \"addMarker\",\n    value: function addMarker(markerData) {\n      var self = this;\n      var icon = markerData.icon;\n\n      if (!icon) {\n        var iconCreateFunction = self.config.iconCreateFunction;\n\n        if (iconCreateFunction && typeof iconCreateFunction == 'string') {\n          iconCreateFunction = eval(iconCreateFunction);\n          icon = iconCreateFunction();\n        }\n      }\n\n      var marker;\n\n      if (icon) {\n        marker = L.marker([markerData.lat, markerData.lng], {\n          icon: icon\n        });\n      } else {\n        marker = L.marker([markerData.lat, markerData.lng]);\n      }\n\n      marker.visible = true;\n      marker.data = markerData.data;\n      marker.doNotCluster = markerData.doNotCluster;\n\n      if (markerData.href) {\n        markerData.onClick = function () {\n          document.location.href = markerData.href;\n        };\n      }\n\n      var onClick = markerData.onClick != null && markerData.onClick || self.config.onMarkerClick || self.onMarkerClick;\n\n      if (onClick) {\n        if (typeof onClick == 'string') onClick = eval(onClick);\n        marker.on('click', onClick);\n      }\n\n      if (self.markerClusterGroup && !markerData.doNotCluster) {\n        self.markerClusterGroup.addLayer(marker);\n      } else {\n        self.map.addLayer(marker);\n      }\n\n      self.markers.push(marker);\n      return marker;\n    }\n  }, {\n    key: \"removeMarker\",\n    value: function removeMarker(marker) {\n      this.map.removeLayer(marker);\n    }\n  }, {\n    key: \"updateMarker\",\n    value: function updateMarker(marker, newData) {\n      if (newData.location) {\n        var newLatLng = new L.LatLng(newData.location.lat, newData.location.lng);\n        marker.setLatLng(newLatLng);\n      }\n    }\n  }, {\n    key: \"createClusterIcon\",\n    value: function createClusterIcon(cluster) {\n      var count = cluster.getChildCount();\n      return L.divIcon({\n        html: count,\n        className: 'openstad-component-nlmap-icon-cluster',\n        iconSize: L.point(20, 20),\n        iconAnchor: [20, 10]\n      });\n    }\n  }, {\n    key: \"createCutoutPolygon\",\n    value: function createCutoutPolygon(polygon) {\n      var self = this; // polygon must defined from the south west corner to work with the outer box\n\n      var bounds = L.polygon(polygon).getBounds();\n      var center = bounds.getCenter();\n      var smallest = 0;\n      var index = 0;\n      polygon.forEach(function (point, i) {\n        var y = Math.sin(point.lng - center.lng) * Math.cos(point.lat);\n        var x = Math.cos(center.lat) * Math.sin(point.lat) - Math.sin(center.lat) * Math.cos(point.lat) * Math.cos(point.lng - center.lng);\n        var bearing = Math.atan2(y, x) * 180 / Math.PI;\n\n        if (45 - bearing < smallest) {\n          smallest = 45 - bearing;\n          index = i;\n        }\n      });\n      var a = polygon.slice(0, index - 1);\n      var b = polygon.slice(index, polygon.length - 1);\n      polygon = b.concat(a); // outer box\n      // TODO: should be calculated dynamically from the center point\n\n      var delta1 = 0.01;\n      var delta2 = 5;\n      var outerBox = [{\n        lat: -90 + delta2,\n        lng: -180 + delta1\n      }, {\n        lat: -90 + delta2,\n        lng: 0\n      }, {\n        lat: -90 + delta2,\n        lng: 180 - delta1\n      }, {\n        lat: 0,\n        lng: 180 - delta1\n      }, {\n        lat: 90 - delta2,\n        lng: 180 - delta1\n      }, {\n        lat: 90 - delta2,\n        lng: 0\n      }, {\n        lat: 90 - delta2,\n        lng: -180 + delta1\n      }, {\n        lat: 90 - delta2,\n        lng: -180 + delta1\n      }, {\n        lat: 0,\n        lng: -180 + delta1\n      }]; // polygon style\n\n      var polygonStyle = Object.assign({\n        \"color\": \"#d00\",\n        \"fillColor\": \"#000\",\n        \"fillOpacity\": 0.15\n      }, self.config.polygonStyle);\n      var result = L.polygon([outerBox, polygon], polygonStyle);\n      self.map.addLayer(result);\n      return result;\n    }\n  }, {\n    key: \"removePolygon\",\n    value: function removePolygon(polygon) {\n      var self = this;\n\n      if (polygon) {\n        self.map.removeLayer(polygon);\n      }\n    }\n  }, {\n    key: \"setBoundsAndCenter\",\n    value: function setBoundsAndCenter(points) {\n      var self = this;\n      points = points || [];\n      var poly = [];\n      points.forEach(function (point) {\n        if (point._latlng) {\n          point = point._latlng;\n        }\n\n        if (point.position) {\n          point = point.position.coordinates ? {\n            lat: point.position.coordinates[0],\n            lng: point.position.coordinates[1]\n          } : point.position;\n        }\n\n        poly.push(point);\n      });\n      points.forEach(function (point) {\n        poly.push(point);\n      });\n      var bounds = L.latLngBounds(poly);\n      self.map.fitBounds(bounds);\n      var zoom = parseInt(self.map.getZoom());\n    }\n  }, {\n    key: \"showMarker\",\n    value: function showMarker(marker) {\n      var self = this;\n      marker.visible = true;\n\n      if (self.markerClusterGroup && !marker.doNotCluster) {\n        self.markerClusterGroup.addLayer(marker);\n      } else {\n        marker.addTo(self.map);\n      }\n    }\n  }, {\n    key: \"hideMarker\",\n    value: function hideMarker(marker) {\n      var self = this;\n      marker.visible = false;\n\n      if (self.markerClusterGroup && !marker.doNotCluster) {\n        self.markerClusterGroup.removeLayer(marker);\n      } else {\n        marker.remove(self.map);\n      }\n    }\n  }, {\n    key: \"setFilter\",\n    value: function setFilter(filterFuntion) {\n      var self = this;\n      self.filterFunction = filterFuntion;\n      self.applyFilter();\n    }\n  }, {\n    key: \"applyFilter\",\n    value: function applyFilter() {\n      var self = this;\n\n      if (self.filterFunction) {\n        self.markers.forEach(function (marker) {\n          if (self.filterFunction(marker)) {\n            self.showMarker(marker);\n          } else {\n            self.hideMarker(marker);\n          }\n        });\n      } else {\n        self.markers.forEach(function (marker) {\n          self.showMarker(marker);\n        });\n      }\n    }\n  }, {\n    key: \"getPointInfo\",\n    value: function getPointInfo(latlng, marker, next) {\n      // TODO: configurabel\n      var bagApiUrl1 = 'https://api.data.amsterdam.nl/bag/nummeraanduiding/?format=json&locatie=[[lat]],[[lng]],50';\n      var bagApiUrl2 = 'https://api.data.amsterdam.nl/bag/nummeraanduiding/[[id]]/?format=json';\n      var self = this;\n      latlng = latlng || {};\n      var url = bagApiUrl1.replace(/\\[\\[lat\\]\\]/, latlng.lat).replace(/\\[\\[lng\\]\\]/, latlng.lng);\n      fetch(url).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        var id = json && json.results && json.results[0] && json.results[0].landelijk_id;\n        var url = bagApiUrl2.replace(/\\[\\[id\\]\\]/, id);\n        fetch(url).then(function (response) {\n          return response.json();\n        }).then(function (json) {\n          json.lat = latlng.lat;\n          json.lng = latlng.lng;\n          if (next) next(json, marker);\n        });\n      })[\"catch\"](function (err) {\n        console.log('Zoek adres: niet goed');\n        console.log(err);\n        if (next) next({}, marker);\n      });\n    }\n  }, {\n    key: \"onMapClick\",\n    value: function onMapClick() {// placeholder\n    }\n  }, {\n    key: \"onMarkerClick\",\n    value: function onMarkerClick() {// placeholder\n    }\n  }, {\n    key: \"onClusterClick\",\n    value: function onClusterClick() {// placeholder\n    }\n  }, {\n    key: \"onClusterAnimationEnd\",\n    value: function onClusterAnimationEnd() {// placeholder\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        id: this.divId,\n        className: this.props.className || 'openstad-component-nlmap',\n        ref: function ref(el) {\n          return _this2.instance = el;\n        }\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        id: this.divId + '-map'\n      }));\n    }\n  }]);\n\n  return OpenStadComponentNLMap;\n}(openstad_component_src_index_jsx__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../openstad-component-nlmap/src/component/map.jsx\n");

/***/ }),

/***/ "../openstad-component/src/index.jsx":
/*!*******************************************!*\
  !*** ../openstad-component/src/index.jsx ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return OpenStadComponent; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n'use strict';\n\nvar OpenStadComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(OpenStadComponent, _React$Component);\n\n  function OpenStadComponent(props) {\n    var _this;\n\n    _classCallCheck(this, OpenStadComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OpenStadComponent).call(this, props));\n\n    var self = _assertThisInitialized(_this);\n\n    if (props.attributes) {\n      Object.keys(props.attributes).forEach(function (key) {\n        var attribute = props.attributes[key];\n        self[attribute.name] = attribute.value;\n      });\n    }\n\n    self.config = self.config || props.config;\n\n    if (self.config) {\n      try {\n        self.config = JSON.parse(self.config);\n      } catch (err) {}\n    }\n\n    self.divId = self.divId || self.config && self.config.divId || props.id || \"openstad-component-\".concat(parseInt(100000000 * Math.random()));\n    window[self.divId] = _assertThisInitialized(_this);\n    return _this;\n  }\n\n  _createClass(OpenStadComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount(prevProps, prevState) {\n      var event = new Event('isReady');\n      self.isReady = true;\n      self.instance.dispatchEvent(event);\n    }\n  }]);\n\n  return OpenStadComponent;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vb3BlbnN0YWQtY29tcG9uZW50L3NyYy9pbmRleC5qc3g/NjMyOCJdLCJuYW1lcyI6WyJPcGVuU3RhZENvbXBvbmVudCIsInByb3BzIiwic2VsZiIsImF0dHJpYnV0ZXMiLCJPYmplY3QiLCJrZXlzIiwiZm9yRWFjaCIsImtleSIsImF0dHJpYnV0ZSIsIm5hbWUiLCJ2YWx1ZSIsImNvbmZpZyIsIkpTT04iLCJwYXJzZSIsImVyciIsImRpdklkIiwiaWQiLCJwYXJzZUludCIsIk1hdGgiLCJyYW5kb20iLCJ3aW5kb3ciLCJwcmV2UHJvcHMiLCJwcmV2U3RhdGUiLCJldmVudCIsIkV2ZW50IiwiaXNSZWFkeSIsImluc3RhbmNlIiwiZGlzcGF0Y2hFdmVudCIsIlJlYWN0IiwiQ29tcG9uZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFFQTs7SUFFcUJBLGlCOzs7OztBQUVuQiw2QkFBWUMsS0FBWixFQUFtQjtBQUFBOztBQUFBOztBQUVqQiwyRkFBTUEsS0FBTjs7QUFFQSxRQUFJQyxJQUFJLGdDQUFSOztBQUVBLFFBQUlELEtBQUssQ0FBQ0UsVUFBVixFQUFzQjtBQUNwQkMsWUFBTSxDQUFDQyxJQUFQLENBQVlKLEtBQUssQ0FBQ0UsVUFBbEIsRUFBOEJHLE9BQTlCLENBQXNDLFVBQUNDLEdBQUQsRUFBUztBQUM3QyxZQUFJQyxTQUFTLEdBQUdQLEtBQUssQ0FBQ0UsVUFBTixDQUFpQkksR0FBakIsQ0FBaEI7QUFDQUwsWUFBSSxDQUFDTSxTQUFTLENBQUNDLElBQVgsQ0FBSixHQUF1QkQsU0FBUyxDQUFDRSxLQUFqQztBQUNELE9BSEQ7QUFJRDs7QUFFRFIsUUFBSSxDQUFDUyxNQUFMLEdBQWNULElBQUksQ0FBQ1MsTUFBTCxJQUFlVixLQUFLLENBQUNVLE1BQW5DOztBQUVBLFFBQUlULElBQUksQ0FBQ1MsTUFBVCxFQUFpQjtBQUNmLFVBQUk7QUFDRlQsWUFBSSxDQUFDUyxNQUFMLEdBQWNDLElBQUksQ0FBQ0MsS0FBTCxDQUFXWCxJQUFJLENBQUNTLE1BQWhCLENBQWQ7QUFDRCxPQUZELENBRUUsT0FBT0csR0FBUCxFQUFZLENBQUU7QUFDakI7O0FBRURaLFFBQUksQ0FBQ2EsS0FBTCxHQUFhYixJQUFJLENBQUNhLEtBQUwsSUFBZ0JiLElBQUksQ0FBQ1MsTUFBTCxJQUFlVCxJQUFJLENBQUNTLE1BQUwsQ0FBWUksS0FBM0MsSUFBc0RkLEtBQUssQ0FBQ2UsRUFBNUQsaUNBQTBGQyxRQUFRLENBQUUsWUFBWUMsSUFBSSxDQUFDQyxNQUFMLEVBQWQsQ0FBbEcsQ0FBYjtBQUVBQyxVQUFNLENBQUNsQixJQUFJLENBQUNhLEtBQU4sQ0FBTjtBQXZCaUI7QUF5QmxCOzs7O3NDQUVpQk0sUyxFQUFXQyxTLEVBQVc7QUFDdEMsVUFBSUMsS0FBSyxHQUFHLElBQUlDLEtBQUosQ0FBVSxTQUFWLENBQVo7QUFDQXRCLFVBQUksQ0FBQ3VCLE9BQUwsR0FBZSxJQUFmO0FBQ0F2QixVQUFJLENBQUN3QixRQUFMLENBQWNDLGFBQWQsQ0FBNEJKLEtBQTVCO0FBQ0Q7Ozs7RUFqQzRDSyw0Q0FBSyxDQUFDQyxTIiwiZmlsZSI6Ii4uL29wZW5zdGFkLWNvbXBvbmVudC9zcmMvaW5kZXguanN4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBPcGVuU3RhZENvbXBvbmVudCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG5cbiAgY29uc3RydWN0b3IocHJvcHMpIHtcblxuICAgIHN1cGVyKHByb3BzKTtcblxuICAgIGxldCBzZWxmID0gdGhpcztcblxuICAgIGlmIChwcm9wcy5hdHRyaWJ1dGVzKSB7XG4gICAgICBPYmplY3Qua2V5cyhwcm9wcy5hdHRyaWJ1dGVzKS5mb3JFYWNoKChrZXkpID0+IHtcbiAgICAgICAgbGV0IGF0dHJpYnV0ZSA9IHByb3BzLmF0dHJpYnV0ZXNba2V5XTtcbiAgICAgICAgc2VsZlthdHRyaWJ1dGUubmFtZV0gPSBhdHRyaWJ1dGUudmFsdWU7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBzZWxmLmNvbmZpZyA9IHNlbGYuY29uZmlnIHx8IHByb3BzLmNvbmZpZztcblxuICAgIGlmIChzZWxmLmNvbmZpZykge1xuICAgICAgdHJ5IHtcbiAgICAgICAgc2VsZi5jb25maWcgPSBKU09OLnBhcnNlKHNlbGYuY29uZmlnKTtcbiAgICAgIH0gY2F0Y2ggKGVycikge31cbiAgICB9XG5cbiAgICBzZWxmLmRpdklkID0gc2VsZi5kaXZJZCB8fCAoIHNlbGYuY29uZmlnICYmIHNlbGYuY29uZmlnLmRpdklkICkgfHwgcHJvcHMuaWQgfHwgYG9wZW5zdGFkLWNvbXBvbmVudC0keyAgcGFyc2VJbnQoIDEwMDAwMDAwMCAqIE1hdGgucmFuZG9tKCkgKX1gO1xuICAgIFxuICAgIHdpbmRvd1tzZWxmLmRpdklkXSA9IHRoaXM7XG5cbiAgfVxuXG4gIGNvbXBvbmVudERpZE1vdW50KHByZXZQcm9wcywgcHJldlN0YXRlKSB7XG4gICAgbGV0IGV2ZW50ID0gbmV3IEV2ZW50KCdpc1JlYWR5Jyk7XG4gICAgc2VsZi5pc1JlYWR5ID0gdHJ1ZTtcbiAgICBzZWxmLmluc3RhbmNlLmRpc3BhdGNoRXZlbnQoZXZlbnQpO1xuICB9XG5cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../openstad-component/src/index.jsx\n");

/***/ }),

/***/ "./src/component/filterbar.jsx":
/*!*************************************!*\
  !*** ./src/component/filterbar.jsx ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Filterbar; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _search_jsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./search.jsx */ \"./src/component/search.jsx\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n'use strict';\n\nvar Filterbar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Filterbar, _React$Component);\n\n  function Filterbar(props) {\n    var _this;\n\n    _classCallCheck(this, Filterbar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Filterbar).call(this, props));\n    var defaultConfig = {\n      types: props.config && props.config.types || [],\n      areas: props.config && props.config.areas || []\n    };\n    _this.config = Object.assign(defaultConfig, _this.props.config || {});\n    _this.state = {\n      selectedType: undefined,\n      types: _this.config.types,\n      selectedArea: undefined,\n      areas: _this.config.areas\n    };\n    return _this;\n  }\n\n  _createClass(Filterbar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount(prevProps, prevState) {}\n  }, {\n    key: \"handleTypeChange\",\n    value: function handleTypeChange(value) {\n      this.setState(_objectSpread({}, this.state, {\n        selectedType: value\n      })); // dispatch an event\n\n      var event = new CustomEvent('typeFilterUpdate', {\n        detail: {\n          value: value\n        }\n      });\n      this.instance.dispatchEvent(event);\n    }\n  }, {\n    key: \"setAreaValue\",\n    value: function setAreaValue(value) {\n      this.setState(_objectSpread({}, this.state, {\n        selectedArea: value\n      }));\n    }\n  }, {\n    key: \"handleAreaChange\",\n    value: function handleAreaChange(value) {\n      this.setState(_objectSpread({}, this.state, {\n        selectedArea: value\n      })); // dispatch an event\n\n      var event = new CustomEvent('areaFilterUpdate', {\n        detail: {\n          value: this.state.areas.find(function (area) {\n            return value == area.value;\n          })\n        }\n      });\n      this.instance.dispatchEvent(event);\n    }\n  }, {\n    key: \"resetTypeAndArea\",\n    value: function resetTypeAndArea() {\n      this.handleTypeChange(0);\n      this.handleAreaChange(0);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var self = this;\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        id: self.id,\n        className: self.props.className || 'openstad-component-filterbar',\n        ref: function ref(el) {\n          return self.instance = el;\n        }\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_search_jsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n        config: _objectSpread({}, this.config),\n        ref: function ref(el) {\n          return self.search = el;\n        }\n      }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"openstad-align-right-container\"\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"select\", {\n        value: self.state.selectedType,\n        onChange: function onChange() {\n          return self.handleTypeChange(self.typeSelector.value);\n        },\n        className: \"openstad-default-select openstad-margin-right\",\n        ref: function ref(el) {\n          return self.typeSelector = el;\n        }\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"option\", {\n        value: \"0\"\n      }, \"Alle thema's\"), \";\", self.state.types.map(function (type, i) {\n        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"option\", {\n          style: {\n            color: type.color\n          },\n          key: 'type-option-' + i\n        }, type.name);\n      })), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"select\", {\n        value: self.state.selectedArea,\n        onChange: function onChange() {\n          return self.handleAreaChange(self.areaSelector.value);\n        },\n        className: \"openstad-default-select openstad-margin-right\",\n        ref: function ref(el) {\n          return self.areaSelector = el;\n        }\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"option\", {\n        value: \"0\"\n      }, \"Geen gebied geselecteerd\"), \";\", self.state.areas.map(function (area, i) {\n        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"option\", {\n          style: {\n            color: area.color\n          },\n          value: area.value,\n          key: 'type-option-' + i\n        }, area.name);\n      })), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"button\", {\n        value: \"reset\",\n        onClick: function onClick() {\n          return self.resetTypeAndArea();\n        },\n        className: \"openstad-button\",\n        ref: function ref(el) {\n          return self.resetButton = el;\n        }\n      }, \"Alles tonen\")));\n    }\n  }]);\n\n  return Filterbar;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/component/filterbar.jsx\n");

/***/ }),

/***/ "./src/component/idea-details.jsx":
/*!****************************************!*\
  !*** ./src/component/idea-details.jsx ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return IdeasDetails; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n// TODO: dit moet een eigen repo worden\n\n'use strict';\n\nvar IdeasDetails =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(IdeasDetails, _React$Component);\n\n  function IdeasDetails(props) {\n    var _this;\n\n    _classCallCheck(this, IdeasDetails);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(IdeasDetails).call(this, props)); // config\n\n    var defaultConfig = {\n      ideaId: null\n    };\n    _this.config = Object.assign(defaultConfig, _this.props.config || {}); // this.config.onIdeaClick = this.config.onIdeaClick || this.onIdeaClick.bind(this);\n\n    _this.idea = _this.props.idea;\n    return _this;\n  }\n\n  _createClass(IdeasDetails, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount(prevProps, prevState) {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var self = this;\n      var voteButton = null;\n\n      if (self.config.userJWT) {\n        voteButton = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"openstad-component-votebutton\"\n        }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"button\", {\n          className: \"openstad-component-votebutton-button openstad-button-blue\",\n          onClick: function onClick() {\n            return self.doVote();\n          }\n        }, \"eens\"));\n      } else {\n        voteButton = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"openstad-component-votebutton\"\n        }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"button\", {\n          href: \"/login\",\n          className: \"openstad-button-blue openstad-not-logged-in-button\"\n        }, \"Inloggen\"));\n      }\n\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        id: self.id,\n        className: self.props.className || 'openstad-component-info-block-idea-details',\n        ref: function ref(el) {\n          return self.instance = el;\n        }\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"h3\", null, eval(\"self.props.idea.\".concat(self.config.titleField))), voteButton);\n    }\n  }]);\n\n  return IdeasDetails;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50L2lkZWEtZGV0YWlscy5qc3g/NjY5ZCJdLCJuYW1lcyI6WyJJZGVhc0RldGFpbHMiLCJwcm9wcyIsImRlZmF1bHRDb25maWciLCJpZGVhSWQiLCJjb25maWciLCJPYmplY3QiLCJhc3NpZ24iLCJpZGVhIiwicHJldlByb3BzIiwicHJldlN0YXRlIiwic2VsZiIsInZvdGVCdXR0b24iLCJ1c2VySldUIiwiZG9Wb3RlIiwiaWQiLCJjbGFzc05hbWUiLCJlbCIsImluc3RhbmNlIiwiZXZhbCIsInRpdGxlRmllbGQiLCJSZWFjdCIsIkNvbXBvbmVudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBRUE7QUFFQTs7SUFFcUJBLFk7Ozs7O0FBRW5CLHdCQUFZQyxLQUFaLEVBQW1CO0FBQUE7O0FBQUE7O0FBRWpCLHNGQUFNQSxLQUFOLEdBRmlCLENBSW5COztBQUNBLFFBQUlDLGFBQWEsR0FBRztBQUNuQkMsWUFBTSxFQUFFO0FBRFcsS0FBcEI7QUFHQSxVQUFLQyxNQUFMLEdBQWNDLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjSixhQUFkLEVBQTZCLE1BQUtELEtBQUwsQ0FBV0csTUFBWCxJQUFxQixFQUFsRCxDQUFkLENBUm1CLENBU25COztBQUVFLFVBQUtHLElBQUwsR0FBWSxNQUFLTixLQUFMLENBQVdNLElBQXZCO0FBWGlCO0FBYWxCOzs7O3NDQUVnQkMsUyxFQUFXQyxTLEVBQVcsQ0FDdkM7Ozs2QkFFUTtBQUVOLFVBQUlDLElBQUksR0FBRyxJQUFYO0FBRUEsVUFBSUMsVUFBVSxHQUFHLElBQWpCOztBQUNBLFVBQUlELElBQUksQ0FBQ04sTUFBTCxDQUFZUSxPQUFoQixFQUF5QjtBQUN2QkQsa0JBQVUsR0FDWjtBQUFLLG1CQUFTLEVBQUM7QUFBZixXQUNDO0FBQVEsbUJBQVMsRUFBQywyREFBbEI7QUFBOEUsaUJBQU8sRUFBRTtBQUFBLG1CQUFNRCxJQUFJLENBQUNHLE1BQUwsRUFBTjtBQUFBO0FBQXZGLGtCQURELENBREU7QUFPRCxPQVJELE1BUU87QUFDTEYsa0JBQVUsR0FDWjtBQUFLLG1CQUFTLEVBQUM7QUFBZixXQUNNO0FBQVEsY0FBSSxFQUFDLFFBQWI7QUFBc0IsbUJBQVMsRUFBQztBQUFoQyxzQkFETixDQURFO0FBS0Q7O0FBRUQsYUFDRDtBQUFLLFVBQUUsRUFBRUQsSUFBSSxDQUFDSSxFQUFkO0FBQWtCLGlCQUFTLEVBQUVKLElBQUksQ0FBQ1QsS0FBTCxDQUFXYyxTQUFYLElBQXdCLDRDQUFyRDtBQUFtRyxXQUFHLEVBQUUsYUFBQUMsRUFBRTtBQUFBLGlCQUFLTixJQUFJLENBQUNPLFFBQUwsR0FBZ0JELEVBQXJCO0FBQUE7QUFBMUcsU0FFQyx1RUFBS0UsSUFBSSwyQkFBb0JSLElBQUksQ0FBQ04sTUFBTCxDQUFZZSxVQUFoQyxFQUFULENBRkQsRUFHTVIsVUFITixDQURDO0FBU0Q7Ozs7RUFsRHVDUyw0Q0FBSyxDQUFDQyxTIiwiZmlsZSI6Ii4vc3JjL2NvbXBvbmVudC9pZGVhLWRldGFpbHMuanN4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gVE9ETzogZGl0IG1vZXQgZWVuIGVpZ2VuIHJlcG8gd29yZGVuXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbid1c2Ugc3RyaWN0JztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSWRlYXNEZXRhaWxzIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcblxuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuXG4gICAgc3VwZXIocHJvcHMpO1xuXG5cdFx0Ly8gY29uZmlnXG5cdFx0bGV0IGRlZmF1bHRDb25maWcgPSB7XG5cdFx0XHRpZGVhSWQ6IG51bGxcblx0XHR9O1xuXHRcdHRoaXMuY29uZmlnID0gT2JqZWN0LmFzc2lnbihkZWZhdWx0Q29uZmlnLCB0aGlzLnByb3BzLmNvbmZpZyB8fCB7fSlcblx0XHQvLyB0aGlzLmNvbmZpZy5vbklkZWFDbGljayA9IHRoaXMuY29uZmlnLm9uSWRlYUNsaWNrIHx8IHRoaXMub25JZGVhQ2xpY2suYmluZCh0aGlzKTtcblxuICAgIHRoaXMuaWRlYSA9IHRoaXMucHJvcHMuaWRlYTtcblxuICB9XG5cblx0Y29tcG9uZW50RGlkTW91bnQocHJldlByb3BzLCBwcmV2U3RhdGUpIHtcblx0fVxuXG5cdHJlbmRlcigpIHtcblxuICAgIGxldCBzZWxmID0gdGhpcztcblxuICAgIGxldCB2b3RlQnV0dG9uID0gbnVsbDtcbiAgICBpZiAoc2VsZi5jb25maWcudXNlckpXVCkge1xuICAgICAgdm90ZUJ1dHRvbiA9IChcblx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJvcGVuc3RhZC1jb21wb25lbnQtdm90ZWJ1dHRvblwiPlxuXHRcdFx0XHRcdDxidXR0b24gY2xhc3NOYW1lPVwib3BlbnN0YWQtY29tcG9uZW50LXZvdGVidXR0b24tYnV0dG9uIG9wZW5zdGFkLWJ1dHRvbi1ibHVlXCIgb25DbGljaz17KCkgPT4gc2VsZi5kb1ZvdGUoKX0+XG4gICAgICAgICAgICBlZW5zXG5cdFx0XHRcdFx0PC9idXR0b24+XG5cdFx0XHRcdDwvZGl2PlxuICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdm90ZUJ1dHRvbiA9IChcblx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJvcGVuc3RhZC1jb21wb25lbnQtdm90ZWJ1dHRvblwiPlxuICAgICAgICAgIDxidXR0b24gaHJlZj1cIi9sb2dpblwiIGNsYXNzTmFtZT1cIm9wZW5zdGFkLWJ1dHRvbi1ibHVlIG9wZW5zdGFkLW5vdC1sb2dnZWQtaW4tYnV0dG9uXCI+SW5sb2dnZW48L2J1dHRvbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICApO1xuICAgIH1cblxuICAgIHJldHVybiAoXG5cdFx0XHQ8ZGl2IGlkPXtzZWxmLmlkfSBjbGFzc05hbWU9e3NlbGYucHJvcHMuY2xhc3NOYW1lIHx8ICdvcGVuc3RhZC1jb21wb25lbnQtaW5mby1ibG9jay1pZGVhLWRldGFpbHMnfSByZWY9e2VsID0+IChzZWxmLmluc3RhbmNlID0gZWwpfT5cblxuXHRcdFx0XHQ8aDM+e2V2YWwoYHNlbGYucHJvcHMuaWRlYS4ke3NlbGYuY29uZmlnLnRpdGxlRmllbGR9YCl9PC9oMz5cbiAgICAgICAge3ZvdGVCdXR0b259XG4gICAgICAgIFxuXHRcdFx0PC9kaXY+XG4gICAgKTtcblxuICB9XG5cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/component/idea-details.jsx\n");

/***/ }),

/***/ "./src/component/idea-form.jsx":
/*!*************************************!*\
  !*** ./src/component/idea-form.jsx ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return IdeasForm; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n // TODO: import OpenStadComponentTextarea from './openstad-component-formelements/textarea.jsx';\n\n'use strict';\n\nvar IdeasForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(IdeasForm, _React$Component);\n\n  function IdeasForm(props) {\n    var _this;\n\n    _classCallCheck(this, IdeasForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(IdeasForm).call(this, props)); // config\n\n    var defaultConfig = {\n      ideaId: null,\n      formfields: {\n        title: '',\n        summary: '',\n        description: '',\n        images: []\n      },\n      titleMinLength: 10,\n      titleMaxLength: 20,\n      summaryMinLength: 20,\n      summaryMaxLength: 140,\n      descriptionMinLength: 140,\n      descriptionMaxLength: 5000\n    };\n    _this.config = Object.assign(defaultConfig, _this.props.config || {});\n    _this.state = {\n      formfields: _this.config.formfields,\n      ideaId: _this.config.ideaId\n    };\n    _this.handleFieldChange = _this.handleFieldChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(IdeasForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount(prevProps, prevState) {\n      // filepond\n      this._loadedFiles = 0;\n      this.files = [\"https://unpkg.com/filepond/dist/filepond.js\", \"https://unpkg.com/filepond-polyfill/dist/filepond-polyfill.js\", \"https://unpkg.com/filepond-plugin-image-preview/dist/filepond-plugin-image-preview.js\", \"https://unpkg.com/filepond-plugin-file-validate-type/dist/filepond-plugin-file-validate-type.js\", \"https://unpkg.com/filepond-plugin-file-validate-size/dist/filepond-plugin-file-validate-size.js\", \"https://unpkg.com/filepond-plugin-file-poster/dist/filepond-plugin-file-poster.js\"];\n      this.loadNextFile();\n    }\n  }, {\n    key: \"loadNextFile\",\n    value: function loadNextFile() {\n      var self = this;\n      var file = self.files[self._loadedFiles];\n\n      if (file) {\n        var element;\n        element = document.createElement('script');\n        element.src = file;\n        element.async = true;\n\n        if (element) {\n          element.onload = function () {\n            self.loadNextFile();\n          };\n\n          document.body.appendChild(element);\n        }\n      }\n\n      if (self._loadedFiles == self.files.length) {\n        self.fileUploaderInit();\n      }\n\n      self._loadedFiles++;\n    }\n  }, {\n    key: \"handleFieldChange\",\n    value: function handleFieldChange(name, value) {\n      var state = _objectSpread({}, this.state);\n\n      state.formfields[name] = value;\n      this.setState(state);\n      this.dispatchUpdateEditIdea(state.formfields);\n    }\n  }, {\n    key: \"dispatchUpdateEditIdea\",\n    value: function dispatchUpdateEditIdea(idea) {\n      var event = new CustomEvent('updateEditIdea', {\n        detail: {\n          idea: idea\n        }\n      });\n      document.dispatchEvent(event);\n    }\n  }, {\n    key: \"validateIdea\",\n    value: function validateIdea() {\n      var self = this;\n      var isValid = true; // location\n      // if (document.querySelector('#location').value) {\n      //   document.querySelector('#form-warning-location').style.display = 'none';\n      // } else {\n      //   document.querySelector('#form-warning-location').style.display = 'block';\n      //   isValid = false;\n      // }\n      // title\n\n      console.log(self.titleField.value.length, this.config.titleMinLength);\n\n      if (self.titleField.value.length < this.config.titleMinLength) {\n        // todo: dit moet niet met querySelector maar met self.whatever\n        document.querySelector('#form-warning-title').style.display = 'block';\n        document.querySelector('#form-warning-title').innerHTML = document.querySelector('#form-warning-title').innerHTML.replace('[[langkort]]', 'kort');\n        isValid = false;\n      } else if (self.titleField.value.length > this.config.titleMaxLength) {\n        document.querySelector('#form-warning-title').style.display = 'block';\n        document.querySelector('#form-warning-title').innerHTML = document.querySelector('#form-warning-title').innerHTML.replace('[[langkort]]', 'lang');\n        isValid = false;\n      } else {\n        document.querySelector('#form-warning-title').style.display = 'none';\n      } // summary\n\n\n      if (self.summaryField.value.length < this.config.summaryMinLength) {\n        // todo: dit moet niet met querySelector maar met self.whatever\n        document.querySelector('#form-warning-summary').style.display = 'block';\n        document.querySelector('#form-warning-summary').innerHTML = document.querySelector('#form-warning-summary').innerHTML.replace('[[langkort]]', 'kort');\n        isValid = false;\n      } else if (self.summaryField.value.length > this.config.summaryMaxLength) {\n        document.querySelector('#form-warning-summary').style.display = 'block';\n        document.querySelector('#form-warning-summary').innerHTML = document.querySelector('#form-warning-summary').innerHTML.replace('[[langkort]]', 'lang');\n        isValid = false;\n      } else {\n        document.querySelector('#form-warning-summary').style.display = 'none';\n      } // description\n\n\n      if (self.descriptionField.value.length < this.config.descriptionMinLength) {\n        // todo: dit moet niet met querySelector maar met self.whatever\n        document.querySelector('#form-warning-description').style.display = 'block';\n        document.querySelector('#form-warning-description').innerHTML = document.querySelector('#form-warning-description').innerHTML.replace('[[langkort]]', 'kort');\n        isValid = false;\n      } else if (self.descriptionField.value.length > this.config.descriptionMaxLength) {\n        document.querySelector('#form-warning-description').style.display = 'block';\n        document.querySelector('#form-warning-description').innerHTML = document.querySelector('#form-warning-description').innerHTML.replace('[[langkort]]', 'lang');\n        isValid = false;\n      } else {\n        document.querySelector('#form-warning-description').style.display = 'none';\n      } // type\n      // if (document.querySelector('#type').value) {\n      //   document.querySelector('#form-warning-type').style.display = 'none';\n      // } else {\n      //   document.querySelector('#form-warning-type').style.display = 'block';\n      //   openStep(1, document.querySelector('#type').offsetTop - 80);\n      //   isValid = false;\n      // }\n      // categorie\n      // if (document.querySelector('#categorie').value) {\n      //   document.querySelector('#form-warning-categorie').style.display = 'none';\n      // } else {\n      //   document.querySelector('#form-warning-categorie').style.display = 'block';\n      //   openStep(1, document.querySelector('#categorie').offsetTop - 80);\n      //   isValid = false;\n      // }\n      // images\n      // document.querySelector('#form-warning-images').style.display = 'none';\n      // if ( imageuploader && imageuploader.getFiles ) {\n      //   var images = imageuploader.getFiles();\n      //   images.forEach(function(image) {\n      //     if (!image.serverId) {\n      //   \t  document.querySelector('#form-warning-images').style.display = 'block';\n      //   \t  isValid = false;\n      //     }\n      //   });\n      // }\n      // time ?\n\n\n      return isValid;\n    }\n  }, {\n    key: \"submitIdea\",\n    value: function submitIdea() {\n      var self = this;\n      console.log('validateIdea', self.validateIdea());\n      if (!self.validateIdea()) return;\n      if (!userJWT) return showError('Je bent niet ingelogd');\n      var url = apiUrl + '/api/site/' + siteId + '/idea';\n      var body = {\n        title: 'Nieuw probleem',\n        summary: \"Een nieuwe inzending op 'Afval in West'\",\n        description: form.querySelector('#description').value,\n        extraData: {\n          categorie: form.querySelector('#categorie').value,\n          type: form.querySelector('#type').value,\n          solution: form.querySelector('#solution').value,\n          time: {\n            weekday: JSON.parse(form.querySelector('#weekday').value || '[]'),\n            daypart: JSON.parse(form.querySelector('#daypart').value || '[]'),\n            timeofday: form.querySelector('#timeofday').value\n          },\n          images: []\n        }\n      };\n\n      if (form.querySelector('#location').value) {\n        body.location = JSON.stringify({\n          \"type\": \"Point\",\n          \"coordinates\": JSON.parse(form.querySelector('#location').value)\n        });\n      }\n\n      if (imageuploader && imageuploader.getFiles) {\n        var images = imageuploader.getFiles();\n        images.forEach(function (image) {\n          try {\n            var serverId = JSON.parse(image.serverId);\n            body.extraData.images.push(serverId.url);\n          } catch (err) {\n            console.log(err);\n          }\n        });\n      }\n\n      $.ajax({\n        url: url,\n        dataType: \"json\",\n        crossDomain: true,\n        method: \"POST\",\n        data: body,\n        beforeSend: function beforeSend(request) {\n          request.setRequestHeader(\"Accept\", \"application/json\");\n          request.setRequestHeader('X-Authorization', 'Bearer ' + userJWT);\n        },\n        success: function success(json) {\n          currentMarker.isInput = false;\n          currentMarker.idea = json;\n          currentInput = {};\n          window.location.hash = '#ideaId=' + json.id;\n          document.querySelector('#info-block').innerHTML = document.querySelector('#new-idea-result-container').innerHTML;\n        },\n        error: function error(_error) {\n          showError(_error);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var self = this;\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        id: self.id,\n        className: self.props.className || 'openstad-component-info-block-idea-form',\n        ref: function ref(el) {\n          return self.instance = el;\n        }\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"form\", {\n        className: \"openstad-component-form\"\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"input\", {\n        type: \"hidden\",\n        id: \"extraData\",\n        name: \"extraData\",\n        value: \"\"\n      }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"br\", null), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"h1\", null, \"Kans of knelpunt toevoegen\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"openstad-component-form-group\"\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"h2\", null, \"Titel plan\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"form-info\"\n      }, \"Geef je voorstel een duidelijke titel, zodat anderen jouw inzending makkelijk kunnen vinden en direct snappen waar het over gaat.\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        value: this.state.formfields.title,\n        onChange: function onChange() {\n          return _this2.handleFieldChange('title', self.titleField.value);\n        },\n        ref: function ref(el) {\n          return self.titleField = el;\n        }\n      }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"br\", null), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        id: \"charsLeftTitle\",\n        className: \"charsLeft\"\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"min error visible\"\n      }, \"Nog minimaal \", react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", null, \"2\"), \" tekens\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"max\"\n      }, \"Je hebt nog \", react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", null, \"0\"), \" tekens over.\")), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n        id: \"form-warning-title\",\n        className: \"form-warning\"\n      }, \"Je titel is te [[langkort]]\")), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"openstad-component-form-group\"\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"h2\", null, \"Samenvatting\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"form-info\"\n      }, \"Vertel in maximaal \", this.config.summaryMinLength, \" tekens iets meer over je plan.\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"textarea\", {\n        type: \"text\",\n        name: \"summary\",\n        value: this.state.formfields.summary,\n        onChange: function onChange() {\n          return _this2.handleFieldChange('summary', self.summaryField.value);\n        },\n        ref: function ref(el) {\n          return self.summaryField = el;\n        }\n      }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"br\", null), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        id: \"charsLeftSummary\",\n        className: \"charsLeft\"\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"min error visible\"\n      }, \"Nog minimaal \", react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", null, \"2\"), \" tekens\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"max\"\n      }, \"Je hebt nog \", react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", null, \"0\"), \" tekens over.\")), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n        id: \"form-warning-summary\",\n        className: \"form-warning\"\n      }, \"Je samenvatting is te [[langkort]]\")), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"openstad-component-form-group\"\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"h2\", null, \"Beschrijving\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"form-info\"\n      }, \"Gebruik de ruimte hieronder om je voorstel verder uit te leggen.\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"textarea\", {\n        type: \"text\",\n        name: \"description\",\n        value: this.state.formfields.description,\n        onChange: function onChange() {\n          return _this2.handleFieldChange('description', self.descriptionField.value);\n        },\n        ref: function ref(el) {\n          return self.descriptionField = el;\n        }\n      }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"br\", null), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        id: \"charsLeftDescription\",\n        className: \"charsLeft\"\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"min error visible\"\n      }, \"Nog minimaal \", react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", null, \"2\"), \" tekens\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"max\"\n      }, \"Je hebt nog \", react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", null, \"0\"), \" tekens over.\")), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n        id: \"form-warning-description\",\n        className: \"form-warning\"\n      }, \"Je beschrijving is te [[langkort]]\")), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"openstad-component-form-group\"\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"h2\", null, \"Afbeelding\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        className: \"form-info\"\n      }, \"Let op: Stuur alleen een foto mee die je zelf gemaakt hebt! Foto's van anderen kunnen auteursrechtelijk beschermd zijn. Je hebt toestemming nodig van de fotograaf om die foto te uploaden.\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"fieldset\", {\n        className: \"filepondFieldset2\"\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n        id: \"form-warning-images\",\n        className: \"form-warning\"\n      }, \"Het uploaden van images is nog niet afgerond\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"input\", {\n        type: \"file\",\n        className: \"imageUploader-gebiedstool filepond-gebiedstool\"\n      })), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"br\", null)), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"a\", {\n        className: \"openstad-button openstad-button-blue\",\n        onClick: function onClick() {\n          return self.submitIdea();\n        },\n        ref: function ref(el) {\n          return self.submitButton = el;\n        }\n      }, \"Versturen\")));\n    }\n  }, {\n    key: \"fileUploaderInit\",\n    value: function fileUploaderInit() {\n      var self = this;\n      var fieldsetElement = document.querySelector('.filepondFieldset2');\n\n      if (fieldsetElement) {\n        FilePond.registerPlugin(FilePondPluginImagePreview);\n        FilePond.registerPlugin(FilePondPluginFileValidateSize);\n        FilePond.registerPlugin(FilePondPluginFileValidateType);\n        FilePond.registerPlugin(FilePondPluginFilePoster);\n        FilePond.setOptions({\n          server: '/image'\n        });\n        var filePondSettings = {\n          // set allowed file types with mime types\n          acceptedFileTypes: ['image/*'],\n          allowFileSizeValidation: true,\n          maxFileSize: '5mb',\n          name: 'image',\n          maxFiles: 3,\n          allowBrowse: true,\n          files: [],\n          server: {\n            process: '/image',\n            fetch: '/fetch-image?img='\n          },\n          imageResizeTargetWidth: 80,\n          imageResizeTargetHeight: 80,\n          imageCropAspectRatio: '1:1',\n          labelIdle: \"Sleep afbeelding(en) naar deze plek of <span class='filepond--label-action'>KLIK HIER</span>\",\n          labelInvalidField: \"Field contains invalid files\",\n          labelFileWaitingForSize: \"Wachtend op grootte\",\n          labelFileSizeNotAvailable: \"Grootte niet beschikbaar\",\n          labelFileCountSingular: \"Bestand in lijst\",\n          labelFileCountPlural: \"Bestanden in lijst\",\n          labelFileLoading: \"Laden\",\n          labelFileAdded: \"Toegevoegd\",\n          // assistive only\n          labelFileLoadError: \"Fout bij het uploaden\",\n          labelFileRemoved: \"Verwijderd\",\n          // assistive only\n          labelFileRemoveError: \"Fout bij het verwijderen\",\n          labelFileProcessing: \"Laden\",\n          labelFileProcessingComplete: \"Afbeelding geladen\",\n          labelFileProcessingAborted: \"Upload cancelled\",\n          labelFileProcessingError: \"Error during upload\",\n          labelFileProcessingRevertError: \"Error during revert\",\n          labelTapToCancel: \"tap to cancel\",\n          labelTapToRetry: \"tap to retry\",\n          labelTapToUndo: \"tap to undo\",\n          labelButtonRemoveItem: \"Verwijderen\",\n          labelButtonAbortItemLoad: \"Abort\",\n          labelButtonRetryItemLoad: \"Retry\",\n          labelButtonAbortItemProcessing: \"Verwijder\",\n          labelButtonUndoItemProcessing: \"Undo\",\n          labelButtonRetryItemProcessing: \"Retry\",\n          labelButtonProcessItem: \"Upload\"\n        };\n        var imageuploader = FilePond.create(fieldsetElement, filePondSettings);\n        var sortableInstance;\n        var pondEl = document.querySelector('.filepond--root');\n        document.querySelector('.filepond--root').addEventListener('FilePond:processfile', function (e) {\n          if (e.detail) {\n            console.log('Error uploding file: ', e.detail);\n          }\n\n          self.fileUploaderUpdateCurrentInput();\n        });\n        document.querySelector('.filepond--root').addEventListener('FilePond:removefile', function (e) {\n          if (e.detail && e.detail.error) {\n            console.log('Error uploding file: ', e.detail);\n          }\n\n          self.fileUploaderUpdateCurrentInput();\n        });\n\n        if (self.state.formfields) {\n          imageuploader.addFiles(self.state.formfields.images);\n        }\n      }\n\n      self.setState(_objectSpread({}, self.state, {\n        imageuploader: imageuploader\n      }));\n    }\n  }, {\n    key: \"fileUploaderUpdateCurrentInput\",\n    value: function fileUploaderUpdateCurrentInput() {\n      var self = this;\n\n      if (self.state.formfields) {\n        self.state.formfields.images = [];\n\n        if (this.state.imageuploader && this.state.imageuploader.getFiles) {\n          var images = this.state.imageuploader.getFiles();\n          images.forEach(function (image) {\n            try {\n              var serverId = JSON.parse(image.serverId);\n              self.state.formfields.images.push(serverId.url);\n            } catch (err) {\n              console.log(err);\n            }\n          });\n        }\n      }\n    }\n  }, {\n    key: \"fileUploaderUploaderAddImages\",\n    value: function fileUploaderUploaderAddImages(images) {\n      var self = this;\n\n      if (this.state.imageuploader) {\n        console.log(2, images);\n        this.state.imageuploader.addFiles(images);\n      }\n    }\n  }]);\n\n  return IdeasForm;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50L2lkZWEtZm9ybS5qc3g/OWJhZiJdLCJuYW1lcyI6WyJJZGVhc0Zvcm0iLCJwcm9wcyIsImRlZmF1bHRDb25maWciLCJpZGVhSWQiLCJmb3JtZmllbGRzIiwidGl0bGUiLCJzdW1tYXJ5IiwiZGVzY3JpcHRpb24iLCJpbWFnZXMiLCJ0aXRsZU1pbkxlbmd0aCIsInRpdGxlTWF4TGVuZ3RoIiwic3VtbWFyeU1pbkxlbmd0aCIsInN1bW1hcnlNYXhMZW5ndGgiLCJkZXNjcmlwdGlvbk1pbkxlbmd0aCIsImRlc2NyaXB0aW9uTWF4TGVuZ3RoIiwiY29uZmlnIiwiT2JqZWN0IiwiYXNzaWduIiwic3RhdGUiLCJoYW5kbGVGaWVsZENoYW5nZSIsImJpbmQiLCJwcmV2UHJvcHMiLCJwcmV2U3RhdGUiLCJfbG9hZGVkRmlsZXMiLCJmaWxlcyIsImxvYWROZXh0RmlsZSIsInNlbGYiLCJmaWxlIiwiZWxlbWVudCIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsInNyYyIsImFzeW5jIiwib25sb2FkIiwiYm9keSIsImFwcGVuZENoaWxkIiwibGVuZ3RoIiwiZmlsZVVwbG9hZGVySW5pdCIsIm5hbWUiLCJ2YWx1ZSIsInNldFN0YXRlIiwiZGlzcGF0Y2hVcGRhdGVFZGl0SWRlYSIsImlkZWEiLCJldmVudCIsIkN1c3RvbUV2ZW50IiwiZGV0YWlsIiwiZGlzcGF0Y2hFdmVudCIsImlzVmFsaWQiLCJjb25zb2xlIiwibG9nIiwidGl0bGVGaWVsZCIsInF1ZXJ5U2VsZWN0b3IiLCJzdHlsZSIsImRpc3BsYXkiLCJpbm5lckhUTUwiLCJyZXBsYWNlIiwic3VtbWFyeUZpZWxkIiwiZGVzY3JpcHRpb25GaWVsZCIsInZhbGlkYXRlSWRlYSIsInVzZXJKV1QiLCJzaG93RXJyb3IiLCJ1cmwiLCJhcGlVcmwiLCJzaXRlSWQiLCJmb3JtIiwiZXh0cmFEYXRhIiwiY2F0ZWdvcmllIiwidHlwZSIsInNvbHV0aW9uIiwidGltZSIsIndlZWtkYXkiLCJKU09OIiwicGFyc2UiLCJkYXlwYXJ0IiwidGltZW9mZGF5IiwibG9jYXRpb24iLCJzdHJpbmdpZnkiLCJpbWFnZXVwbG9hZGVyIiwiZ2V0RmlsZXMiLCJmb3JFYWNoIiwiaW1hZ2UiLCJzZXJ2ZXJJZCIsInB1c2giLCJlcnIiLCIkIiwiYWpheCIsImRhdGFUeXBlIiwiY3Jvc3NEb21haW4iLCJtZXRob2QiLCJkYXRhIiwiYmVmb3JlU2VuZCIsInJlcXVlc3QiLCJzZXRSZXF1ZXN0SGVhZGVyIiwic3VjY2VzcyIsImpzb24iLCJjdXJyZW50TWFya2VyIiwiaXNJbnB1dCIsImN1cnJlbnRJbnB1dCIsIndpbmRvdyIsImhhc2giLCJpZCIsImVycm9yIiwiY2xhc3NOYW1lIiwiZWwiLCJpbnN0YW5jZSIsInN1Ym1pdElkZWEiLCJzdWJtaXRCdXR0b24iLCJmaWVsZHNldEVsZW1lbnQiLCJGaWxlUG9uZCIsInJlZ2lzdGVyUGx1Z2luIiwiRmlsZVBvbmRQbHVnaW5JbWFnZVByZXZpZXciLCJGaWxlUG9uZFBsdWdpbkZpbGVWYWxpZGF0ZVNpemUiLCJGaWxlUG9uZFBsdWdpbkZpbGVWYWxpZGF0ZVR5cGUiLCJGaWxlUG9uZFBsdWdpbkZpbGVQb3N0ZXIiLCJzZXRPcHRpb25zIiwic2VydmVyIiwiZmlsZVBvbmRTZXR0aW5ncyIsImFjY2VwdGVkRmlsZVR5cGVzIiwiYWxsb3dGaWxlU2l6ZVZhbGlkYXRpb24iLCJtYXhGaWxlU2l6ZSIsIm1heEZpbGVzIiwiYWxsb3dCcm93c2UiLCJwcm9jZXNzIiwiZmV0Y2giLCJpbWFnZVJlc2l6ZVRhcmdldFdpZHRoIiwiaW1hZ2VSZXNpemVUYXJnZXRIZWlnaHQiLCJpbWFnZUNyb3BBc3BlY3RSYXRpbyIsImxhYmVsSWRsZSIsImxhYmVsSW52YWxpZEZpZWxkIiwibGFiZWxGaWxlV2FpdGluZ0ZvclNpemUiLCJsYWJlbEZpbGVTaXplTm90QXZhaWxhYmxlIiwibGFiZWxGaWxlQ291bnRTaW5ndWxhciIsImxhYmVsRmlsZUNvdW50UGx1cmFsIiwibGFiZWxGaWxlTG9hZGluZyIsImxhYmVsRmlsZUFkZGVkIiwibGFiZWxGaWxlTG9hZEVycm9yIiwibGFiZWxGaWxlUmVtb3ZlZCIsImxhYmVsRmlsZVJlbW92ZUVycm9yIiwibGFiZWxGaWxlUHJvY2Vzc2luZyIsImxhYmVsRmlsZVByb2Nlc3NpbmdDb21wbGV0ZSIsImxhYmVsRmlsZVByb2Nlc3NpbmdBYm9ydGVkIiwibGFiZWxGaWxlUHJvY2Vzc2luZ0Vycm9yIiwibGFiZWxGaWxlUHJvY2Vzc2luZ1JldmVydEVycm9yIiwibGFiZWxUYXBUb0NhbmNlbCIsImxhYmVsVGFwVG9SZXRyeSIsImxhYmVsVGFwVG9VbmRvIiwibGFiZWxCdXR0b25SZW1vdmVJdGVtIiwibGFiZWxCdXR0b25BYm9ydEl0ZW1Mb2FkIiwibGFiZWxCdXR0b25SZXRyeUl0ZW1Mb2FkIiwibGFiZWxCdXR0b25BYm9ydEl0ZW1Qcm9jZXNzaW5nIiwibGFiZWxCdXR0b25VbmRvSXRlbVByb2Nlc3NpbmciLCJsYWJlbEJ1dHRvblJldHJ5SXRlbVByb2Nlc3NpbmciLCJsYWJlbEJ1dHRvblByb2Nlc3NJdGVtIiwiY3JlYXRlIiwic29ydGFibGVJbnN0YW5jZSIsInBvbmRFbCIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwiZmlsZVVwbG9hZGVyVXBkYXRlQ3VycmVudElucHV0IiwiYWRkRmlsZXMiLCJSZWFjdCIsIkNvbXBvbmVudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQUNBOztBQUVBOztJQUVxQkEsUzs7Ozs7QUFFbkIscUJBQVlDLEtBQVosRUFBbUI7QUFBQTs7QUFBQTs7QUFFakIsbUZBQU1BLEtBQU4sR0FGaUIsQ0FJbkI7O0FBQ0EsUUFBSUMsYUFBYSxHQUFHO0FBQ25CQyxZQUFNLEVBQUUsSUFEVztBQUVoQkMsZ0JBQVUsRUFBRTtBQUNWQyxhQUFLLEVBQUUsRUFERztBQUVWQyxlQUFPLEVBQUUsRUFGQztBQUdWQyxtQkFBVyxFQUFFLEVBSEg7QUFJVkMsY0FBTSxFQUFFO0FBSkUsT0FGSTtBQVFo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LFFBQVEsQ0FBQ3BCLEdBQTNDO0FBQ0EsYUFIRCxDQUdFLE9BQU1zQixHQUFOLEVBQVc7QUFBRW5DLHFCQUFPLENBQUNDLEdBQVIsQ0FBWWtDLEdBQVo7QUFBa0I7QUFDakMsV0FMRDtBQU1BO0FBQ0Q7QUFDRDs7O2tEQUU4QjNFLE0sRUFBUTtBQUNwQyxVQUFJa0IsSUFBSSxHQUFHLElBQVg7O0FBRUYsVUFBSSxLQUFLUixLQUFMLENBQVcyRCxhQUFmLEVBQThCO0FBQzdCN0IsZUFBTyxDQUFDQyxHQUFSLENBQVksQ0FBWixFQUFlekMsTUFBZjtBQUNBLGFBQUtVLEtBQUwsQ0FBVzJELGFBQVgsQ0FBeUJrRixRQUF6QixDQUFrQ3ZKLE1BQWxDO0FBQ0E7QUFDRDs7OztFQXhicUN3Siw0Q0FBSyxDQUFDQyxTIiwiZmlsZSI6Ii4vc3JjL2NvbXBvbmVudC9pZGVhLWZvcm0uanN4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0Jztcbi8vIFRPRE86IGltcG9ydCBPcGVuU3RhZENvbXBvbmVudFRleHRhcmVhIGZyb20gJy4vb3BlbnN0YWQtY29tcG9uZW50LWZvcm1lbGVtZW50cy90ZXh0YXJlYS5qc3gnO1xuXG4ndXNlIHN0cmljdCc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIElkZWFzRm9ybSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG5cbiAgY29uc3RydWN0b3IocHJvcHMpIHtcblxuICAgIHN1cGVyKHByb3BzKTtcblxuXHRcdC8vIGNvbmZpZ1xuXHRcdGxldCBkZWZhdWx0Q29uZmlnID0ge1xuXHRcdFx0aWRlYUlkOiBudWxsLFxuICAgICAgZm9ybWZpZWxkczoge1xuICAgICAgICB0aXRsZTogJycsXG4gICAgICAgIHN1bW1hcnk6ICcnLFxuICAgICAgICBkZXNjcmlwdGlvbjogJycsXG4gICAgICAgIGltYWdlczogW10sXG4gICAgICB9LFxuICAgICAgdGl0bGVNaW5MZW5ndGg6IDEwLFxuICAgICAgdGl0bGVNYXhMZW5ndGg6IDIwLFxuICAgICAgc3VtbWFyeU1pbkxlbmd0aDogMjAsXG4gICAgICBzdW1tYXJ5TWF4TGVuZ3RoOiAxNDAsXG4gICAgICBkZXNjcmlwdGlvbk1pbkxlbmd0aDogMTQwLFxuICAgICAgZGVzY3JpcHRpb25NYXhMZW5ndGg6IDUwMDAsXG4gICAgfTtcblx0XHR0aGlzLmNvbmZpZyA9IE9iamVjdC5hc3NpZ24oZGVmYXVsdENvbmZpZywgdGhpcy5wcm9wcy5jb25maWcgfHwge30pXG5cbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgZm9ybWZpZWxkczogdGhpcy5jb25maWcuZm9ybWZpZWxkcyxcblx0XHRcdGlkZWFJZDogdGhpcy5jb25maWcuaWRlYUlkLFxuICAgIH07XG5cbiAgICB0aGlzLmhhbmRsZUZpZWxkQ2hhbmdlID0gdGhpcy5oYW5kbGVGaWVsZENoYW5nZS5iaW5kKHRoaXMpO1xuXG4gIH1cblxuXHRjb21wb25lbnREaWRNb3VudChwcmV2UHJvcHMsIHByZXZTdGF0ZSkge1xuICAgIC8vIGZpbGVwb25kXG5cdFx0dGhpcy5fbG9hZGVkRmlsZXMgPSAwO1xuICAgIHRoaXMuZmlsZXMgPSBbXG4gICAgICBcImh0dHBzOi8vdW5wa2cuY29tL2ZpbGVwb25kL2Rpc3QvZmlsZXBvbmQuanNcIixcbiAgICAgIFwiaHR0cHM6Ly91bnBrZy5jb20vZmlsZXBvbmQtcG9seWZpbGwvZGlzdC9maWxlcG9uZC1wb2x5ZmlsbC5qc1wiLFxuICAgICAgXCJodHRwczovL3VucGtnLmNvbS9maWxlcG9uZC1wbHVnaW4taW1hZ2UtcHJldmlldy9kaXN0L2ZpbGVwb25kLXBsdWdpbi1pbWFnZS1wcmV2aWV3LmpzXCIsXG4gICAgICBcImh0dHBzOi8vdW5wa2cuY29tL2ZpbGVwb25kLXBsdWdpbi1maWxlLXZhbGlkYXRlLXR5cGUvZGlzdC9maWxlcG9uZC1wbHVnaW4tZmlsZS12YWxpZGF0ZS10eXBlLmpzXCIsXG4gICAgICBcImh0dHBzOi8vdW5wa2cuY29tL2ZpbGVwb25kLXBsdWdpbi1maWxlLXZhbGlkYXRlLXNpemUvZGlzdC9maWxlcG9uZC1wbHVnaW4tZmlsZS12YWxpZGF0ZS1zaXplLmpzXCIsXG4gICAgICBcImh0dHBzOi8vdW5wa2cuY29tL2ZpbGVwb25kLXBsdWdpbi1maWxlLXBvc3Rlci9kaXN0L2ZpbGVwb25kLXBsdWdpbi1maWxlLXBvc3Rlci5qc1wiLFxuICAgIF07XG4gICAgdGhpcy5sb2FkTmV4dEZpbGUoKTtcblx0fVxuXG4gIGxvYWROZXh0RmlsZSgpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgdmFyIGZpbGUgPSBzZWxmLmZpbGVzW3NlbGYuX2xvYWRlZEZpbGVzXTtcbiAgICBpZiAoZmlsZSkge1xuXHRcdFx0bGV0IGVsZW1lbnQ7XG5cdFx0XHRlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7XG5cdFx0XHRlbGVtZW50LnNyYyA9IGZpbGU7XG5cdFx0XHRlbGVtZW50LmFzeW5jID0gdHJ1ZTtcblx0XHRcdGlmIChlbGVtZW50KSB7XG5cdFx0XHRcdGVsZW1lbnQub25sb2FkID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgc2VsZi5sb2FkTmV4dEZpbGUoKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGVsZW1lbnQpO1xuXHRcdFx0fVxuICAgIH1cblx0XHRpZiAoc2VsZi5fbG9hZGVkRmlsZXMgPT0gc2VsZi5maWxlcy5sZW5ndGgpIHtcbiAgICAgIHNlbGYuZmlsZVVwbG9hZGVySW5pdCgpXG4gICAgfVxuXHRcdHNlbGYuX2xvYWRlZEZpbGVzKys7XG4gIH1cbiAgXG4gIGhhbmRsZUZpZWxkQ2hhbmdlKG5hbWUsIHZhbHVlKSB7XG4gICAgbGV0IHN0YXRlID0geyAuLi50aGlzLnN0YXRlIH07XG4gICAgc3RhdGUuZm9ybWZpZWxkc1tuYW1lXSA9IHZhbHVlO1xuICAgIHRoaXMuc2V0U3RhdGUoc3RhdGUpXG4gICAgdGhpcy5kaXNwYXRjaFVwZGF0ZUVkaXRJZGVhKHN0YXRlLmZvcm1maWVsZHMpXG4gIH1cblxuICBcbiAgZGlzcGF0Y2hVcGRhdGVFZGl0SWRlYShpZGVhKSB7XG5cdFx0dmFyIGV2ZW50ID0gbmV3IEN1c3RvbUV2ZW50KCd1cGRhdGVFZGl0SWRlYScsIHsgZGV0YWlsOiB7IGlkZWEgfSB9KTtcblx0XHRkb2N1bWVudC5kaXNwYXRjaEV2ZW50KGV2ZW50KTtcbiAgfVxuXG4gIHZhbGlkYXRlSWRlYSgpIHtcblxuICAgIHZhciBzZWxmID0gdGhpcztcbiAgICBcblx0ICB2YXIgaXNWYWxpZCA9IHRydWU7XG5cblx0ICAvLyBsb2NhdGlvblxuXHQgIC8vIGlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjbG9jYXRpb24nKS52YWx1ZSkge1xuXHRcdC8vICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2Zvcm0td2FybmluZy1sb2NhdGlvbicpLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG5cdCAgLy8gfSBlbHNlIHtcblx0XHQvLyAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNmb3JtLXdhcm5pbmctbG9jYXRpb24nKS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcblx0XHQvLyAgIGlzVmFsaWQgPSBmYWxzZTtcblx0ICAvLyB9XG5cblx0ICAvLyB0aXRsZVxuICAgIGNvbnNvbGUubG9nKHNlbGYudGl0bGVGaWVsZC52YWx1ZS5sZW5ndGgsdGhpcy5jb25maWcudGl0bGVNaW5MZW5ndGgpO1xuXHQgIGlmIChzZWxmLnRpdGxlRmllbGQudmFsdWUubGVuZ3RoIDwgdGhpcy5jb25maWcudGl0bGVNaW5MZW5ndGgpIHtcbiAgICAgIC8vIHRvZG86IGRpdCBtb2V0IG5pZXQgbWV0IHF1ZXJ5U2VsZWN0b3IgbWFhciBtZXQgc2VsZi53aGF0ZXZlclxuXHRcdCAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2Zvcm0td2FybmluZy10aXRsZScpLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuXHRcdCAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2Zvcm0td2FybmluZy10aXRsZScpLmlubmVySFRNTCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNmb3JtLXdhcm5pbmctdGl0bGUnKS5pbm5lckhUTUwucmVwbGFjZSgnW1tsYW5na29ydF1dJywgJ2tvcnQnKTtcblx0XHQgIGlzVmFsaWQgPSBmYWxzZTtcblx0ICB9IGVsc2UgaWYgKHNlbGYudGl0bGVGaWVsZC52YWx1ZS5sZW5ndGggPiB0aGlzLmNvbmZpZy50aXRsZU1heExlbmd0aCkge1xuXHRcdCAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2Zvcm0td2FybmluZy10aXRsZScpLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuXHRcdCAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2Zvcm0td2FybmluZy10aXRsZScpLmlubmVySFRNTCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNmb3JtLXdhcm5pbmctdGl0bGUnKS5pbm5lckhUTUwucmVwbGFjZSgnW1tsYW5na29ydF1dJywgJ2xhbmcnKTtcblx0XHQgIGlzVmFsaWQgPSBmYWxzZTtcblx0ICB9IGVsc2Uge1xuXHRcdCAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2Zvcm0td2FybmluZy10aXRsZScpLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG5cdCAgfVxuXG5cdCAgLy8gc3VtbWFyeVxuXHQgIGlmIChzZWxmLnN1bW1hcnlGaWVsZC52YWx1ZS5sZW5ndGggPCB0aGlzLmNvbmZpZy5zdW1tYXJ5TWluTGVuZ3RoKSB7XG4gICAgICAvLyB0b2RvOiBkaXQgbW9ldCBuaWV0IG1ldCBxdWVyeVNlbGVjdG9yIG1hYXIgbWV0IHNlbGYud2hhdGV2ZXJcblx0XHQgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNmb3JtLXdhcm5pbmctc3VtbWFyeScpLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuXHRcdCAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2Zvcm0td2FybmluZy1zdW1tYXJ5JykuaW5uZXJIVE1MID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2Zvcm0td2FybmluZy1zdW1tYXJ5JykuaW5uZXJIVE1MLnJlcGxhY2UoJ1tbbGFuZ2tvcnRdXScsICdrb3J0Jyk7XG5cdFx0ICBpc1ZhbGlkID0gZmFsc2U7XG5cdCAgfSBlbHNlIGlmIChzZWxmLnN1bW1hcnlGaWVsZC52YWx1ZS5sZW5ndGggPiB0aGlzLmNvbmZpZy5zdW1tYXJ5TWF4TGVuZ3RoKSB7XG5cdFx0ICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZm9ybS13YXJuaW5nLXN1bW1hcnknKS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcblx0XHQgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNmb3JtLXdhcm5pbmctc3VtbWFyeScpLmlubmVySFRNTCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNmb3JtLXdhcm5pbmctc3VtbWFyeScpLmlubmVySFRNTC5yZXBsYWNlKCdbW2xhbmdrb3J0XV0nLCAnbGFuZycpO1xuXHRcdCAgaXNWYWxpZCA9IGZhbHNlO1xuXHQgIH0gZWxzZSB7XG5cdFx0ICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZm9ybS13YXJuaW5nLXN1bW1hcnknKS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuXHQgIH1cblxuXHQgIC8vIGRlc2NyaXB0aW9uXG5cdCAgaWYgKHNlbGYuZGVzY3JpcHRpb25GaWVsZC52YWx1ZS5sZW5ndGggPCB0aGlzLmNvbmZpZy5kZXNjcmlwdGlvbk1pbkxlbmd0aCkge1xuICAgICAgLy8gdG9kbzogZGl0IG1vZXQgbmlldCBtZXQgcXVlcnlTZWxlY3RvciBtYWFyIG1ldCBzZWxmLndoYXRldmVyXG5cdFx0ICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZm9ybS13YXJuaW5nLWRlc2NyaXB0aW9uJykuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG5cdFx0ICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZm9ybS13YXJuaW5nLWRlc2NyaXB0aW9uJykuaW5uZXJIVE1MID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2Zvcm0td2FybmluZy1kZXNjcmlwdGlvbicpLmlubmVySFRNTC5yZXBsYWNlKCdbW2xhbmdrb3J0XV0nLCAna29ydCcpO1xuXHRcdCAgaXNWYWxpZCA9IGZhbHNlO1xuXHQgIH0gZWxzZSBpZiAoc2VsZi5kZXNjcmlwdGlvbkZpZWxkLnZhbHVlLmxlbmd0aCA+IHRoaXMuY29uZmlnLmRlc2NyaXB0aW9uTWF4TGVuZ3RoKSB7XG5cdFx0ICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZm9ybS13YXJuaW5nLWRlc2NyaXB0aW9uJykuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG5cdFx0ICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZm9ybS13YXJuaW5nLWRlc2NyaXB0aW9uJykuaW5uZXJIVE1MID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2Zvcm0td2FybmluZy1kZXNjcmlwdGlvbicpLmlubmVySFRNTC5yZXBsYWNlKCdbW2xhbmdrb3J0XV0nLCAnbGFuZycpO1xuXHRcdCAgaXNWYWxpZCA9IGZhbHNlO1xuXHQgIH0gZWxzZSB7XG5cdFx0ICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZm9ybS13YXJuaW5nLWRlc2NyaXB0aW9uJykuc3R5bGUuZGlzcGxheSA9ICdub25lJztcblx0ICB9XG5cblx0ICAvLyB0eXBlXG5cdCAgLy8gaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0eXBlJykudmFsdWUpIHtcblx0XHQvLyAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNmb3JtLXdhcm5pbmctdHlwZScpLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG5cdCAgLy8gfSBlbHNlIHtcblx0XHQvLyAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNmb3JtLXdhcm5pbmctdHlwZScpLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuXHRcdC8vICAgb3BlblN0ZXAoMSwgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3R5cGUnKS5vZmZzZXRUb3AgLSA4MCk7XG5cdFx0Ly8gICBpc1ZhbGlkID0gZmFsc2U7XG5cdCAgLy8gfVxuXG5cdCAgLy8gY2F0ZWdvcmllXG5cdCAgLy8gaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNjYXRlZ29yaWUnKS52YWx1ZSkge1xuXHRcdC8vICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2Zvcm0td2FybmluZy1jYXRlZ29yaWUnKS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuXHQgIC8vIH0gZWxzZSB7XG5cdFx0Ly8gICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZm9ybS13YXJuaW5nLWNhdGVnb3JpZScpLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuXHRcdC8vICAgb3BlblN0ZXAoMSwgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2NhdGVnb3JpZScpLm9mZnNldFRvcCAtIDgwKTtcblx0XHQvLyAgIGlzVmFsaWQgPSBmYWxzZTtcblx0ICAvLyB9XG5cblx0ICAvLyBpbWFnZXNcblx0ICAvLyBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZm9ybS13YXJuaW5nLWltYWdlcycpLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG5cdCAgLy8gaWYgKCBpbWFnZXVwbG9hZGVyICYmIGltYWdldXBsb2FkZXIuZ2V0RmlsZXMgKSB7XG5cdFx0Ly8gICB2YXIgaW1hZ2VzID0gaW1hZ2V1cGxvYWRlci5nZXRGaWxlcygpO1xuXHRcdC8vICAgaW1hZ2VzLmZvckVhY2goZnVuY3Rpb24oaW1hZ2UpIHtcblx0XHQvLyAgICAgaWYgKCFpbWFnZS5zZXJ2ZXJJZCkge1xuXHRcdC8vICAgXHQgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNmb3JtLXdhcm5pbmctaW1hZ2VzJykuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG5cdFx0Ly8gICBcdCAgaXNWYWxpZCA9IGZhbHNlO1xuXHRcdC8vICAgICB9XG5cdFx0Ly8gICB9KTtcblx0ICAvLyB9XG5cblx0ICAvLyB0aW1lID9cblxuXHQgIHJldHVybiBpc1ZhbGlkO1xuXG4gIH1cblxuICBzdWJtaXRJZGVhKCkge1xuXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgIGNvbnNvbGUubG9nKCd2YWxpZGF0ZUlkZWEnLCBzZWxmLnZhbGlkYXRlSWRlYSgpKTtcblxuXHQgIGlmICggIXNlbGYudmFsaWRhdGVJZGVhKCkgKSByZXR1cm47XG5cblx0ICBpZiAoIXVzZXJKV1QpIHJldHVybiBzaG93RXJyb3IoJ0plIGJlbnQgbmlldCBpbmdlbG9nZCcpO1xuXG5cdCAgdmFyIHVybCA9IGFwaVVybCArICcvYXBpL3NpdGUvJyArIHNpdGVJZCArICcvaWRlYSc7XG5cblx0ICB2YXIgYm9keSA9IHtcblx0XHRcdHRpdGxlOiAnTmlldXcgcHJvYmxlZW0nLFxuXHRcdFx0c3VtbWFyeTogXCJFZW4gbmlldXdlIGluemVuZGluZyBvcCAnQWZ2YWwgaW4gV2VzdCdcIixcblx0XHRcdGRlc2NyaXB0aW9uOiBmb3JtLnF1ZXJ5U2VsZWN0b3IoJyNkZXNjcmlwdGlvbicpLnZhbHVlLFxuXHRcdFx0ZXh0cmFEYXRhOiB7XG5cdFx0XHRcdGNhdGVnb3JpZTogZm9ybS5xdWVyeVNlbGVjdG9yKCcjY2F0ZWdvcmllJykudmFsdWUsXG5cdFx0XHRcdHR5cGU6IGZvcm0ucXVlcnlTZWxlY3RvcignI3R5cGUnKS52YWx1ZSxcblx0XHRcdFx0c29sdXRpb246IGZvcm0ucXVlcnlTZWxlY3RvcignI3NvbHV0aW9uJykudmFsdWUsXG5cdFx0XHRcdHRpbWU6IHtcblx0XHRcdFx0XHR3ZWVrZGF5OiBKU09OLnBhcnNlKGZvcm0ucXVlcnlTZWxlY3RvcignI3dlZWtkYXknKS52YWx1ZSB8fCAnW10nKSxcblx0XHRcdFx0XHRkYXlwYXJ0OiBKU09OLnBhcnNlKGZvcm0ucXVlcnlTZWxlY3RvcignI2RheXBhcnQnKS52YWx1ZSB8fCAnW10nKSxcblx0XHRcdFx0XHR0aW1lb2ZkYXk6IGZvcm0ucXVlcnlTZWxlY3RvcignI3RpbWVvZmRheScpLnZhbHVlLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHRpbWFnZXM6IFtdXG5cdFx0XHR9LFxuXHQgIH1cblxuXHQgIGlmIChmb3JtLnF1ZXJ5U2VsZWN0b3IoJyNsb2NhdGlvbicpLnZhbHVlKSB7XG5cdFx0ICBib2R5LmxvY2F0aW9uID0gSlNPTi5zdHJpbmdpZnkoe1xuXHRcdFx0ICBcInR5cGVcIjogXCJQb2ludFwiLFxuXHRcdFx0ICBcImNvb3JkaW5hdGVzXCI6IEpTT04ucGFyc2UoZm9ybS5xdWVyeVNlbGVjdG9yKCcjbG9jYXRpb24nKS52YWx1ZSlcblx0XHQgIH0pXG5cdCAgfVxuXG5cdCAgaWYgKCBpbWFnZXVwbG9hZGVyICYmIGltYWdldXBsb2FkZXIuZ2V0RmlsZXMgKSB7XG5cdFx0ICB2YXIgaW1hZ2VzID0gaW1hZ2V1cGxvYWRlci5nZXRGaWxlcygpO1xuXHRcdCAgaW1hZ2VzLmZvckVhY2goZnVuY3Rpb24oaW1hZ2UpIHtcblx0XHRcdCAgdHJ5IHtcblx0XHRcdFx0ICB2YXIgc2VydmVySWQgPSBKU09OLnBhcnNlKGltYWdlLnNlcnZlcklkKVxuXHRcdFx0XHQgIGJvZHkuZXh0cmFEYXRhLmltYWdlcy5wdXNoKHNlcnZlcklkLnVybClcblx0XHRcdCAgfSBjYXRjaChlcnIpIHsgY29uc29sZS5sb2coZXJyKSB9XG5cdFx0ICB9KTtcblx0ICB9XG5cblx0ICAkLmFqYXgoe1xuXHRcdCAgdXJsOiB1cmwsXG5cdFx0ICBkYXRhVHlwZTogXCJqc29uXCIsXG5cdFx0ICBjcm9zc0RvbWFpbjogdHJ1ZSxcblx0XHQgIG1ldGhvZDogXCJQT1NUXCIsXG5cdFx0ICBkYXRhOiBib2R5LFxuXHRcdCAgYmVmb3JlU2VuZDogZnVuY3Rpb24ocmVxdWVzdCkge1xuXHRcdFx0ICByZXF1ZXN0LnNldFJlcXVlc3RIZWFkZXIoXCJBY2NlcHRcIiwgXCJhcHBsaWNhdGlvbi9qc29uXCIpO1xuXHRcdFx0ICByZXF1ZXN0LnNldFJlcXVlc3RIZWFkZXIoJ1gtQXV0aG9yaXphdGlvbicsICdCZWFyZXIgJyArIHVzZXJKV1QpO1xuXHRcdCAgfSxcblx0XHQgIHN1Y2Nlc3M6IGZ1bmN0aW9uKGpzb24pIHtcblx0XHRcdCAgY3VycmVudE1hcmtlci5pc0lucHV0ID0gZmFsc2U7XG5cdFx0XHQgIGN1cnJlbnRNYXJrZXIuaWRlYSA9IGpzb247XG5cdFx0XHQgIGN1cnJlbnRJbnB1dCA9IHt9O1xuXHRcdFx0ICB3aW5kb3cubG9jYXRpb24uaGFzaCA9ICcjaWRlYUlkPScgKyBqc29uLmlkO1xuXHRcdFx0ICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjaW5mby1ibG9jaycpLmlubmVySFRNTCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNuZXctaWRlYS1yZXN1bHQtY29udGFpbmVyJykuaW5uZXJIVE1MO1xuXHRcdCAgfSxcblx0XHQgIGVycm9yOiBmdW5jdGlvbihlcnJvcikge1xuXHRcdFx0ICBzaG93RXJyb3IoZXJyb3IpO1xuXHRcdCAgfVxuXHQgIH0pO1xuXG4gIH1cbiAgXG5cdHJlbmRlcigpIHtcblxuICAgIGxldCBzZWxmID0gdGhpcztcblxuICAgIHJldHVybiAoXG5cdFx0XHQ8ZGl2IGlkPXtzZWxmLmlkfSBjbGFzc05hbWU9e3NlbGYucHJvcHMuY2xhc3NOYW1lIHx8ICdvcGVuc3RhZC1jb21wb25lbnQtaW5mby1ibG9jay1pZGVhLWZvcm0nfSByZWY9e2VsID0+IChzZWxmLmluc3RhbmNlID0gZWwpfT5cblxuICAgICAgICA8Zm9ybSBjbGFzc05hbWU9XCJvcGVuc3RhZC1jb21wb25lbnQtZm9ybVwiPlxuXG5cdFx0XHRcdCAgPGlucHV0IHR5cGU9XCJoaWRkZW5cIiBpZD1cImV4dHJhRGF0YVwiIG5hbWU9XCJleHRyYURhdGFcIiB2YWx1ZT1cIlwiLz48YnIvPlxuXG4gICAgICAgICAgXG5cdFx0XHRcdCAgPGgxPkthbnMgb2Yga25lbHB1bnQgdG9ldm9lZ2VuPC9oMT5cblxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwib3BlbnN0YWQtY29tcG9uZW50LWZvcm0tZ3JvdXBcIj5cblx0XHRcdFx0XHQgIDxoMj5cblx0XHRcdFx0XHRcdCAgVGl0ZWwgcGxhblxuXHRcdFx0XHRcdCAgPC9oMj5cblx0XHRcdFx0XHQgIDxkaXYgY2xhc3NOYW1lPVwiZm9ybS1pbmZvXCI+XG5cdFx0XHRcdFx0XHQgIEdlZWYgamUgdm9vcnN0ZWwgZWVuIGR1aWRlbGlqa2UgdGl0ZWwsIHpvZGF0IGFuZGVyZW4gam91dyBpbnplbmRpbmcgbWFra2VsaWprIGt1bm5lbiB2aW5kZW4gZW4gZGlyZWN0IHNuYXBwZW4gd2FhciBoZXQgb3ZlciBnYWF0LlxuXHRcdFx0XHRcdCAgPC9kaXY+XG4gICAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBuYW1lPVwidGl0bGVcIiB2YWx1ZT17dGhpcy5zdGF0ZS5mb3JtZmllbGRzLnRpdGxlfSBvbkNoYW5nZT17KCkgPT4gdGhpcy5oYW5kbGVGaWVsZENoYW5nZSgndGl0bGUnLCBzZWxmLnRpdGxlRmllbGQudmFsdWUpfSByZWY9e2VsID0+IChzZWxmLnRpdGxlRmllbGQgPSBlbCl9Lz5cbiAgICAgICAgICAgICAgPGJyLz5cbiAgICAgICAgICAgICAgPGRpdiBpZD1cImNoYXJzTGVmdFRpdGxlXCIgY2xhc3NOYW1lPVwiY2hhcnNMZWZ0XCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtaW4gZXJyb3IgdmlzaWJsZVwiPk5vZyBtaW5pbWFhbCA8c3Bhbj4yPC9zcGFuPiB0ZWtlbnM8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1heFwiPkplIGhlYnQgbm9nIDxzcGFuPjA8L3NwYW4+IHRla2VucyBvdmVyLjwvZGl2PlxuICAgICAgICAgICAgICA8L2Rpdj5cblx0XHRcdFx0XHRcdDxzcGFuIGlkPVwiZm9ybS13YXJuaW5nLXRpdGxlXCIgY2xhc3NOYW1lPVwiZm9ybS13YXJuaW5nXCI+SmUgdGl0ZWwgaXMgdGUgW1tsYW5na29ydF1dPC9zcGFuPlxuICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJvcGVuc3RhZC1jb21wb25lbnQtZm9ybS1ncm91cFwiPlxuXHRcdFx0XHRcdCAgPGgyPlxuXHRcdFx0XHRcdFx0ICBTYW1lbnZhdHRpbmdcblx0XHRcdFx0XHQgIDwvaDI+XG5cdFx0XHRcdFx0ICA8ZGl2IGNsYXNzTmFtZT1cImZvcm0taW5mb1wiPlxuXHRcdFx0XHRcdFx0ICBWZXJ0ZWwgaW4gbWF4aW1hYWwge3RoaXMuY29uZmlnLnN1bW1hcnlNaW5MZW5ndGh9IHRla2VucyBpZXRzIG1lZXIgb3ZlciBqZSBwbGFuLlxuXHRcdFx0XHRcdCAgPC9kaXY+XG4gICAgICAgICAgICA8dGV4dGFyZWEgdHlwZT1cInRleHRcIiBuYW1lPVwic3VtbWFyeVwiIHZhbHVlPXt0aGlzLnN0YXRlLmZvcm1maWVsZHMuc3VtbWFyeX0gb25DaGFuZ2U9eygpID0+IHRoaXMuaGFuZGxlRmllbGRDaGFuZ2UoJ3N1bW1hcnknLCBzZWxmLnN1bW1hcnlGaWVsZC52YWx1ZSl9IHJlZj17ZWwgPT4gKHNlbGYuc3VtbWFyeUZpZWxkID0gZWwpfS8+XG4gICAgICAgICAgICAgIDxici8+XG4gICAgICAgICAgICAgIDxkaXYgaWQ9XCJjaGFyc0xlZnRTdW1tYXJ5XCIgY2xhc3NOYW1lPVwiY2hhcnNMZWZ0XCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtaW4gZXJyb3IgdmlzaWJsZVwiPk5vZyBtaW5pbWFhbCA8c3Bhbj4yPC9zcGFuPiB0ZWtlbnM8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1heFwiPkplIGhlYnQgbm9nIDxzcGFuPjA8L3NwYW4+IHRla2VucyBvdmVyLjwvZGl2PlxuICAgICAgICAgICAgICA8L2Rpdj5cblx0XHRcdFx0XHRcdCAgPHNwYW4gaWQ9XCJmb3JtLXdhcm5pbmctc3VtbWFyeVwiIGNsYXNzTmFtZT1cImZvcm0td2FybmluZ1wiPkplIHNhbWVudmF0dGluZyBpcyB0ZSBbW2xhbmdrb3J0XV08L3NwYW4+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm9wZW5zdGFkLWNvbXBvbmVudC1mb3JtLWdyb3VwXCI+XG5cdFx0XHRcdFx0ICA8aDI+XG5cdFx0XHRcdFx0XHQgIEJlc2NocmlqdmluZ1xuXHRcdFx0XHRcdCAgPC9oMj5cblx0XHRcdFx0XHQgIDxkaXYgY2xhc3NOYW1lPVwiZm9ybS1pbmZvXCI+XG5cdFx0XHRcdFx0XHQgIEdlYnJ1aWsgZGUgcnVpbXRlIGhpZXJvbmRlciBvbSBqZSB2b29yc3RlbCB2ZXJkZXIgdWl0IHRlIGxlZ2dlbi4gXG5cdFx0XHRcdFx0ICA8L2Rpdj5cbiAgICAgICAgICAgIDx0ZXh0YXJlYSB0eXBlPVwidGV4dFwiIG5hbWU9XCJkZXNjcmlwdGlvblwiIHZhbHVlPXt0aGlzLnN0YXRlLmZvcm1maWVsZHMuZGVzY3JpcHRpb259IG9uQ2hhbmdlPXsoKSA9PiB0aGlzLmhhbmRsZUZpZWxkQ2hhbmdlKCdkZXNjcmlwdGlvbicsIHNlbGYuZGVzY3JpcHRpb25GaWVsZC52YWx1ZSl9IHJlZj17ZWwgPT4gKHNlbGYuZGVzY3JpcHRpb25GaWVsZCA9IGVsKX0vPlxuICAgICAgICAgICAgICA8YnIvPlxuICAgICAgICAgICAgICA8ZGl2IGlkPVwiY2hhcnNMZWZ0RGVzY3JpcHRpb25cIiBjbGFzc05hbWU9XCJjaGFyc0xlZnRcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1pbiBlcnJvciB2aXNpYmxlXCI+Tm9nIG1pbmltYWFsIDxzcGFuPjI8L3NwYW4+IHRla2VuczwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWF4XCI+SmUgaGVidCBub2cgPHNwYW4+MDwvc3Bhbj4gdGVrZW5zIG92ZXIuPC9kaXY+XG4gICAgICAgICAgICAgIDwvZGl2PlxuXHRcdFx0XHRcdFx0PHNwYW4gaWQ9XCJmb3JtLXdhcm5pbmctZGVzY3JpcHRpb25cIiBjbGFzc05hbWU9XCJmb3JtLXdhcm5pbmdcIj5KZSBiZXNjaHJpanZpbmcgaXMgdGUgW1tsYW5na29ydF1dPC9zcGFuPlxuICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJvcGVuc3RhZC1jb21wb25lbnQtZm9ybS1ncm91cFwiPlxuXHRcdFx0XHRcdCAgPGgyPlxuXHRcdFx0XHRcdFx0ICBBZmJlZWxkaW5nXG5cdFx0XHRcdFx0ICA8L2gyPlxuXHRcdFx0XHRcdCAgPGRpdiBjbGFzc05hbWU9XCJmb3JtLWluZm9cIj5cblx0XHRcdFx0XHRcdCAgTGV0IG9wOiBTdHV1ciBhbGxlZW4gZWVuIGZvdG8gbWVlIGRpZSBqZSB6ZWxmIGdlbWFha3QgaGVidCEgRm90bydzIHZhbiBhbmRlcmVuIGt1bm5lbiBhdXRldXJzcmVjaHRlbGlqayBiZXNjaGVybWQgemlqbi4gSmUgaGVidCB0b2VzdGVtbWluZyBub2RpZyB2YW4gZGUgZm90b2dyYWFmIG9tIGRpZSBmb3RvIHRlIHVwbG9hZGVuLlxuXHRcdFx0XHRcdCAgPC9kaXY+XG5cdFx0XHRcdFx0XHQ8ZmllbGRzZXQgY2xhc3NOYW1lPVwiZmlsZXBvbmRGaWVsZHNldDJcIj5cblx0XHRcdFx0XHRcdFx0PHNwYW4gaWQ9XCJmb3JtLXdhcm5pbmctaW1hZ2VzXCIgY2xhc3NOYW1lPVwiZm9ybS13YXJuaW5nXCI+SGV0IHVwbG9hZGVuIHZhbiBpbWFnZXMgaXMgbm9nIG5pZXQgYWZnZXJvbmQ8L3NwYW4+XG5cdFx0XHRcdFx0XHRcdDxpbnB1dCB0eXBlPVwiZmlsZVwiIGNsYXNzTmFtZT1cImltYWdlVXBsb2FkZXItZ2ViaWVkc3Rvb2wgZmlsZXBvbmQtZ2ViaWVkc3Rvb2xcIi8+XG5cdFx0XHRcdFx0XHQ8L2ZpZWxkc2V0PlxuICAgICAgICAgICAgPGJyLz5cbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIDxhIGNsYXNzTmFtZT1cIm9wZW5zdGFkLWJ1dHRvbiBvcGVuc3RhZC1idXR0b24tYmx1ZVwiIG9uQ2xpY2s9eygpID0+IHNlbGYuc3VibWl0SWRlYSgpfSByZWY9e2VsID0+IChzZWxmLnN1Ym1pdEJ1dHRvbiA9IGVsKX0+VmVyc3R1cmVuPC9hPlxuXG4gICAgICAgIDwvZm9ybT5cblxuXHRcdFx0PC9kaXY+XG4gICAgKTtcblxuICB9XG5cbiAgZmlsZVVwbG9hZGVySW5pdCgpIHtcblxuICAgIGxldCBzZWxmID0gdGhpcztcblxuXHRcdHZhciBmaWVsZHNldEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZmlsZXBvbmRGaWVsZHNldDInKTtcblx0XHRpZiAoZmllbGRzZXRFbGVtZW50KSB7XG5cdFx0XHRGaWxlUG9uZC5yZWdpc3RlclBsdWdpbihGaWxlUG9uZFBsdWdpbkltYWdlUHJldmlldyk7XG5cdFx0XHRGaWxlUG9uZC5yZWdpc3RlclBsdWdpbihGaWxlUG9uZFBsdWdpbkZpbGVWYWxpZGF0ZVNpemUpO1xuXHRcdFx0RmlsZVBvbmQucmVnaXN0ZXJQbHVnaW4oRmlsZVBvbmRQbHVnaW5GaWxlVmFsaWRhdGVUeXBlKTtcblx0XHRcdEZpbGVQb25kLnJlZ2lzdGVyUGx1Z2luKEZpbGVQb25kUGx1Z2luRmlsZVBvc3Rlcik7XG5cblx0XHRcdEZpbGVQb25kLnNldE9wdGlvbnMoe1xuXHRcdFx0XHRzZXJ2ZXI6ICcvaW1hZ2UnXG5cdFx0XHR9KTtcblxuXHRcdFx0dmFyIGZpbGVQb25kU2V0dGluZ3MgPSB7XG5cdFx0XHRcdC8vIHNldCBhbGxvd2VkIGZpbGUgdHlwZXMgd2l0aCBtaW1lIHR5cGVzXG5cdFx0XHRcdGFjY2VwdGVkRmlsZVR5cGVzOiBbJ2ltYWdlLyonXSxcblx0XHRcdFx0YWxsb3dGaWxlU2l6ZVZhbGlkYXRpb246IHRydWUsXG5cdFx0XHRcdG1heEZpbGVTaXplOiAnNW1iJyxcblx0XHRcdFx0bmFtZTogJ2ltYWdlJyxcblx0XHRcdFx0bWF4RmlsZXM6IDMsXG5cdFx0XHRcdGFsbG93QnJvd3NlOiB0cnVlLFxuXHRcdFx0XHRmaWxlczogW10sXG5cdFx0XHRcdHNlcnZlcjoge1xuXHRcdFx0XHRcdHByb2Nlc3M6ICcvaW1hZ2UnLFxuXHRcdFx0XHRcdGZldGNoOiAnL2ZldGNoLWltYWdlP2ltZz0nXG5cdFx0XHRcdH0sXG5cdFx0XHRcdGltYWdlUmVzaXplVGFyZ2V0V2lkdGg6IDgwLFxuXHRcdFx0XHRpbWFnZVJlc2l6ZVRhcmdldEhlaWdodDogODAsXG5cdFx0XHRcdGltYWdlQ3JvcEFzcGVjdFJhdGlvOiAnMToxJyxcblx0XHRcdFx0bGFiZWxJZGxlOiBcIlNsZWVwIGFmYmVlbGRpbmcoZW4pIG5hYXIgZGV6ZSBwbGVrIG9mIDxzcGFuIGNsYXNzPSdmaWxlcG9uZC0tbGFiZWwtYWN0aW9uJz5LTElLIEhJRVI8L3NwYW4+XCIsXG5cdFx0XHRcdGxhYmVsSW52YWxpZEZpZWxkOiBcIkZpZWxkIGNvbnRhaW5zIGludmFsaWQgZmlsZXNcIixcblx0XHRcdFx0bGFiZWxGaWxlV2FpdGluZ0ZvclNpemU6IFwiV2FjaHRlbmQgb3AgZ3Jvb3R0ZVwiLFxuXHRcdFx0XHRsYWJlbEZpbGVTaXplTm90QXZhaWxhYmxlOiBcIkdyb290dGUgbmlldCBiZXNjaGlrYmFhclwiLFxuXHRcdFx0XHRsYWJlbEZpbGVDb3VudFNpbmd1bGFyOiBcIkJlc3RhbmQgaW4gbGlqc3RcIixcblx0XHRcdFx0bGFiZWxGaWxlQ291bnRQbHVyYWw6IFwiQmVzdGFuZGVuIGluIGxpanN0XCIsXG5cdFx0XHRcdGxhYmVsRmlsZUxvYWRpbmc6IFwiTGFkZW5cIixcblx0XHRcdFx0bGFiZWxGaWxlQWRkZWQ6IFwiVG9lZ2V2b2VnZFwiLCAvLyBhc3Npc3RpdmUgb25seVxuXHRcdFx0XHRsYWJlbEZpbGVMb2FkRXJyb3I6IFwiRm91dCBiaWogaGV0IHVwbG9hZGVuXCIsXG5cdFx0XHRcdGxhYmVsRmlsZVJlbW92ZWQ6IFwiVmVyd2lqZGVyZFwiLCAvLyBhc3Npc3RpdmUgb25seVxuXHRcdFx0XHRsYWJlbEZpbGVSZW1vdmVFcnJvcjogXCJGb3V0IGJpaiBoZXQgdmVyd2lqZGVyZW5cIixcblx0XHRcdFx0bGFiZWxGaWxlUHJvY2Vzc2luZzogXCJMYWRlblwiLFxuXHRcdFx0XHRsYWJlbEZpbGVQcm9jZXNzaW5nQ29tcGxldGU6IFwiQWZiZWVsZGluZyBnZWxhZGVuXCIsXG5cdFx0XHRcdGxhYmVsRmlsZVByb2Nlc3NpbmdBYm9ydGVkOiBcIlVwbG9hZCBjYW5jZWxsZWRcIixcblx0XHRcdFx0bGFiZWxGaWxlUHJvY2Vzc2luZ0Vycm9yOiBcIkVycm9yIGR1cmluZyB1cGxvYWRcIixcblx0XHRcdFx0bGFiZWxGaWxlUHJvY2Vzc2luZ1JldmVydEVycm9yOiBcIkVycm9yIGR1cmluZyByZXZlcnRcIixcblx0XHRcdFx0bGFiZWxUYXBUb0NhbmNlbDogXCJ0YXAgdG8gY2FuY2VsXCIsXG5cdFx0XHRcdGxhYmVsVGFwVG9SZXRyeTogXCJ0YXAgdG8gcmV0cnlcIixcblx0XHRcdFx0bGFiZWxUYXBUb1VuZG86IFwidGFwIHRvIHVuZG9cIixcblx0XHRcdFx0bGFiZWxCdXR0b25SZW1vdmVJdGVtOiBcIlZlcndpamRlcmVuXCIsXG5cdFx0XHRcdGxhYmVsQnV0dG9uQWJvcnRJdGVtTG9hZDogXCJBYm9ydFwiLFxuXHRcdFx0XHRsYWJlbEJ1dHRvblJldHJ5SXRlbUxvYWQ6IFwiUmV0cnlcIixcblx0XHRcdFx0bGFiZWxCdXR0b25BYm9ydEl0ZW1Qcm9jZXNzaW5nOiBcIlZlcndpamRlclwiLFxuXHRcdFx0XHRsYWJlbEJ1dHRvblVuZG9JdGVtUHJvY2Vzc2luZzogXCJVbmRvXCIsXG5cdFx0XHRcdGxhYmVsQnV0dG9uUmV0cnlJdGVtUHJvY2Vzc2luZzogXCJSZXRyeVwiLFxuXHRcdFx0XHRsYWJlbEJ1dHRvblByb2Nlc3NJdGVtOiBcIlVwbG9hZFwiXG5cdFx0XHR9XG5cdFx0XHRcblx0XHRcdHZhciBpbWFnZXVwbG9hZGVyID0gRmlsZVBvbmQuY3JlYXRlKGZpZWxkc2V0RWxlbWVudCwgZmlsZVBvbmRTZXR0aW5ncyk7XG5cdFx0XHR2YXIgc29ydGFibGVJbnN0YW5jZTtcblx0XHRcdHZhciBwb25kRWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZmlsZXBvbmQtLXJvb3QnKTtcblx0XHRcdFxuXHRcdFx0ZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmZpbGVwb25kLS1yb290JykuYWRkRXZlbnRMaXN0ZW5lcignRmlsZVBvbmQ6cHJvY2Vzc2ZpbGUnLCBlID0+IHtcblx0XHRcdFx0aWYgKGUuZGV0YWlsKSB7XG5cdFx0XHRcdFx0Y29uc29sZS5sb2coJ0Vycm9yIHVwbG9kaW5nIGZpbGU6ICcsIGUuZGV0YWlsKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRzZWxmLmZpbGVVcGxvYWRlclVwZGF0ZUN1cnJlbnRJbnB1dCgpXG5cdFx0XHR9KTtcblx0XHRcdFxuXHRcdFx0ZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmZpbGVwb25kLS1yb290JykuYWRkRXZlbnRMaXN0ZW5lcignRmlsZVBvbmQ6cmVtb3ZlZmlsZScsIGUgPT4ge1xuXHRcdFx0XHRpZiAoZS5kZXRhaWwgJiYgZS5kZXRhaWwuZXJyb3IpIHtcblx0XHRcdFx0XHRjb25zb2xlLmxvZygnRXJyb3IgdXBsb2RpbmcgZmlsZTogJywgZS5kZXRhaWwpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHNlbGYuZmlsZVVwbG9hZGVyVXBkYXRlQ3VycmVudElucHV0KClcblx0XHRcdH0pO1xuXG5cdFx0XHRpZiAoc2VsZi5zdGF0ZS5mb3JtZmllbGRzKSB7XG5cdFx0XHRcdGltYWdldXBsb2FkZXIuYWRkRmlsZXMoc2VsZi5zdGF0ZS5mb3JtZmllbGRzLmltYWdlcylcblx0XHRcdH1cblxuXHRcdH1cblxuICAgIHNlbGYuc2V0U3RhdGUoeyAuLi5zZWxmLnN0YXRlLCBpbWFnZXVwbG9hZGVyIH0pXG4gICAgXG5cdH1cblx0XG5cbiAgZmlsZVVwbG9hZGVyVXBkYXRlQ3VycmVudElucHV0KCkge1xuICAgIGxldCBzZWxmID0gdGhpcztcblxuXHRcdGlmIChzZWxmLnN0YXRlLmZvcm1maWVsZHMpIHtcblx0XHRcdHNlbGYuc3RhdGUuZm9ybWZpZWxkcy5pbWFnZXMgPSBbXTtcblx0XHRcdGlmICggdGhpcy5zdGF0ZS5pbWFnZXVwbG9hZGVyICYmIHRoaXMuc3RhdGUuaW1hZ2V1cGxvYWRlci5nZXRGaWxlcyApIHtcblx0XHRcdFx0dmFyIGltYWdlcyA9IHRoaXMuc3RhdGUuaW1hZ2V1cGxvYWRlci5nZXRGaWxlcygpO1xuXHRcdFx0XHRpbWFnZXMuZm9yRWFjaCgoaW1hZ2UpID0+IHtcblx0XHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdFx0dmFyIHNlcnZlcklkID0gSlNPTi5wYXJzZShpbWFnZS5zZXJ2ZXJJZClcblx0XHRcdFx0XHRcdHNlbGYuc3RhdGUuZm9ybWZpZWxkcy5pbWFnZXMucHVzaChzZXJ2ZXJJZC51cmwpXG5cdFx0XHRcdFx0fSBjYXRjaChlcnIpIHsgY29uc29sZS5sb2coZXJyKSB9XG5cdFx0XHRcdH0pO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG4gIGZpbGVVcGxvYWRlclVwbG9hZGVyQWRkSW1hZ2VzKGltYWdlcykge1xuICAgIGxldCBzZWxmID0gdGhpcztcblxuXHRcdGlmICh0aGlzLnN0YXRlLmltYWdldXBsb2FkZXIpIHtcblx0XHRcdGNvbnNvbGUubG9nKDIsIGltYWdlcylcblx0XHRcdHRoaXMuc3RhdGUuaW1hZ2V1cGxvYWRlci5hZGRGaWxlcyhpbWFnZXMpXG5cdFx0fVxuXHR9XG5cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/component/idea-form.jsx\n");

/***/ }),

/***/ "./src/component/ideas-list.jsx":
/*!**************************************!*\
  !*** ./src/component/ideas-list.jsx ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return IdeasList; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n'use strict';\n\nvar IdeasList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(IdeasList, _React$Component);\n\n  function IdeasList(props) {\n    var _this;\n\n    _classCallCheck(this, IdeasList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(IdeasList).call(this, props)); // config\n\n    var defaultConfig = {\n      titleField: 'title',\n      summaryField: 'summary',\n      // sortOptions: [{ value: 'random', name: 'Random' }, { value: 'ranking', name: 'Ranking' }, { value: 'newest', name: 'Nieuwste eerst' }, { value: 'oldest', name: 'Oudste eerst' }, { value: 'distance', name: 'Afstand' }],\n      sortOptions: [{\n        value: 'newest',\n        name: 'Nieuwste eerst'\n      }, {\n        value: 'oldest',\n        name: 'Oudste eerst'\n      }],\n      showSortButton: true,\n      defaultSortOrder: 'newest'\n    };\n    _this.config = Object.assign(defaultConfig, _this.props.config || {});\n    _this.config.onIdeaClick = _this.config.onIdeaClick || _this.onIdeaClick.bind(_assertThisInitialized(_this));\n    _this.state = {\n      currentSortOrder: _this.config.defaultSortOrder,\n      ideas: _this.props.ideas || [],\n      showSortButton: _this.config.showSortButton\n    };\n    return _this;\n  }\n\n  _createClass(IdeasList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount(prevProps, prevState) {}\n  }, {\n    key: \"updateIdeas\",\n    value: function updateIdeas(_ref) {\n      var _ref$ideas = _ref.ideas,\n          ideas = _ref$ideas === void 0 ? this.state.ideas : _ref$ideas,\n          _ref$sortOrder = _ref.sortOrder,\n          sortOrder = _ref$sortOrder === void 0 ? this.state.currentSortOrder : _ref$sortOrder,\n          _ref$showSortButton = _ref.showSortButton,\n          showSortButton = _ref$showSortButton === void 0 ? this.state.showSortButton : _ref$showSortButton,\n          _ref$center = _ref.center,\n          center = _ref$center === void 0 ? {\n        lat: 52.37104644463586,\n        lng: 4.900402911007405\n      } : _ref$center,\n          maxLength = _ref.maxLength;\n      var self = this;\n\n      var state = _objectSpread({}, self.state);\n\n      switch (sortOrder) {\n        case 'ranking':\n          ideas = ideas.sort(function (a, b) {\n            return a.ranking - a.ranking;\n          });\n          break;\n\n        case 'newest':\n          ideas = ideas.sort(function (a, b) {\n            return new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime();\n          });\n          break;\n\n        case 'oldest':\n          ideas = ideas.sort(function (a, b) {\n            return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();\n          });\n          break;\n\n        case 'distance':\n          ideas = ideas.map(function (idea) {\n            idea._distance = Math.sqrt(Math.pow(idea.location.coordinates[0] - center.lat, 2) + Math.pow(idea.location.coordinates[1] - center.lng, 2));\n            return idea;\n          }).sort(function (a, b) {\n            return a._distance - b._distance;\n          });\n          break;\n\n        case 'random':\n        default:\n          ideas = ideas.sort(function (a, b) {\n            return Math.random() - 0.5;\n          });\n          break;\n      }\n\n      state.ideas = maxLength ? ideas.slice(0, maxLength) : ideas;\n      state.showSortButton = showSortButton;\n      self.setState(state);\n    }\n  }, {\n    key: \"setSortOrder\",\n    value: function setSortOrder(_ref2) {\n      var sortOrder = _ref2.sortOrder;\n      this.setState(_objectSpread({}, this.state, {\n        currentSortOrder: sortOrder\n      }), function () {\n        this.updateIdeas({\n          sortOrder: sortOrder\n        });\n      });\n    }\n  }, {\n    key: \"onIdeaClick\",\n    value: function onIdeaClick(e) {// placeholder\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var self = this;\n      var sortSelector = null;\n\n      if (this.state.showSortButton) {\n        sortSelector = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"openstad-align-right-container openstad-margin-right\"\n        }, \"Sorteer op:\\xA0\\xA0\\xA0\\xA0\", react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"select\", {\n          value: self.state.currentSortOrder,\n          onChange: function onChange() {\n            return self.setSortOrder({\n              sortOrder: self.sortSelector.value\n            });\n          },\n          className: \"openstad-default-select\",\n          ref: function ref(el) {\n            return self.sortSelector = el;\n          }\n        }, self.config.sortOptions.map(function (option, i) {\n          return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"option\", {\n            value: option.value,\n            key: 'sort-option-' + i\n          }, option.name);\n        })));\n      } else {\n        sortSelector = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          style: {\n            height: 20\n          }\n        });\n      }\n\n      var titleHML = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"h3\", {\n        className: \"openstad-title\"\n      }, self.props.title, \" (\", self.state.ideas.length, \")\");\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        id: self.id,\n        className: self.props.className || 'openstad-component-info-block-ideas-list',\n        ref: function ref(el) {\n          return self.instance = el;\n        }\n      }, sortSelector, titleHML, self.state.ideas.map(function (idea, i) {\n        if (!idea) {\n          console.log('idea is undef', i, self.state.ideas);\n        }\n\n        var tmp = self.config.types.find(function (entry) {\n          return entry.name == idea.extraData.thema;\n        });\n        var typeColor = tmp && tmp.color || 'black';\n        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"openstad-component-info-block-ideas-list-idea\",\n          onClick: function onClick(event) {\n            return self.config.onIdeaClick(event, idea);\n          },\n          key: 'info-block-' + i\n        }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"openstad-component-image\",\n          style: {\n            backgroundImage: \"url(\".concat(idea.image, \")\")\n          }\n        }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"openstad-component-content\"\n        }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"h4\", null, eval(\"idea.\".concat(self.config.titleField))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"openstad-summary\"\n        }, eval(\"idea.\".concat(self.config.summaryField))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"openstad-stats\"\n        }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"openstad-likes\"\n        }, idea.yes || 0), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"openstad-reactions\"\n        }, idea.argCount || 0), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"openstad-type\",\n          style: {\n            borderColor: typeColor\n          }\n        }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"openstad-type-content\"\n        })))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"openstad-clear-both\"\n        }));\n      }));\n    }\n  }]);\n\n  return IdeasList;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50L2lkZWFzLWxpc3QuanN4PzY3ZTEiXSwibmFtZXMiOlsiSWRlYXNMaXN0IiwicHJvcHMiLCJkZWZhdWx0Q29uZmlnIiwidGl0bGVGaWVsZCIsInN1bW1hcnlGaWVsZCIsInNvcnRPcHRpb25zIiwidmFsdWUiLCJuYW1lIiwic2hvd1NvcnRCdXR0b24iLCJkZWZhdWx0U29ydE9yZGVyIiwiY29uZmlnIiwiT2JqZWN0IiwiYXNzaWduIiwib25JZGVhQ2xpY2siLCJiaW5kIiwic3RhdGUiLCJjdXJyZW50U29ydE9yZGVyIiwiaWRlYXMiLCJwcmV2UHJvcHMiLCJwcmV2U3RhdGUiLCJzb3J0T3JkZXIiLCJjZW50ZXIiLCJsYXQiLCJsbmciLCJtYXhMZW5ndGgiLCJzZWxmIiwic29ydCIsImEiLCJiIiwicmFua2luZyIsIkRhdGUiLCJjcmVhdGVkQXQiLCJnZXRUaW1lIiwibWFwIiwiaWRlYSIsIl9kaXN0YW5jZSIsIk1hdGgiLCJzcXJ0IiwicG93IiwibG9jYXRpb24iLCJjb29yZGluYXRlcyIsInJhbmRvbSIsInNsaWNlIiwic2V0U3RhdGUiLCJ1cGRhdGVJZGVhcyIsImUiLCJzb3J0U2VsZWN0b3IiLCJzZXRTb3J0T3JkZXIiLCJlbCIsIm9wdGlvbiIsImkiLCJoZWlnaHQiLCJ0aXRsZUhNTCIsInRpdGxlIiwibGVuZ3RoIiwiaWQiLCJjbGFzc05hbWUiLCJpbnN0YW5jZSIsImNvbnNvbGUiLCJsb2ciLCJ0bXAiLCJ0eXBlcyIsImZpbmQiLCJlbnRyeSIsImV4dHJhRGF0YSIsInRoZW1hIiwidHlwZUNvbG9yIiwiY29sb3IiLCJldmVudCIsImJhY2tncm91bmRJbWFnZSIsImltYWdlIiwiZXZhbCIsInllcyIsImFyZ0NvdW50IiwiYm9yZGVyQ29sb3IiLCJSZWFjdCIsIkNvbXBvbmVudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBRUE7O0lBRXFCQSxTOzs7OztBQUVu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LFVBREYsRUFFRTtBQUFLLG1CQUFTLEVBQUM7QUFBZixXQUNFLHVFQUFNQyxJQUFJLGdCQUFTOUMsSUFBSSxDQUFDZixNQUFMLENBQVlQLFVBQXJCLEVBQVYsQ0FERixFQUVFO0FBQUssbUJBQVMsRUFBQztBQUFmLFdBQ0lvRSxJQUFJLGdCQUFTOUMsSUFBSSxDQUFDZixNQUFMLENBQVlOLFlBQXJCLEVBRFIsQ0FGRixFQUtFO0FBQUssbUJBQVMsRUFBQztBQUFmLFdBQ0E7QUFBSyxtQkFBUyxFQUFDO0FBQWYsV0FDRzhCLElBQUksQ0FBQ3NDLEdBQUwsSUFBWSxDQURmLENBREEsRUFJQTtBQUFLLG1CQUFTLEVBQUM7QUFBZixXQUNHdEMsSUFBSSxDQUFDdUMsUUFBTCxJQUFpQixDQURwQixDQUpBLEVBT0E7QUFBSyxtQkFBUyxFQUFDLGVBQWY7QUFBK0IsZUFBSyxFQUFFO0FBQUVDLHVCQUFXLEVBQUVSO0FBQWY7QUFBdEMsV0FDRTtBQUFLLG1CQUFTLEVBQUM7QUFBZixVQURGLENBUEEsQ0FMRixDQUZGLEVBbUJFO0FBQUssbUJBQVMsRUFBQztBQUFmLFVBbkJGLENBREY7QUF1QkQsT0E3QkMsQ0FOUCxDQURDO0FBd0NEOzs7O0VBMUlvQ1MsNENBQUssQ0FBQ0MsUyIsImZpbGUiOiIuL3NyYy9jb21wb25lbnQvaWRlYXMtbGlzdC5qc3guanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG4ndXNlIHN0cmljdCc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIElkZWFzTGlzdCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG5cbiAgY29uc3RydWN0b3IocHJvcHMpIHtcblxuICAgIHN1cGVyKHByb3BzKTtcblxuXHRcdC8vIGNvbmZpZ1xuXHRcdGxldCBkZWZhdWx0Q29uZmlnID0ge1xuICAgICAgdGl0bGVGaWVsZDogJ3RpdGxlJyxcbiAgICAgIHN1bW1hcnlGaWVsZDogJ3N1bW1hcnknLFxuICAgICAgLy8gc29ydE9wdGlvbnM6IFt7IHZhbHVlOiAncmFuZG9tJywgbmFtZTogJ1JhbmRvbScgfSwgeyB2YWx1ZTogJ3JhbmtpbmcnLCBuYW1lOiAnUmFua2luZycgfSwgeyB2YWx1ZTogJ25ld2VzdCcsIG5hbWU6ICdOaWV1d3N0ZSBlZXJzdCcgfSwgeyB2YWx1ZTogJ29sZGVzdCcsIG5hbWU6ICdPdWRzdGUgZWVyc3QnIH0sIHsgdmFsdWU6ICdkaXN0YW5jZScsIG5hbWU6ICdBZnN0YW5kJyB9XSxcbiAgICAgIHNvcnRPcHRpb25zOiBbeyB2YWx1ZTogJ25ld2VzdCcsIG5hbWU6ICdOaWV1d3N0ZSBlZXJzdCcgfSwgeyB2YWx1ZTogJ29sZGVzdCcsIG5hbWU6ICdPdWRzdGUgZWVyc3QnIH1dLFxuICAgICAgc2hvd1NvcnRCdXR0b246IHRydWUsXG4gICAgICBkZWZhdWx0U29ydE9yZGVyOiAnbmV3ZXN0Jyxcblx0XHR9O1xuXHRcdHRoaXMuY29uZmlnID0gT2JqZWN0LmFzc2lnbihkZWZhdWx0Q29uZmlnLCB0aGlzLnByb3BzLmNvbmZpZyB8fCB7fSlcblx0XHR0aGlzLmNvbmZpZy5vbklkZWFDbGljayA9IHRoaXMuY29uZmlnLm9uSWRlYUNsaWNrIHx8IHRoaXMub25JZGVhQ2xpY2suYmluZCh0aGlzKTtcblxuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICBjdXJyZW50U29ydE9yZGVyOiB0aGlzLmNvbmZpZy5kZWZhdWx0U29ydE9yZGVyLFxuICAgICAgaWRlYXM6IHRoaXMucHJvcHMuaWRlYXMgfHwgW10sXG4gICAgICBzaG93U29ydEJ1dHRvbjogdGhpcy5jb25maWcuc2hvd1NvcnRCdXR0b24sXG4gICAgfTtcblxuICB9XG5cblx0Y29tcG9uZW50RGlkTW91bnQocHJldlByb3BzLCBwcmV2U3RhdGUpIHtcblx0fVxuXG4gIHVwZGF0ZUlkZWFzKHsgaWRlYXMgPSB0aGlzLnN0YXRlLmlkZWFzLCBzb3J0T3JkZXIgPSB0aGlzLnN0YXRlLmN1cnJlbnRTb3J0T3JkZXIsIHNob3dTb3J0QnV0dG9uID0gdGhpcy5zdGF0ZS5zaG93U29ydEJ1dHRvbiwgY2VudGVyID0geyBsYXQ6IDUyLjM3MTA0NjQ0NDYzNTg2LCBsbmc6IDQuOTAwNDAyOTExMDA3NDA1IH0sIG1heExlbmd0aCB9KSB7XG5cbiAgICBsZXQgc2VsZiA9IHRoaXM7XG4gICAgbGV0IHN0YXRlID0geyAuLi5zZWxmLnN0YXRlIH07XG5cblx0XHRzd2l0Y2goc29ydE9yZGVyKXtcblx0XHRcdGNhc2UgJ3JhbmtpbmcnOlxuXHRcdFx0XHRpZGVhcyA9IGlkZWFzLnNvcnQoIGZ1bmN0aW9uKGEsYikgeyByZXR1cm4gYS5yYW5raW5nIC0gYS5yYW5raW5nIH0pO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgJ25ld2VzdCc6XG5cdFx0XHRcdGlkZWFzID0gaWRlYXMuc29ydCggZnVuY3Rpb24oYSxiKSB7IHJldHVybiBuZXcgRGF0ZShhLmNyZWF0ZWRBdCkuZ2V0VGltZSgpIC0gbmV3IERhdGUoYi5jcmVhdGVkQXQpLmdldFRpbWUoKSB9KTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRjYXNlICdvbGRlc3QnOlxuXHRcdFx0XHRpZGVhcyA9IGlkZWFzLnNvcnQoIGZ1bmN0aW9uKGEsYikgeyByZXR1cm4gbmV3IERhdGUoYi5jcmVhdGVkQXQpLmdldFRpbWUoKSAtIG5ldyBEYXRlKGEuY3JlYXRlZEF0KS5nZXRUaW1lKCkgfSk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSAnZGlzdGFuY2UnOlxuXHRcdFx0XHRpZGVhcyA9IGlkZWFzXG4gICAgICAgICAgLm1hcCggaWRlYSA9PiB7IGlkZWEuX2Rpc3RhbmNlID0gTWF0aC5zcXJ0KCBNYXRoLnBvdyggaWRlYS5sb2NhdGlvbi5jb29yZGluYXRlc1swXSAtIGNlbnRlci5sYXQsIDIgKSArIE1hdGgucG93KCBpZGVhLmxvY2F0aW9uLmNvb3JkaW5hdGVzWzFdIC0gY2VudGVyLmxuZywgMiApICk7IHJldHVybiBpZGVhOyB9IClcbiAgICAgICAgICAuc29ydCggZnVuY3Rpb24oYSxiKSB7IHJldHVybiBhLl9kaXN0YW5jZSAtIGIuX2Rpc3RhbmNlIH0pXG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSAncmFuZG9tJzpcblx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdGlkZWFzID0gaWRlYXMuc29ydCggZnVuY3Rpb24oYSxiKSB7IHJldHVybiBNYXRoLnJhbmRvbSgpIC0gMC41IH0pO1xuXHRcdFx0XHRicmVhaztcblx0XHR9XG5cbiAgICBzdGF0ZS5pZGVhcyA9IG1heExlbmd0aCA/IGlkZWFzLnNsaWNlKDAsIG1heExlbmd0aCk6IGlkZWFzO1xuXG4gICAgc3RhdGUuc2hvd1NvcnRCdXR0b24gPSBzaG93U29ydEJ1dHRvbjtcblxuICAgIHNlbGYuc2V0U3RhdGUoc3RhdGUpO1xuXG4gIH1cblxuICBzZXRTb3J0T3JkZXIoeyBzb3J0T3JkZXIgfSkge1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgLi4udGhpcy5zdGF0ZSxcbiAgICAgIGN1cnJlbnRTb3J0T3JkZXI6IHNvcnRPcmRlclxuICAgIH0sIGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy51cGRhdGVJZGVhcyh7IHNvcnRPcmRlciB9KVxuICAgIH0pO1xuICB9XG5cbiAgb25JZGVhQ2xpY2soZSkge1xuICAgIC8vIHBsYWNlaG9sZGVyXG4gIH1cblxuXHRyZW5kZXIoKSB7XG5cbiAgICBsZXQgc2VsZiA9IHRoaXM7XG5cbiAgICBsZXQgc29ydFNlbGVjdG9yID0gbnVsbDtcbiAgICBpZiAodGhpcy5zdGF0ZS5zaG93U29ydEJ1dHRvbikge1xuICAgICAgc29ydFNlbGVjdG9yID0gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm9wZW5zdGFkLWFsaWduLXJpZ2h0LWNvbnRhaW5lciBvcGVuc3RhZC1tYXJnaW4tcmlnaHRcIj5cbiAgICAgICAgICBTb3J0ZWVyIG9wOiZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwO1xuICAgICAgICAgIDxzZWxlY3QgdmFsdWU9e3NlbGYuc3RhdGUuY3VycmVudFNvcnRPcmRlcn0gb25DaGFuZ2U9eygpID0+IHNlbGYuc2V0U29ydE9yZGVyKHsgc29ydE9yZGVyOiBzZWxmLnNvcnRTZWxlY3Rvci52YWx1ZSB9KX0gY2xhc3NOYW1lPVwib3BlbnN0YWQtZGVmYXVsdC1zZWxlY3RcIiByZWY9e2VsID0+IChzZWxmLnNvcnRTZWxlY3RvciA9IGVsKX0+XG4gICAgICAgICAgICB7IHNlbGYuY29uZmlnLnNvcnRPcHRpb25zLm1hcCgob3B0aW9uLCBpKSA9PiB7XG4gICAgICAgICAgICAgIHJldHVybiA8b3B0aW9uIHZhbHVlPXsgb3B0aW9uLnZhbHVlIH0ga2V5PXsnc29ydC1vcHRpb24tJyArIGl9Pnsgb3B0aW9uLm5hbWUgfTwvb3B0aW9uPjtcbiAgICAgICAgICAgIH0pfVxuICAgICAgICAgIDwvc2VsZWN0PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHNvcnRTZWxlY3RvciA9ICg8ZGl2IHN0eWxlPXt7aGVpZ2h0OiAyMH19PjwvZGl2PilcbiAgICB9XG5cbiAgICBsZXQgdGl0bGVITUwgPSAoPGgzIGNsYXNzTmFtZT1cIm9wZW5zdGFkLXRpdGxlXCI+e3NlbGYucHJvcHMudGl0bGV9ICh7c2VsZi5zdGF0ZS5pZGVhcy5sZW5ndGh9KTwvaDM+KTtcblxuICAgIHJldHVybiAoXG5cdFx0XHQ8ZGl2IGlkPXtzZWxmLmlkfSBjbGFzc05hbWU9e3NlbGYucHJvcHMuY2xhc3NOYW1lIHx8ICdvcGVuc3RhZC1jb21wb25lbnQtaW5mby1ibG9jay1pZGVhcy1saXN0J30gcmVmPXtlbCA9PiAoc2VsZi5pbnN0YW5jZSA9IGVsKX0+XG5cbiAgICAgICAge3NvcnRTZWxlY3Rvcn1cblxuICAgICAgICB7dGl0bGVITUx9XG5cbiAgICAgICAgeyBzZWxmLnN0YXRlLmlkZWFzLm1hcCgoaWRlYSwgaSkgPT4ge1xuICAgICAgICAgIGlmICghaWRlYSkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ2lkZWEgaXMgdW5kZWYnLCBpLCBzZWxmLnN0YXRlLmlkZWFzKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgbGV0IHRtcCA9IHNlbGYuY29uZmlnLnR5cGVzLmZpbmQoZW50cnkgPT4gZW50cnkubmFtZSA9PSBpZGVhLmV4dHJhRGF0YS50aGVtYSk7XG4gICAgICAgICAgbGV0IHR5cGVDb2xvciA9IHRtcCAmJiB0bXAuY29sb3IgfHwgJ2JsYWNrJztcbiAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJvcGVuc3RhZC1jb21wb25lbnQtaW5mby1ibG9jay1pZGVhcy1saXN0LWlkZWFcIiBvbkNsaWNrPXsoZXZlbnQpID0+IHNlbGYuY29uZmlnLm9uSWRlYUNsaWNrKGV2ZW50LCBpZGVhKX0ga2V5PXsnaW5mby1ibG9jay0nICsgaX0+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwib3BlbnN0YWQtY29tcG9uZW50LWltYWdlXCIgc3R5bGU9e3sgYmFja2dyb3VuZEltYWdlOiBgdXJsKCR7aWRlYS5pbWFnZX0pYCB9fT48L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJvcGVuc3RhZC1jb21wb25lbnQtY29udGVudFwiPlxuICAgICAgICAgICAgICAgIDxoND57IGV2YWwoYGlkZWEuJHtzZWxmLmNvbmZpZy50aXRsZUZpZWxkfWApIH08L2g0PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwib3BlbnN0YWQtc3VtbWFyeVwiPlxuICAgICAgICAgICAgICAgICAgeyBldmFsKGBpZGVhLiR7c2VsZi5jb25maWcuc3VtbWFyeUZpZWxkfWApIH1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm9wZW5zdGFkLXN0YXRzXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJvcGVuc3RhZC1saWtlc1wiPlxuICAgICAgICAgICAgICAgICAge2lkZWEueWVzIHx8IDB9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJvcGVuc3RhZC1yZWFjdGlvbnNcIj5cbiAgICAgICAgICAgICAgICAgIHtpZGVhLmFyZ0NvdW50IHx8IDB9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJvcGVuc3RhZC10eXBlXCIgc3R5bGU9e3sgYm9yZGVyQ29sb3I6IHR5cGVDb2xvciB9fT5cbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwib3BlbnN0YWQtdHlwZS1jb250ZW50XCI+PC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm9wZW5zdGFkLWNsZWFyLWJvdGhcIj48L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICk7XG4gICAgICAgIH0pfVxuXHRcdFx0PC9kaXY+XG4gICAgKTtcblxuICB9XG5cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/component/ideas-list.jsx\n");

/***/ }),

/***/ "./src/component/ideas-on-map.jsx":
/*!****************************************!*\
  !*** ./src/component/ideas-on-map.jsx ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return OpenStadComponentIdeasOnMap; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"react-dom\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var openstad_component_src_index_jsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! openstad-component/src/index.jsx */ \"../openstad-component/src/index.jsx\");\n/* harmony import */ var _filterbar_jsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./filterbar.jsx */ \"./src/component/filterbar.jsx\");\n/* harmony import */ var _info_block_jsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./info-block.jsx */ \"./src/component/info-block.jsx\");\n/* harmony import */ var _idea_form_jsx__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./idea-form.jsx */ \"./src/component/idea-form.jsx\");\n/* harmony import */ var _idea_details_jsx__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./idea-details.jsx */ \"./src/component/idea-details.jsx\");\n/* harmony import */ var _map_jsx__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./map.jsx */ \"./src/component/map.jsx\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n\n\n\n\n\n // TODO: clean up; ik gebruikte eerst setNewIdea en setSelected, maar nu onNewIdeaClick en onSelectedIdeaClick; trek dat gelijk\n\n'use strict';\n\nvar OpenStadComponentIdeasOnMap =\n/*#__PURE__*/\nfunction (_OpenStadComponent) {\n  _inherits(OpenStadComponentIdeasOnMap, _OpenStadComponent);\n\n  function OpenStadComponentIdeasOnMap(props) {\n    var _this;\n\n    _classCallCheck(this, OpenStadComponentIdeasOnMap);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OpenStadComponentIdeasOnMap).call(this, props));\n\n    var self = _assertThisInitialized(_this); // config\n\n\n    self.defaultConfig = {\n      title: 'Kansen en knelpunten' || false,\n      editMarker: undefined,\n      currentPolygon: undefined,\n      types: [{\n        name: \"Auto\",\n        color: \"#FF9100\",\n        icon: \"\"\n      }, {\n        name: \"Fiets\",\n        color: \"#00A03C\",\n        icon: \"\"\n      }, {\n        name: \"Voetganger\",\n        color: \"#004699\",\n        icon: \"\"\n      }, {\n        name: \"Recreëren\",\n        color: \"#FF9100\",\n        icon: \"\"\n      }, {\n        name: \"Schoon\",\n        color: \"#EC0000\",\n        icon: \"\"\n      }, {\n        name: \"Groen\",\n        color: \"#004699\",\n        icon: \"\"\n      }, {\n        name: \"Geluid\",\n        color: \"#00A03C\",\n        icon: \"\"\n      }, {\n        name: \"Overig\",\n        color: \"#EC0000\",\n        icon: \"\"\n      }],\n      areas: [{\n        name: \"Heel West\",\n        value: \"Heel West\",\n        polygon: [{\n          \"lng\": 4.8353454,\n          \"lat\": 52.3731265\n        }, {\n          \"lng\": 4.8422025,\n          \"lat\": 52.3721002\n        }, {\n          \"lng\": 4.8421761,\n          \"lat\": 52.3695836\n        }, {\n          \"lng\": 4.8455807,\n          \"lat\": 52.3696369\n        }, {\n          \"lng\": 4.8476385,\n          \"lat\": 52.369853\n        }, {\n          \"lng\": 4.8477361,\n          \"lat\": 52.3695885\n        }, {\n          \"lng\": 4.8484176,\n          \"lat\": 52.369697\n        }, {\n          \"lng\": 4.8504835,\n          \"lat\": 52.3653302\n        }, {\n          \"lng\": 4.8504956,\n          \"lat\": 52.3643692\n        }, {\n          \"lng\": 4.8501587,\n          \"lat\": 52.3638376\n        }, {\n          \"lng\": 4.8494487,\n          \"lat\": 52.3633001\n        }, {\n          \"lng\": 4.8495059,\n          \"lat\": 52.3610989\n        }, {\n          \"lng\": 4.8489152,\n          \"lat\": 52.3608149\n        }, {\n          \"lng\": 4.8487824,\n          \"lat\": 52.3578658\n        }, {\n          \"lng\": 4.8504012,\n          \"lat\": 52.3578553\n        }, {\n          \"lng\": 4.8518982,\n          \"lat\": 52.357844\n        }, {\n          \"lng\": 4.8538275,\n          \"lat\": 52.3581295\n        }, {\n          \"lng\": 4.854723,\n          \"lat\": 52.3578629\n        }, {\n          \"lng\": 4.854635,\n          \"lat\": 52.3577532\n        }, {\n          \"lng\": 4.85436,\n          \"lat\": 52.3572975\n        }, {\n          \"lng\": 4.8540881,\n          \"lat\": 52.3564026\n        }, {\n          \"lng\": 4.8547969,\n          \"lat\": 52.3562758\n        }, {\n          \"lng\": 4.8698903,\n          \"lat\": 52.3601067\n        }, {\n          \"lng\": 4.8699397,\n          \"lat\": 52.3600231\n        }, {\n          \"lng\": 4.8714122,\n          \"lat\": 52.3603737\n        }, {\n          \"lng\": 4.8712647,\n          \"lat\": 52.3605634\n        }, {\n          \"lng\": 4.8715288,\n          \"lat\": 52.3605997\n        }, {\n          \"lng\": 4.8716826,\n          \"lat\": 52.3604277\n        }, {\n          \"lng\": 4.8738605,\n          \"lat\": 52.3608533\n        }, {\n          \"lng\": 4.8738525,\n          \"lat\": 52.3610213\n        }, {\n          \"lng\": 4.8740097,\n          \"lat\": 52.3610407\n        }, {\n          \"lng\": 4.8741351,\n          \"lat\": 52.3608935\n        }, {\n          \"lng\": 4.8750611,\n          \"lat\": 52.3608041\n        }, {\n          \"lng\": 4.8756501,\n          \"lat\": 52.3606138\n        }, {\n          \"lng\": 4.876429,\n          \"lat\": 52.3607996\n        }, {\n          \"lng\": 4.8765642,\n          \"lat\": 52.3606177\n        }, {\n          \"lng\": 4.876929,\n          \"lat\": 52.3606957\n        }, {\n          \"lng\": 4.8768495,\n          \"lat\": 52.360911\n        }, {\n          \"lng\": 4.8771709,\n          \"lat\": 52.3609696\n        }, {\n          \"lng\": 4.8774,\n          \"lat\": 52.3607583\n        }, {\n          \"lng\": 4.8819952,\n          \"lat\": 52.3620427\n        }, {\n          \"lng\": 4.8813956,\n          \"lat\": 52.3630818\n        }, {\n          \"lng\": 4.8808146,\n          \"lat\": 52.3634904\n        }, {\n          \"lng\": 4.8793708,\n          \"lat\": 52.3643261\n        }, {\n          \"lng\": 4.8792691,\n          \"lat\": 52.3649574\n        }, {\n          \"lng\": 4.8787082,\n          \"lat\": 52.3658206\n        }, {\n          \"lng\": 4.8775395,\n          \"lat\": 52.3667815\n        }, {\n          \"lng\": 4.8767523,\n          \"lat\": 52.3685117\n        }, {\n          \"lng\": 4.8754901,\n          \"lat\": 52.3697867\n        }, {\n          \"lng\": 4.8745065,\n          \"lat\": 52.3718772\n        }, {\n          \"lng\": 4.8745782,\n          \"lat\": 52.3725454\n        }, {\n          \"lng\": 4.8753796,\n          \"lat\": 52.373407\n        }, {\n          \"lng\": 4.8755899,\n          \"lat\": 52.3743025\n        }, {\n          \"lng\": 4.8799131,\n          \"lat\": 52.3813052\n        }, {\n          \"lng\": 4.8796339,\n          \"lat\": 52.3819128\n        }, {\n          \"lng\": 4.880478,\n          \"lat\": 52.3822531\n        }, {\n          \"lng\": 4.8818058,\n          \"lat\": 52.3843528\n        }, {\n          \"lng\": 4.882637,\n          \"lat\": 52.3854107\n        }, {\n          \"lng\": 4.8846503,\n          \"lat\": 52.3883466\n        }, {\n          \"lng\": 4.8857963,\n          \"lat\": 52.3881476\n        }, {\n          \"lng\": 4.8911796,\n          \"lat\": 52.3884502\n        }, {\n          \"lng\": 4.8937804,\n          \"lat\": 52.3886712\n        }, {\n          \"lng\": 4.8956658,\n          \"lat\": 52.3888313\n        }, {\n          \"lng\": 4.8927982,\n          \"lat\": 52.3933453\n        }, {\n          \"lng\": 4.8850924,\n          \"lat\": 52.398824\n        }, {\n          \"lng\": 4.8762366,\n          \"lat\": 52.3945287\n        }, {\n          \"lng\": 4.8726422,\n          \"lat\": 52.3948206\n        }, {\n          \"lng\": 4.8719896,\n          \"lat\": 52.3947192\n        }, {\n          \"lng\": 4.8719508,\n          \"lat\": 52.3952766\n        }, {\n          \"lng\": 4.8715979,\n          \"lat\": 52.39538\n        }, {\n          \"lng\": 4.8667403,\n          \"lat\": 52.393136\n        }, {\n          \"lng\": 4.8643092,\n          \"lat\": 52.3927072\n        }, {\n          \"lng\": 4.8627057,\n          \"lat\": 52.3938521\n        }, {\n          \"lng\": 4.8603441,\n          \"lat\": 52.3949382\n        }, {\n          \"lng\": 4.858593,\n          \"lat\": 52.3952782\n        }, {\n          \"lng\": 4.8569204,\n          \"lat\": 52.3953667\n        }, {\n          \"lng\": 4.8569896,\n          \"lat\": 52.3938363\n        }, {\n          \"lng\": 4.8573172,\n          \"lat\": 52.3938424\n        }, {\n          \"lng\": 4.8574043,\n          \"lat\": 52.3920751\n        }, {\n          \"lng\": 4.8589526,\n          \"lat\": 52.3912226\n        }, {\n          \"lng\": 4.8592744,\n          \"lat\": 52.3905434\n        }, {\n          \"lng\": 4.8592929,\n          \"lat\": 52.3887899\n        }, {\n          \"lng\": 4.8449045,\n          \"lat\": 52.3887733\n        }, {\n          \"lng\": 4.8451066,\n          \"lat\": 52.3850658\n        }, {\n          \"lng\": 4.8446526,\n          \"lat\": 52.3850638\n        }, {\n          \"lng\": 4.8390117,\n          \"lat\": 52.3850241\n        }, {\n          \"lng\": 4.8392807,\n          \"lat\": 52.3829687\n        }, {\n          \"lng\": 4.838548,\n          \"lat\": 52.3808766\n        }, {\n          \"lng\": 4.836707,\n          \"lat\": 52.3763581\n        }, {\n          \"lng\": 4.8353454,\n          \"lat\": 52.3731265\n        }]\n      }, {\n        name: \"De Baarsjes\",\n        value: \"De Baarsjes\",\n        polygon: [{\n          \"lng\": 4.8558724,\n          \"lat\": 52.374202\n        }, {\n          \"lng\": 4.8577714,\n          \"lat\": 52.3681953\n        }, {\n          \"lng\": 4.8582878,\n          \"lat\": 52.3648623\n        }, {\n          \"lng\": 4.8592819,\n          \"lat\": 52.3648966\n        }, {\n          \"lng\": 4.8598228,\n          \"lat\": 52.364783\n        }, {\n          \"lng\": 4.8613989,\n          \"lat\": 52.3664539\n        }, {\n          \"lng\": 4.8661845,\n          \"lat\": 52.3717538\n        }, {\n          \"lng\": 4.8664001,\n          \"lat\": 52.3721596\n        }, {\n          \"lng\": 4.8663889,\n          \"lat\": 52.372566\n        }, {\n          \"lng\": 4.865846,\n          \"lat\": 52.3733281\n        }, {\n          \"lng\": 4.8646717,\n          \"lat\": 52.3734961\n        }, {\n          \"lng\": 4.8641583,\n          \"lat\": 52.3750737\n        }, {\n          \"lng\": 4.8640923,\n          \"lat\": 52.3752839\n        }, {\n          \"lng\": 4.8559599,\n          \"lat\": 52.3743342\n        }, {\n          \"lng\": 4.8558724,\n          \"lat\": 52.374202\n        }]\n      }, {\n        name: \"Oud West\",\n        value: \"Oud West\",\n        polygon: [{\n          \"lng\": 4.8546816,\n          \"lat\": 52.3568634\n        }, {\n          \"lng\": 4.855041,\n          \"lat\": 52.3563261\n        }, {\n          \"lng\": 4.858839,\n          \"lat\": 52.3572696\n        }, {\n          \"lng\": 4.8625458,\n          \"lat\": 52.3582427\n        }, {\n          \"lng\": 4.8646701,\n          \"lat\": 52.3588487\n        }, {\n          \"lng\": 4.868731,\n          \"lat\": 52.3597955\n        }, {\n          \"lng\": 4.8703188,\n          \"lat\": 52.3601231\n        }, {\n          \"lng\": 4.8717136,\n          \"lat\": 52.3604376\n        }, {\n          \"lng\": 4.8738218,\n          \"lat\": 52.3609651\n        }, {\n          \"lng\": 4.8763055,\n          \"lat\": 52.3607226\n        }, {\n          \"lng\": 4.8776842,\n          \"lat\": 52.3608635\n        }, {\n          \"lng\": 4.878167,\n          \"lat\": 52.3610044\n        }, {\n          \"lng\": 4.8812676,\n          \"lat\": 52.3618856\n        }, {\n          \"lng\": 4.8807043,\n          \"lat\": 52.3623966\n        }, {\n          \"lng\": 4.8798675,\n          \"lat\": 52.3633663\n        }, {\n          \"lng\": 4.8795778,\n          \"lat\": 52.3639428\n        }, {\n          \"lng\": 4.8792613,\n          \"lat\": 52.3644931\n        }, {\n          \"lng\": 4.8791272,\n          \"lat\": 52.3650598\n        }, {\n          \"lng\": 4.8787785,\n          \"lat\": 52.3656691\n        }, {\n          \"lng\": 4.8779202,\n          \"lat\": 52.3663734\n        }, {\n          \"lng\": 4.8773838,\n          \"lat\": 52.366809\n        }, {\n          \"lng\": 4.8772336,\n          \"lat\": 52.3676312\n        }, {\n          \"lng\": 4.8769385,\n          \"lat\": 52.3681389\n        }, {\n          \"lng\": 4.8754311,\n          \"lat\": 52.3697536\n        }, {\n          \"lng\": 4.8746211,\n          \"lat\": 52.3714043\n        }, {\n          \"lng\": 4.8744494,\n          \"lat\": 52.3720594\n        }, {\n          \"lng\": 4.8744602,\n          \"lat\": 52.3723083\n        }, {\n          \"lng\": 4.8752166,\n          \"lat\": 52.3729895\n        }, {\n          \"lng\": 4.8745943,\n          \"lat\": 52.3731762\n        }, {\n          \"lng\": 4.870925,\n          \"lat\": 52.3724033\n        }, {\n          \"lng\": 4.8680175,\n          \"lat\": 52.3717974\n        }, {\n          \"lng\": 4.8665959,\n          \"lat\": 52.3715648\n        }, {\n          \"lng\": 4.8654211,\n          \"lat\": 52.3703825\n        }, {\n          \"lng\": 4.8641176,\n          \"lat\": 52.3689905\n        }, {\n          \"lng\": 4.8628623,\n          \"lat\": 52.3676443\n        }, {\n          \"lng\": 4.8616499,\n          \"lat\": 52.3662554\n        }, {\n          \"lng\": 4.8604268,\n          \"lat\": 52.3648862\n        }, {\n          \"lng\": 4.8602505,\n          \"lat\": 52.3647431\n        }, {\n          \"lng\": 4.8591448,\n          \"lat\": 52.3634056\n        }, {\n          \"lng\": 4.8580772,\n          \"lat\": 52.3621247\n        }, {\n          \"lng\": 4.8575783,\n          \"lat\": 52.3615515\n        }, {\n          \"lng\": 4.857117,\n          \"lat\": 52.3604245\n        }, {\n          \"lng\": 4.856248,\n          \"lat\": 52.3592681\n        }, {\n          \"lng\": 4.8555345,\n          \"lat\": 52.3580035\n        }, {\n          \"lng\": 4.855299,\n          \"lat\": 52.357674\n        }, {\n          \"lng\": 4.855269,\n          \"lat\": 52.3576447\n        }, {\n          \"lng\": 4.855115,\n          \"lat\": 52.3574166\n        }, {\n          \"lng\": 4.8549071,\n          \"lat\": 52.3571512\n        }, {\n          \"lng\": 4.85479,\n          \"lat\": 52.3570018\n        }, {\n          \"lng\": 4.8546816,\n          \"lat\": 52.3568634\n        }]\n      }],\n      titleField: 'title',\n      summaryField: 'summary',\n      typeField: self.config.typeField || 'extraData.thema',\n      areaField: self.config.areaField || 'extraData.gebied',\n      userJWT: self.config.userJWT\n    };\n    self.config = Object.assign(self.defaultConfig, self.config || {}); // defaults\n\n    self.config.doSearchFunction = self.config.doSearchFunction || self.doSearch.bind(self);\n    self.config.map = self.config.map || {};\n    self.config.map.onMapClick = self.config.map.onMapClick || self.onMapClick.bind(self);\n    self.config.map.onMarkerClick = self.config.map.onMarkerClick || self.onMarkerClick.bind(self);\n    self.config.map.clustering = self.config.map.clustering || {};\n    self.config.map.clustering.onClusterClick = self.config.map.clustering.onClusterClick || self.onClusterClick.bind(self);\n    self.state = {\n      ideas: [],\n      status: 'default',\n      // default, idea-selected, location-selected, idea-details, idea-form\n      currentIdea: null,\n      editIdea: {\n        ideaId: null\n      }\n    };\n    return _this;\n  }\n\n  _createClass(OpenStadComponentIdeasOnMap, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount(prevProps, prevState) {\n      var self = this; // when the map is ready\n\n      self.map.instance.addEventListener('mapIsReady', function (e) {\n        // fetch the data\n        self.fetchData(); // handle map changes\n\n        self.map.map.on('zoomend', function () {\n          self.onChangeMapBoundaries();\n        });\n        self.map.map.on('moveend', function () {\n          self.onChangeMapBoundaries();\n        });\n      }); // handle filter changes\n\n      self.filterbar.instance.addEventListener('typeFilterUpdate', function (event) {\n        self.onChangeTypeFilter(event.detail.value);\n      });\n      self.filterbar.instance.addEventListener('areaFilterUpdate', function (event) {\n        self.onChangeAreaFilter(event.detail.value);\n      }); // handle infoblock changes\n\n      document.addEventListener('updateSelectedIdea', function (event) {\n        self.onUpdateSelectedIdea(event.detail.idea);\n      });\n      document.addEventListener('updateNewIdea', function (event) {\n        self.onUpdateNewIdea(event.detail.idea);\n      });\n      document.addEventListener('updateEditIdea', function (event) {\n        self.onUpdateEditIdea(event.detail.idea);\n      });\n      document.addEventListener('selectedIdeaClick', function (event) {\n        self.onSelectedIdeaClick();\n      });\n      document.addEventListener('newIdeaClick', function (event) {\n        self.onNewIdeaClick();\n      });\n    }\n  }, {\n    key: \"fetchData\",\n    value: function fetchData() {\n      var self = this;\n      var url = \"\".concat(self.config.apiUrl, \"/api/site/\").concat(self.config.siteId, \"/idea?includeVoteCount=1&includeArguments=1\");\n      fetch(url, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        //let xxx;\n        var ideas = json.filter(function (idea) {\n          return idea.location;\n        });\n        self.map.addMarkers(ideas.map(function (idea) {\n          //if ( idea.id==91 ) xxx = idea\n          var type = idea && eval(\"idea.\".concat(self.config.typeField));\n          var tmp = self.config.types.find(function (entry) {\n            return entry.name == type;\n          });\n          var color = tmp && tmp.color || 'black';\n          var html = \"<svg viewBox=\\\"0 0 26 26\\\"><circle cx=\\\"13\\\" cy=\\\"13\\\" r=\\\"13\\\" fill=\\\"\".concat(color, \"\\\"/></svg>\"); // TODO: je moet hier geen L. gebruiken; hang dat in de map\n\n          var icon = L.divIcon({\n            html: html,\n            className: 'openstad-component-ideas-on-map-icon',\n            iconSize: L.point(26, 26),\n            iconAnchor: [13, 13]\n          }); // TODO: temp oplosing voor images moet dus beter\n\n          idea.image = idea.posterImage && idea.posterImage.key || idea.extraData && idea.extraData.images && idea.extraData.images[0] || \"https://stemvanwest.amsterdam.nl/img/placeholders/idea.jpg\";\n          return {\n            lat: idea.location.coordinates[0],\n            lng: idea.location.coordinates[1],\n            data: idea,\n            icon: icon\n          };\n        }));\n        self.setState({\n          ideas: ideas\n        });\n        self.map.setBoundsAndCenter(self.map.markers); //self.setState({ ideas, status: 'idea-details', currentIdea: xxx });\n        //self.setNewIdea(null);\n        //self.setSelectedIdea(xxx);\n      })[\"catch\"](function (err) {\n        console.log('Niet goed');\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"doSearch\",\n    value: function doSearch(searchValue, callback) {\n      var self = this;\n      var searchResult = {\n        ideas: [],\n        locations: []\n      };\n      this.state.ideas.forEach(function (idea) {\n        var title = eval(\"idea.\".concat(self.config.titleField)) || '';\n        var summary = eval(\"idea.\".concat(self.config.summaryField)) || '';\n\n        if (title.match(searchValue) || summary.match(searchValue)) {\n          searchResult.ideas.push({\n            text: title,\n            onClick: function onClick() {\n              self.onUpdateSelectedIdea(idea);\n            }\n          });\n        }\n      });\n      callback(searchValue, searchResult);\n    }\n  }, {\n    key: \"setCurrentPolygon\",\n    value: function setCurrentPolygon(polygon) {\n      var state = _objectSpread({}, this.state);\n\n      state.currentPolygon = polygon ? this.map.createCutoutPolygon(polygon) : undefined;\n      this.setState(state);\n    }\n  }, {\n    key: \"removeCurrentPolygon\",\n    value: function removeCurrentPolygon() {\n      this.map.removePolygon(this.state.currentPolygon);\n\n      var state = _objectSpread({}, this.state);\n\n      state.currentPolygon = undefined;\n      this.setState(state);\n    }\n  }, {\n    key: \"createEditMarker\",\n    value: function createEditMarker(location) {\n      if (this.state.editMarker) {\n        this.removeEditMarker();\n      }\n\n      ;\n      this.setState(_objectSpread({}, this.state, {\n        editMarker: this.map.addMarker({\n          lat: location.lat,\n          lng: location.lng,\n          doNotCluster: true\n        })\n      }));\n    }\n  }, {\n    key: \"updateEditMarker\",\n    value: function updateEditMarker(location) {\n      this.map.updateMarker(this.state.editMarker, {\n        location: {\n          lat: location.lat,\n          lng: location.lng\n        }\n      });\n    }\n  }, {\n    key: \"removeEditMarker\",\n    value: function removeEditMarker() {\n      if (this.state.editMarker) this.map.removeMarker(this.state.editMarker);\n      this.setState(_objectSpread({}, this.state, {\n        editMarker: null\n      }));\n    }\n  }, {\n    key: \"getVisibleIdeas\",\n    value: function getVisibleIdeas() {\n      var self = this;\n      var visibleIdeas = self.map.markers.filter(function (marker) {\n        return marker.visible && marker.data && self.map.map.getBounds().contains(marker.getLatLng());\n      }).map(function (marker) {\n        return marker.data;\n      });\n      return visibleIdeas;\n    }\n  }, {\n    key: \"setNewIdea\",\n    value: function setNewIdea(idea) {\n      var self = this;\n\n      if (idea) {\n        self.map.fadeMarkers({\n          exception: [location]\n        });\n\n        if (self.state.editMarker) {\n          self.updateEditMarker({\n            lat: idea.location.coordinates[0],\n            lng: idea.location.coordinates[1]\n          });\n        } else {\n          self.createEditMarker({\n            lat: idea.location.coordinates[0],\n            lng: idea.location.coordinates[1]\n          });\n        }\n\n        if (self.infoblock) {\n          self.map.getPointInfo({\n            lat: idea.location.coordinates[0],\n            lng: idea.location.coordinates[1]\n          }, null, function (json, marker) {\n            self.infoblock.setNewIdea({\n              location: idea.location,\n              address: json\n            });\n          });\n          self.infoblock.updateIdeas({\n            ideas: self.getVisibleIdeas().filter(function (x) {\n              return x.id != idea.id;\n            }),\n            sortOrder: 'distance',\n            showSortButton: false,\n            center: {\n              lat: idea.location.coordinates[0],\n              lng: idea.location.coordinates[1]\n            },\n            maxLength: 5\n          });\n        }\n      } else {\n        self.map.unfadeAllMarkers();\n        self.removeEditMarker();\n\n        if (self.infoblock) {\n          self.infoblock.setNewIdea(null);\n          self.infoblock.updateIdeas({\n            ideas: self.getVisibleIdeas(),\n            showSortButton: true\n          });\n        }\n      }\n    }\n  }, {\n    key: \"setSelectedIdea\",\n    value: function setSelectedIdea(idea) {\n      this.selectedIdea = idea;\n\n      if (idea) {\n        this.map.fadeMarkers({\n          exception: idea\n        });\n\n        if (this.infoblock) {\n          this.infoblock.setSelectedIdea(idea);\n          this.infoblock.updateIdeas({\n            ideas: this.getVisibleIdeas().filter(function (x) {\n              return x.id != idea.id;\n            }),\n            sortOrder: 'distance',\n            showSortButton: false,\n            center: {\n              lat: idea.location.coordinates[0],\n              lng: idea.location.coordinates[1]\n            },\n            maxLength: 5\n          });\n        }\n      } else {\n        this.map.unfadeAllMarkers();\n\n        if (this.infoblock) {\n          this.infoblock.setSelectedIdea(null);\n          this.infoblock.updateIdeas({\n            ideas: this.getVisibleIdeas(),\n            showSortButton: true\n          });\n        }\n      }\n    }\n  }, {\n    key: \"onMapClick\",\n    value: function onMapClick(event) {\n      if (this.selectedIdea || this.state.editMarker) {\n        this.setState(_objectSpread({}, this.state, {\n          status: 'default',\n          currentIdea: null\n        }));\n        this.setSelectedIdea(null);\n        this.setNewIdea(null);\n        this.infoblock.updateIdeas({\n          ideas: this.getVisibleIdeas(),\n          showSortButton: true\n        });\n      } else {\n        this.setState(_objectSpread({}, this.state, {\n          status: 'location-selected',\n          currentIdea: null\n        }));\n        this.setSelectedIdea(null);\n        this.setNewIdea({\n          id: 'New Idea',\n          location: {\n            coordinates: [event.latlng.lat, event.latlng.lng]\n          }\n        });\n      }\n\n      this.map.updateFading();\n    }\n  }, {\n    key: \"onMarkerClick\",\n    value: function onMarkerClick(event) {\n      this.setState(_objectSpread({}, this.state, {\n        status: 'idea-selected',\n        currentIdea: event.target.data\n      }));\n      this.setNewIdea(null);\n      this.setSelectedIdea(event.target.data);\n    }\n  }, {\n    key: \"onClusterClick\",\n    value: function onClusterClick(event) {\n      this.setState(_objectSpread({}, this.state, {\n        status: 'default',\n        currentIdea: null\n      }));\n      this.setNewIdea(null);\n      this.setSelectedIdea(null);\n    }\n  }, {\n    key: \"onChangeMapBoundaries\",\n    value: function onChangeMapBoundaries() {\n      this.map.updateFading();\n\n      if (!(this.selectedIdea || this.state.editMarker)) {\n        if (this.infoblock) {\n          this.infoblock.updateIdeas({\n            ideas: this.getVisibleIdeas(),\n            showSortButton: true\n          });\n        }\n      }\n    }\n  }, {\n    key: \"onUpdateEditIdea\",\n    value: function onUpdateEditIdea(idea) {\n      this.setState(_objectSpread({}, this.state, {\n        editIdea: _objectSpread({}, idea),\n        currentIdea: idea\n      }));\n    }\n  }, {\n    key: \"onUpdateSelectedIdea\",\n    value: function onUpdateSelectedIdea(idea) {\n      this.setState(_objectSpread({}, this.state, {\n        status: 'default',\n        currentIdea: idea\n      }), function () {\n        this.setNewIdea(null);\n        this.setSelectedIdea(idea);\n      });\n    }\n  }, {\n    key: \"onUpdateNewIdea\",\n    value: function onUpdateNewIdea(idea) {\n      this.setState(_objectSpread({}, this.state, {\n        status: 'default',\n        currentIdea: idea\n      }), function () {\n        this.setSelectedIdea(null);\n        this.setNewIdea(idea);\n      });\n    }\n  }, {\n    key: \"onSelectedIdeaClick\",\n    value: function onSelectedIdeaClick(idea) {\n      this.setState(_objectSpread({}, this.state, {\n        status: 'idea-details'\n      }), function () {});\n    }\n  }, {\n    key: \"onNewIdeaClick\",\n    value: function onNewIdeaClick() {\n      this.setState(_objectSpread({}, this.state, {\n        status: 'idea-form'\n      }), function () {});\n    }\n  }, {\n    key: \"onChangeTypeFilter\",\n    value: function onChangeTypeFilter(value) {\n      var self = this;\n      self.setSelectedIdea(null);\n      self.setNewIdea(null);\n      self.map.setFilter(function (marker) {\n        if (value && value !== '0') {\n          return marker.data && eval(\"marker.data.\".concat(self.config.typeField)) && eval(\"marker.data.\".concat(self.config.typeField)) == value;\n        } else {\n          return true;\n        }\n      });\n      self.onChangeMapBoundaries(); // todo: rename\n    }\n  }, {\n    key: \"onChangeAreaFilter\",\n    value: function onChangeAreaFilter(area) {\n      var self = this;\n      self.setSelectedIdea(null);\n      self.setNewIdea(null);\n      self.removeCurrentPolygon();\n      self.setCurrentPolygon(area && area.polygon);\n      self.map.setBoundsAndCenter(area && area.polygon || self.map.markers);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var infoHTML = null; // todo: ik denk dat dit naar infoblock moet\n\n      switch (this.state.status) {\n        case 'idea-details':\n          var config = {\n            // TODO: niet bij elke render\n            titleField: this.config.titleField,\n            summaryField: this.config.summaryField,\n            typeField: this.config.typeField,\n            areaField: this.config.areaField,\n            userJWT: this.config.userJWT\n          };\n          infoHTML = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_idea_details_jsx__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n            id: this.divId + '-infoblock',\n            config: config,\n            idea: this.state.currentIdea,\n            key: \"dfwk fgdfsbbfgd hdg\",\n            className: \"openstad-component-ideas-on-map-info\",\n            ref: function ref(el) {\n              return _this2.ideadetails = el;\n            }\n          });\n          break;\n\n        case 'idea-form':\n          infoHTML = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_idea_form_jsx__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n            id: this.divId + '-infoblock',\n            config: _objectSpread({}, this.config, {\n              formfields: _objectSpread({}, this.state.editIdea)\n            }),\n            className: \"openstad-component-ideas-on-map-info\",\n            ref: function ref(el) {\n              return _this2.ideaform = el;\n            }\n          });\n          break;\n\n        default:\n          infoHTML = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_info_block_jsx__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n            id: this.divId + '-infoblock',\n            config: {\n              title: this.config.title,\n              titleField: this.config.titleField,\n              summaryField: this.config.summaryField,\n              types: this.config.types\n            },\n            className: \"openstad-component-ideas-on-map-info\",\n            ref: function ref(el) {\n              return _this2.infoblock = el;\n            }\n          });\n          break;\n      }\n\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        id: this.divId,\n        className: \"openstad-component-ideas-on-map openstad-component-ideas-on-map-\".concat(this.state.status),\n        ref: function ref(el) {\n          return _this2.instance = el;\n        }\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_filterbar_jsx__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        id: this.divId + '-filterbar',\n        config: {\n          types: this.config.types,\n          areas: this.config.areas,\n          doSearchFunction: this.config.doSearchFunction,\n          title: this.config.title\n        },\n        className: \"openstad-component-ideas-on-map-filterbar\",\n        ref: function ref(el) {\n          return _this2.filterbar = el;\n        }\n      }), infoHTML, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_map_jsx__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n        id: this.divId + '-map',\n        className: \"openstad-component-ideas-on-map-map\",\n        config: _objectSpread({}, this.config.map, {\n          types: this.config.types,\n          typeField: this.config.typeField\n        }),\n        ref: function ref(el) {\n          return _this2.map = el;\n        }\n      }));\n    }\n  }]);\n\n  return OpenStadComponentIdeasOnMap;\n}(openstad_component_src_index_jsx__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/component/ideas-on-map.jsx\n");

/***/ }),

/***/ "./src/component/info-block.jsx":
/*!**************************************!*\
  !*** ./src/component/info-block.jsx ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return InfoBlock; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ideas_list_jsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ideas-list.jsx */ \"./src/component/ideas-list.jsx\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n // TODO: na verandering op verandering denk ik dat dit een status moet gaan krijgen ipv. de new en selected versie.\n// TODO: setNewIdea refactoren naar setSelectedLocation\n// TODO: events worden via document gestuurd; dat kan ook intern\n\n'use strict';\n\nvar InfoBlock =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(InfoBlock, _React$Component);\n\n  function InfoBlock(props) {\n    var _this;\n\n    _classCallCheck(this, InfoBlock);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InfoBlock).call(this, props)); // config\n\n    var defaultConfig = {};\n    _this.config = Object.assign(defaultConfig, _this.props.config || {});\n    _this.state = {\n      currentSortOrder: _this.config.defaultSortOrder,\n      selectedIdea: undefined,\n      newIdea: undefined,\n      ideas: []\n    };\n    return _this;\n  }\n\n  _createClass(InfoBlock, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount(prevProps, prevState) {\n      this.eventTarget = this.config.eventTarget || this.instance;\n    }\n  }, {\n    key: \"updateIdeas\",\n    value: function updateIdeas(_ref) {\n      var _ref$ideas = _ref.ideas,\n          ideas = _ref$ideas === void 0 ? this.state.ideas : _ref$ideas,\n          _ref$sortOrder = _ref.sortOrder,\n          sortOrder = _ref$sortOrder === void 0 ? this.state.currentSortOrder : _ref$sortOrder,\n          showSortButton = _ref.showSortButton,\n          _ref$center = _ref.center,\n          center = _ref$center === void 0 ? {\n        lat: 52.37104644463586,\n        lng: 4.900402911007405\n      } : _ref$center,\n          maxLength = _ref.maxLength;\n      this.list.updateIdeas({\n        ideas: ideas,\n        sortOrder: sortOrder,\n        showSortButton: showSortButton,\n        center: center,\n        maxLength: maxLength\n      });\n    }\n  }, {\n    key: \"setSelectedIdea\",\n    value: function setSelectedIdea(idea) {\n      this.setState(_objectSpread({}, this.state, {\n        selectedIdea: idea,\n        newIdea: null\n      }));\n    }\n  }, {\n    key: \"setNewIdea\",\n    value: function setNewIdea(idea) {\n      this.setState(_objectSpread({}, this.state, {\n        newIdea: idea,\n        selectedIdea: null\n      }));\n    }\n  }, {\n    key: \"dispatchUpdateSelectedIdea\",\n    value: function dispatchUpdateSelectedIdea(e, idea) {\n      e.stopPropagation();\n      var event = new CustomEvent('updateSelectedIdea', {\n        detail: {\n          idea: idea\n        }\n      });\n      document.dispatchEvent(event);\n    }\n  }, {\n    key: \"dispatchUpdateNewIdea\",\n    value: function dispatchUpdateNewIdea(e, idea) {\n      e.stopPropagation();\n      var event = new CustomEvent('updateNewIdea', {\n        detail: {\n          idea: idea\n        }\n      });\n      document.dispatchEvent(event);\n    }\n  }, {\n    key: \"dispatchSelectedIdeaClick\",\n    value: function dispatchSelectedIdeaClick(e, idea) {\n      e.stopPropagation();\n      var event = new CustomEvent('selectedIdeaClick', {\n        detail: {\n          idea: idea\n        }\n      });\n      document.dispatchEvent(event);\n    }\n  }, {\n    key: \"dispatchNewIdeaClick\",\n    value: function dispatchNewIdeaClick(e) {\n      e.stopPropagation();\n      var event = new CustomEvent('newIdeaClick', {\n        detail: {}\n      });\n      document.dispatchEvent(event);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var self = this;\n      var newIdeaHTML = null;\n      var selectedIdeaHTML = null;\n      var title = self.config.title || null; // new idea\n\n      if (self.state.newIdea) {\n        newIdeaHTML = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"openstad-component-info-block-new-idea\"\n        }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"button\", {\n          className: \"openstad-close-button\",\n          onClick: function onClick(event) {\n            return self.dispatchUpdateNewIdea(event, null);\n          },\n          ref: function ref(el) {\n            return self.resetButton = el;\n          }\n        }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"h3\", null, \"Geselecteerd\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"p\", null, \"Een locatie vlakbij\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"h4\", null, self.state.newIdea.address && self.state.newIdea.address._display || 'Geen adres gevonden'), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"p\", null, \"Op deze exacte locatie is nog geen kans of knelpunt ingediend. Wellicht heeft een medebewoner wel al in de buurt een melding gedaan waar u aan wilt bijdragen, dit kunt u bekijken in de lijst hieronder. Wilt u een nieuw kans of knelpunt toevoegen? Klik dan hier:\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"openstad-align-right-container\"\n        }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"button\", {\n          className: \"openstad-button openstad-button-blue\",\n          onClick: function onClick(event) {\n            return self.dispatchNewIdeaClick(event);\n          },\n          ref: function ref(el) {\n            return self.newIdeaButton = el;\n          }\n        }, \"Nieuwe kans of knelpunt toevoegen\")));\n        title += ' in de buurt';\n      } // selected idea\n\n\n      if (self.state.selectedIdea) {\n        var idea = self.state.selectedIdea;\n        var tmp = self.config.types.find(function (entry) {\n          return entry.name == idea.extraData.thema;\n        });\n        var typeColor = tmp && tmp.color || 'black';\n        selectedIdeaHTML = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"openstad-component-info-block-selected-idea\",\n          onClick: function onClick(event) {\n            return self.dispatchSelectedIdeaClick(event);\n          }\n        }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"button\", {\n          className: \"openstad-close-button\",\n          onClick: function onClick(event) {\n            return self.dispatchUpdateSelectedIdea(event, null);\n          },\n          ref: function ref(el) {\n            return self.resetButton = el;\n          }\n        }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"h3\", null, \"Geselecteerd\"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"openstad-component-info-block-selected-idea-idea\"\n        }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"openstad-component-image\",\n          style: {\n            backgroundImage: \"url(\".concat(idea.image, \")\")\n          }\n        }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"openstad-component-content\"\n        }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"h4\", null, eval(\"idea.\".concat(self.config.titleField))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"openstad-summary\"\n        }, eval(\"idea.\".concat(self.config.summaryField))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"openstad-stats\"\n        }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"openstad-likes\"\n        }, idea.yes || 0), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"openstad-reactions\"\n        }, idea.argCount || 0), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"openstad-type\",\n          style: {\n            borderColor: typeColor\n          }\n        }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"openstad-type-content\"\n        })))), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"openstad-clear-both\"\n        })));\n        title += ' in de buurt';\n      } // TODO: kan de key weg uit IdeasList\n\n\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        id: self.id,\n        className: self.props.className || 'openstad-component-info-block',\n        ref: function ref(el) {\n          return self.instance = el;\n        }\n      }, newIdeaHTML, selectedIdeaHTML, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_ideas_list_jsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n        config: _objectSpread({}, self.config, {\n          onIdeaClick: function onIdeaClick(event, idea) {\n            return self.dispatchUpdateSelectedIdea(event, idea);\n          }\n        }),\n        ideas: self.state.ideas,\n        title: title,\n        key: \"openstad-component-ideas-list-321\",\n        ref: function ref(el) {\n          return self.list = el;\n        }\n      }));\n    }\n  }]);\n\n  return InfoBlock;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/component/info-block.jsx\n");

/***/ }),

/***/ "./src/component/map.jsx":
/*!*******************************!*\
  !*** ./src/component/map.jsx ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Map; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var openstad_component_nlmap_src_component_map_jsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! openstad-component-nlmap/src/component/map.jsx */ \"../openstad-component-nlmap/src/component/map.jsx\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n'use strict';\n\nvar Map =\n/*#__PURE__*/\nfunction (_OpenStadComponentNLM) {\n  _inherits(Map, _OpenStadComponentNLM);\n\n  function Map(props) {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Map).call(this, props)); // config\n\n    _this.defaultConfig = {\n      editMarker: undefined,\n      currentPolygon: undefined\n    };\n    _this.config = Object.assign(_this.defaultConfig, _this.config || {}); // defaults\n    // this.config.onMapClick = this.config.onMapClick || this.onMapClick.bind(this);\n    // this.config.onMarkerClick = this.config.onMarkerClick || this.onMarkerClick.bind(this);\n\n    _this.config.clustering.iconCreateFunction = _this.config.clustering.createClusterIcon || _this.createClusterIcon.bind(_assertThisInitialized(_this));\n    _this.config.clustering.showCoverageOnHover = typeof _this.config.showCoverageOnHover != 'undefined' ? _this.config.showCoverageOnHover : false;\n    _this.config.clustering.onClusterAnimationEnd = _this.config.clustering.onClusterAnimationEnd || _this.onClusterAnimationEnd.bind(_assertThisInitialized(_this));\n    _this.config.clustering.maxClusterRadius = 30; // default is 80\n\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"createClusterIcon\",\n    value: function createClusterIcon(cluster) {\n      var self = this;\n      var count = cluster.getChildCount();\n\n      if (self.config.typeField && self.config.types && self.config.types.length) {\n        // todo: configurable\n        var _count = cluster.getChildCount();\n\n        var markers = cluster.getAllChildMarkers();\n        var colors = {};\n        var total = markers.length;\n        var isFaded = false;\n        markers.forEach(function (entry) {\n          var type = entry.data && eval(\"entry.data.\".concat(self.config.typeField));\n          var tmp = self.config.types.find(function (entry) {\n            return entry.name == type;\n          });\n          var color = tmp && tmp.color || 'black';\n          if (type == undefined) type = 'undef';\n          if (!colors[color]) colors[color] = 0;\n          colors[color]++;\n          if (entry.data && entry.data.isFaded) isFaded = true;\n        });\n        var html = '<svg viewBox=\"0 0 36 36\"><circle cx=\"18\" cy=\"18\" r=\"14\" fill=\"white\"/>';\n        var soFar = 0;\n        Object.keys(colors).forEach(function (key) {\n          var myColor = key;\n          var perc = 100 * colors[key] / total;\n          var angle = soFar / 100 * 360;\n          html += \"  <path\\n             d=\\\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\\\"\\n             fill=\\\"none\\\"\\n             transform=\\\"rotate(\".concat(angle, \", 18, 18)\\\"\\n             stroke=\\\"\").concat(myColor, \"\\\"\\n             stroke-width=\\\"4\\\"\\n             stroke-dasharray=\\\"\").concat(perc, \", 100\\\"\\n             />\");\n          soFar = soFar + perc;\n        });\n        html += '<text x=\"18\" y=\"21\" text-anchor=\"middle\" class=\"openstad-component-ideas-on-map-icon openstad-component-ideas-on-map-icon-text\">' + _count + '</text></svg>';\n        return L.divIcon({\n          html: html,\n          className: 'openstad-component-ideas-on-map-icon-cluster',\n          iconSize: L.point(36, 36),\n          iconAnchor: [18, 18],\n          isFaded: isFaded\n        });\n      } else {\n        return L.divIcon({\n          html: count,\n          className: 'openstad-component-ideas-on-map-icon-cluster',\n          iconSize: L.point(20, 20),\n          iconAnchor: [20, 10]\n        });\n      }\n    }\n  }, {\n    key: \"fadeMarkers\",\n    value: function fadeMarkers(_ref) {\n      var exception = _ref.exception;\n      var self = this;\n      self.markers.forEach(function (marker) {\n        if (!(exception && marker.data && marker.data.id && exception.id == marker.data.id)) {\n          if (marker.data) marker.data.isFaded = true;\n          var visibleParent = self.markerClusterGroup.getVisibleParent(marker);\n          var ignore = visibleParent && visibleParent.getAllChildMarkers && visibleParent.getAllChildMarkers().find(function (m) {\n            return m.data && m.data.isFaded === false;\n          });\n\n          if (!ignore && visibleParent) {\n            visibleParent.setOpacity(0.3);\n          }\n        }\n      });\n    } // fix for https://github.com/Leaflet/Leaflet.markercluster/issues/177\n\n  }, {\n    key: \"updateFading\",\n    value: function updateFading() {\n      var self = this;\n      self.markers.forEach(function (marker) {\n        var visibleParent = self.markerClusterGroup.getVisibleParent(marker);\n\n        if (visibleParent) {\n          var ignore = visibleParent && visibleParent.getAllChildMarkers && visibleParent.getAllChildMarkers().find(function (m) {\n            return m.data && m.data.isFaded === false;\n          });\n          visibleParent.setOpacity(!ignore && marker.data && marker.data.isFaded ? 0.3 : 1);\n        }\n      });\n    }\n  }, {\n    key: \"unfadeAllMarkers\",\n    value: function unfadeAllMarkers() {\n      var self = this; // markers\n\n      self.markers.forEach(function (marker) {\n        if (marker.data) marker.data.isFaded = false;\n        var visibleParent = self.markerClusterGroup.getVisibleParent(marker);\n\n        if (visibleParent) {\n          visibleParent.setOpacity(1);\n        }\n      });\n    }\n  }, {\n    key: \"onClusterAnimationEnd\",\n    value: function onClusterAnimationEnd() {\n      this.updateFading();\n    }\n  }]);\n\n  return Map;\n}(openstad_component_nlmap_src_component_map_jsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/component/map.jsx\n");

/***/ }),

/***/ "./src/component/search.jsx":
/*!**********************************!*\
  !*** ./src/component/search.jsx ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Search; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n'use strict';\n\nvar Search =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Search, _React$Component);\n\n  function Search(props) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Search).call(this, props));\n    var defaultConfig = {};\n    _this.config = Object.assign(defaultConfig, _this.props.config || {});\n    _this.config.doSearchFunction = _this.config.doSearchFunction || _this.doSearchx.bind(_assertThisInitialized(_this));\n    _this.state = {\n      searchValue: '',\n      searchResult: {\n        locations: [],\n        ideas: []\n      },\n      showSuggestions: false\n    };\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount(prevProps, prevState) {}\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(value) {\n      this.setState(_objectSpread({}, this.state, {\n        searchValue: value,\n        showSuggestions: value.length >= 3 ? true : false\n      }));\n\n      if (value.length >= 3) {\n        this.config.doSearchFunction(value, this.updateSearchResult.bind(this));\n      } // dispatch an event\n      //var event = new CustomEvent('typeFilterUpdate', { detail: { value: value } });\n      //this.instance.dispatchEvent(event);\n\n    }\n  }, {\n    key: \"showSuggestions\",\n    value: function showSuggestions() {\n      this.setState({\n        showSuggestions: this.state.searchValue.length >= 3 ? true : false\n      });\n    }\n  }, {\n    key: \"hideSuggestions\",\n    value: function hideSuggestions() {\n      var self = this; // TODO: dit moet anders; het gaat er om dat de onclick op suggesties niet doorkomt omdat hij deze eerst doet\n\n      setTimeout(function () {\n        self.setState({\n          showSuggestions: false\n        });\n      }, 500);\n    }\n  }, {\n    key: \"updateSearchResult\",\n    value: function updateSearchResult(searchValue, searchResult) {\n      // console.log('update', searchValue, searchResult);\n      this.setState(_objectSpread({}, this.state, {\n        searchValue: searchValue,\n        searchResult: searchResult,\n        showSuggestions: searchValue.length >= 3 ? true : false\n      }));\n    }\n  }, {\n    key: \"doSearchx\",\n    value: function doSearchx(value) {\n      console.log('search function not defined');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var self = this;\n      var suggestionsHTML = null;\n\n      if (self.state.showSuggestions) {\n        suggestionsHTML = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"openstad-component-search-suggestions\",\n          ref: function ref(el) {\n            return self.suggestions = el;\n          }\n        }, \"Adressen:\", self.state.searchResult.locations.map(function (result, i) {\n          var text = result.text.replace(new RegExp(self.state.searchValue, 'g'), function ($0) {\n            return '<strong>' + $0 + '</strong>';\n          });\n          return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n            className: \"openstad-component-search-suggestion openstad-component-search-suggestion-idea\",\n            onClick: result.onClick,\n            key: 'search-result-' + i,\n            dangerouslySetInnerHTML: text\n          });\n        }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n          className: \"openstad-component-search-suggestions-hr\"\n        }), this.config.title, \":\", self.state.searchResult.ideas.map(function (result, i) {\n          console.log(\"\".concat(self.state.searchValue));\n          var text = result.text.replace(new RegExp(self.state.searchValue, 'g'), function ($0) {\n            return '<strong>' + $0 + '</strong>';\n          });\n          return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n            className: \"openstad-component-search-suggestion openstad-component-search-suggestion-idea\",\n            onClick: result.onClick,\n            key: 'search-result-' + i,\n            dangerouslySetInnerHTML: {\n              __html: text\n            }\n          });\n        }));\n      }\n\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        id: self.id,\n        className: self.props.className || 'openstad-component-search',\n        ref: function ref(el) {\n          return self.instance = el;\n        }\n      }, suggestionsHTML, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"input\", {\n        type: \"text\",\n        onChange: function onChange() {\n          return self.handleChange(self.inputfield.value);\n        },\n        onBlur: function onBlur() {\n          return self.hideSuggestions();\n        },\n        onFocus: function onFocus() {\n          return self.showSuggestions();\n        },\n        className: \"openstad-default-input openstad-component-search-input\",\n        ref: function ref(el) {\n          return self.inputfield = el;\n        }\n      }));\n    }\n  }]);\n\n  return Search;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50L3NlYXJjaC5qc3g/NjY3YyJdLCJuYW1lcyI6WyJTZWFyY2giLCJwcm9wcyIsImRlZmF1bHRDb25maWciLCJjb25maWciLCJPYmplY3QiLCJhc3NpZ24iLCJkb1NlYXJjaEZ1bmN0aW9uIiwiZG9TZWFyY2h4IiwiYmluZCIsInN0YXRlIiwic2VhcmNoVmFsdWUiLCJzZWFyY2hSZXN1bHQiLCJsb2NhdGlvbnMiLCJpZGVhcyIsInNob3dTdWdnZXN0aW9ucyIsInByZXZQcm9wcyIsInByZXZTdGF0ZSIsInZhbHVlIiwic2V0U3RhdGUiLCJsZW5ndGgiLCJ1cGRhdGVTZWFyY2hSZXN1bHQiLCJzZWxmIiwic2V0VGltZW91dCIsImNvbnNvbGUiLCJsb2ciLCJzdWdnZXN0aW9uc0hUTUwiLCJlbCIsInN1Z2dlc3Rpb25zIiwibWFwIiwicmVzdWx0IiwiaSIsInRleHQiLCJyZXBsYWNlIiwiUmVnRXhwIiwiJDAiLCJvbkNsaWNrIiwidGl0bGUiLCJfX2h0bWwiLCJpZCIsImNsYXNzTmFtZSIsImluc3RhbmNlIiwiaGFuZGxlQ2hhbmdlIiwiaW5wdXRmaWVsZCIsImhpZGVTdWdnZXN0aW9ucyIsIlJlYWN0IiwiQ29tcG9uZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFFQTs7SUFFcUJBLE07Ozs7O0FBRW5CLGtCQUFZQyxLQUFaLEVBQW1CO0FBQUE7O0FBQUE7O0FBRWpCLGdGQUFNQSxLQUFOO0FBRUYsUUFBSUMsYUFBYSxHQUFHLEVBQXBCO0FBRUEsVUFBS0MsTUFBTCxHQUFjQyxNQUFNLENBQUNDLE1BQVAsQ0FBY0gsYUFBZCxFQUE2QixNQUFLRCxLQUFMLENBQVdFLE1BQVgsSUFBcUIsRUFBbEQsQ0FBZDtBQUVFLFVBQUtBLE1BQUwsQ0FBWUcsZ0JBQVosR0FBK0IsTUFBS0gsTUFBTCxDQUFZRyxnQkFBWixJQUFnQyxNQUFLQyxTQUFMLENBQWVDLElBQWYsK0JBQS9E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LGlCQUFTLEVBQUMsd0RBQXRLO0FBQStOLFdBQUcsRUFBRSxhQUFBWSxFQUFFO0FBQUEsaUJBQUtMLElBQUksQ0FBQ3FCLFVBQUwsR0FBa0JoQixFQUF2QjtBQUFBO0FBQXRPLFFBSEQsQ0FEQztBQVNEOzs7O0VBOUZpQ2tCLDRDQUFLLENBQUNDLFMiLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50L3NlYXJjaC5qc3guanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG4ndXNlIHN0cmljdCc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlYXJjaCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG5cbiAgY29uc3RydWN0b3IocHJvcHMpIHtcblxuICAgIHN1cGVyKHByb3BzKTtcblxuXHRcdGxldCBkZWZhdWx0Q29uZmlnID0ge1xuXHRcdH07XG5cdFx0dGhpcy5jb25maWcgPSBPYmplY3QuYXNzaWduKGRlZmF1bHRDb25maWcsIHRoaXMucHJvcHMuY29uZmlnIHx8IHt9KVxuXG4gICAgdGhpcy5jb25maWcuZG9TZWFyY2hGdW5jdGlvbiA9IHRoaXMuY29uZmlnLmRvU2VhcmNoRnVuY3Rpb24gfHwgdGhpcy5kb1NlYXJjaHguYmluZCh0aGlzKTtcblxuXHRcdFxuICAgIHRoaXMuc3RhdGUgPSB7XG5cdFx0XHRzZWFyY2hWYWx1ZTogJycsXG5cdFx0XHRzZWFyY2hSZXN1bHQ6IHsgbG9jYXRpb25zOiBbXSwgaWRlYXM6IFtdIH0sXG5cdFx0XHRzaG93U3VnZ2VzdGlvbnM6IGZhbHNlLFxuICAgIH1cblxuICB9XG5cblx0Y29tcG9uZW50RGlkTW91bnQocHJldlByb3BzLCBwcmV2U3RhdGUpIHtcblx0fVxuXG4gIGhhbmRsZUNoYW5nZSh2YWx1ZSkge1xuXG4gICAgdGhpcy5zZXRTdGF0ZSh7XG5cdFx0XHQuLi50aGlzLnN0YXRlLFxuXHRcdFx0c2VhcmNoVmFsdWU6IHZhbHVlLFxuXHRcdFx0c2hvd1N1Z2dlc3Rpb25zOiB2YWx1ZS5sZW5ndGggPj0zID8gdHJ1ZSA6IGZhbHNlLFxuXHRcdH0pO1xuXG5cdFx0aWYgKHZhbHVlLmxlbmd0aCA+PTMpIHtcblx0XHRcdHRoaXMuY29uZmlnLmRvU2VhcmNoRnVuY3Rpb24odmFsdWUsIHRoaXMudXBkYXRlU2VhcmNoUmVzdWx0LmJpbmQodGhpcykpO1xuXHRcdH1cblxuXHRcdC8vIGRpc3BhdGNoIGFuIGV2ZW50XG5cdFx0Ly92YXIgZXZlbnQgPSBuZXcgQ3VzdG9tRXZlbnQoJ3R5cGVGaWx0ZXJVcGRhdGUnLCB7IGRldGFpbDogeyB2YWx1ZTogdmFsdWUgfSB9KTtcblx0XHQvL3RoaXMuaW5zdGFuY2UuZGlzcGF0Y2hFdmVudChldmVudCk7XG5cbiAgfVxuXG5cdHNob3dTdWdnZXN0aW9ucygpIHtcbiAgICB0aGlzLnNldFN0YXRlKHsgc2hvd1N1Z2dlc3Rpb25zOiB0aGlzLnN0YXRlLnNlYXJjaFZhbHVlLmxlbmd0aCA+PSAzID8gdHJ1ZSA6IGZhbHNlIH0pO1xuXHR9XG5cblx0aGlkZVN1Z2dlc3Rpb25zKCkge1xuXHRcdGxldCBzZWxmID0gdGhpcztcblx0XHQvLyBUT0RPOiBkaXQgbW9ldCBhbmRlcnM7IGhldCBnYWF0IGVyIG9tIGRhdCBkZSBvbmNsaWNrIG9wIHN1Z2dlc3RpZXMgbmlldCBkb29ya29tdCBvbWRhdCBoaWogZGV6ZSBlZXJzdCBkb2V0XG5cdFx0c2V0VGltZW91dChmdW5jdGlvbigpe3NlbGYuc2V0U3RhdGUoeyBzaG93U3VnZ2VzdGlvbnM6IGZhbHNlIH0pO30sIDUwMCk7XG5cdH1cblxuXHR1cGRhdGVTZWFyY2hSZXN1bHQoc2VhcmNoVmFsdWUsIHNlYXJjaFJlc3VsdCkge1xuXHRcdC8vIGNvbnNvbGUubG9nKCd1cGRhdGUnLCBzZWFyY2hWYWx1ZSwgc2VhcmNoUmVzdWx0KTtcbiAgICB0aGlzLnNldFN0YXRlKHsuLi50aGlzLnN0YXRlLCBzZWFyY2hWYWx1ZSwgc2VhcmNoUmVzdWx0LCBzaG93U3VnZ2VzdGlvbnM6IHNlYXJjaFZhbHVlLmxlbmd0aCA+PSAzID8gdHJ1ZSA6IGZhbHNlIH0pO1xuXHR9XG5cblx0ZG9TZWFyY2h4KHZhbHVlKSB7XG5cdFx0Y29uc29sZS5sb2coJ3NlYXJjaCBmdW5jdGlvbiBub3QgZGVmaW5lZCcpO1xuXHR9XG5cblx0cmVuZGVyKCkge1xuXG4gICAgbGV0IHNlbGYgPSB0aGlzO1xuXG5cdFx0bGV0IHN1Z2dlc3Rpb25zSFRNTCA9IG51bGw7XG5cdFx0aWYgKHNlbGYuc3RhdGUuc2hvd1N1Z2dlc3Rpb25zKSB7XG5cdFx0XHRzdWdnZXN0aW9uc0hUTUwgPSAoXG5cdFx0XHRcdDxkaXYgY2xhc3NOYW1lPVwib3BlbnN0YWQtY29tcG9uZW50LXNlYXJjaC1zdWdnZXN0aW9uc1wiIHJlZj17ZWwgPT4gKHNlbGYuc3VnZ2VzdGlvbnMgPSBlbCl9PlxuXHRcdFx0XHRcdEFkcmVzc2VuOlxuICAgICAgICAgIHsgc2VsZi5zdGF0ZS5zZWFyY2hSZXN1bHQubG9jYXRpb25zLm1hcCgocmVzdWx0LCBpKSA9PiB7XG5cdFx0XHRcdFx0XHRsZXQgdGV4dCA9IHJlc3VsdC50ZXh0LnJlcGxhY2UobmV3IFJlZ0V4cChzZWxmLnN0YXRlLnNlYXJjaFZhbHVlLCAnZycpLCAoJDApID0+ICc8c3Ryb25nPicgKyAkMCArICc8L3N0cm9uZz4nKTtcbiAgICAgICAgICAgIHJldHVybiA8ZGl2IGNsYXNzTmFtZT1cIm9wZW5zdGFkLWNvbXBvbmVudC1zZWFyY2gtc3VnZ2VzdGlvbiBvcGVuc3RhZC1jb21wb25lbnQtc2VhcmNoLXN1Z2dlc3Rpb24taWRlYVwiIG9uQ2xpY2s9eyByZXN1bHQub25DbGljayB9IGtleT17J3NlYXJjaC1yZXN1bHQtJyArIGl9IGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt0ZXh0fT48L2Rpdj47XG4gICAgICAgICAgfSl9XG5cdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJvcGVuc3RhZC1jb21wb25lbnQtc2VhcmNoLXN1Z2dlc3Rpb25zLWhyXCIvPlxuXHRcdFx0XHRcdHsgdGhpcy5jb25maWcudGl0bGUgfTpcbiAgICAgICAgICB7IHNlbGYuc3RhdGUuc2VhcmNoUmVzdWx0LmlkZWFzLm1hcCgocmVzdWx0LCBpKSA9PiB7XG5cdFx0XHRcdFx0XHRjb25zb2xlLmxvZyhgJHtzZWxmLnN0YXRlLnNlYXJjaFZhbHVlfWApO1xuXHRcdFx0XHRcdFx0bGV0IHRleHQgPSByZXN1bHQudGV4dC5yZXBsYWNlKG5ldyBSZWdFeHAoc2VsZi5zdGF0ZS5zZWFyY2hWYWx1ZSwgJ2cnKSwgKCQwKSA9PiAnPHN0cm9uZz4nICsgJDAgKyAnPC9zdHJvbmc+Jyk7XG4gICAgICAgICAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJvcGVuc3RhZC1jb21wb25lbnQtc2VhcmNoLXN1Z2dlc3Rpb24gb3BlbnN0YWQtY29tcG9uZW50LXNlYXJjaC1zdWdnZXN0aW9uLWlkZWFcIiBvbkNsaWNrPXsgcmVzdWx0Lm9uQ2xpY2sgfSBrZXk9eydzZWFyY2gtcmVzdWx0LScgKyBpfSBkYW5nZXJvdXNseVNldElubmVySFRNTD17e19faHRtbDogdGV4dH19PjwvZGl2PjtcbiAgICAgICAgICB9KX1cblx0XHRcdFx0PC9kaXY+XG5cdFx0XHQpO1xuXHRcdH1cblx0XHRcbiAgICByZXR1cm4gKFxuXHRcdFx0PGRpdiBpZD17c2VsZi5pZH0gY2xhc3NOYW1lPXtzZWxmLnByb3BzLmNsYXNzTmFtZSB8fCAnb3BlbnN0YWQtY29tcG9uZW50LXNlYXJjaCd9IHJlZj17ZWwgPT4gKHNlbGYuaW5zdGFuY2UgPSBlbCl9PlxuXG5cdFx0XHRcdHtzdWdnZXN0aW9uc0hUTUx9XG5cdFx0XHRcdDxpbnB1dCB0eXBlPVwidGV4dFwiIG9uQ2hhbmdlPXsoKSA9PiBzZWxmLmhhbmRsZUNoYW5nZSggc2VsZi5pbnB1dGZpZWxkLnZhbHVlICl9IG9uQmx1cj17KCkgPT4gc2VsZi5oaWRlU3VnZ2VzdGlvbnMoKX0gb25Gb2N1cz17KCkgPT4gc2VsZi5zaG93U3VnZ2VzdGlvbnMoKX0gY2xhc3NOYW1lPVwib3BlbnN0YWQtZGVmYXVsdC1pbnB1dCBvcGVuc3RhZC1jb21wb25lbnQtc2VhcmNoLWlucHV0XCIgcmVmPXtlbCA9PiAoc2VsZi5pbnB1dGZpZWxkID0gZWwpfS8+XG5cblx0XHRcdDwvZGl2PlxuICAgICk7XG5cbiAgfVxuXG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/component/search.jsx\n");

/***/ }),

/***/ "./src/css/default.less":
/*!******************************!*\
  !*** ./src/css/default.less ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY3NzL2RlZmF1bHQubGVzcz8yMjE1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6Ii4vc3JjL2Nzcy9kZWZhdWx0Lmxlc3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/css/default.less\n");

/***/ }),

/***/ "./src/index.jsx":
/*!***********************!*\
  !*** ./src/index.jsx ***!
  \***********************/
/*! exports provided: OpenStadComponentIdeasOnMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"react-dom\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _css_default_less__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./css/default.less */ \"./src/css/default.less\");\n/* harmony import */ var _css_default_less__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_css_default_less__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _component_ideas_on_map_jsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./component/ideas-on-map.jsx */ \"./src/component/ideas-on-map.jsx\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"OpenStadComponentIdeasOnMap\", function() { return _component_ideas_on_map_jsx__WEBPACK_IMPORTED_MODULE_3__[\"default\"]; });\n\n\n\n\n\n\nvar elements = document.querySelectorAll('.openstad-component-ideas-on-map');\nelements.forEach(function (elem) {\n  var attributes = elem.attributes;\n  react_dom__WEBPACK_IMPORTED_MODULE_1___default.a.render(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_component_ideas_on_map_jsx__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    attributes: attributes\n  }), elem);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanN4P2VkMTIiXSwibmFtZXMiOlsiZWxlbWVudHMiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwiZWxlbSIsImF0dHJpYnV0ZXMiLCJSZWFjdERPTSIsInJlbmRlciJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBRUEsSUFBSUEsUUFBUSxHQUFHQyxRQUFRLENBQUNDLGdCQUFULENBQTBCLGtDQUExQixDQUFmO0FBQ0FGLFFBQVEsQ0FBQ0csT0FBVCxDQUFpQixVQUFDQyxJQUFELEVBQVU7QUFDekIsTUFBSUMsVUFBVSxHQUFHRCxJQUFJLENBQUNDLFVBQXRCO0FBQ0RDLGtEQUFRLENBQUNDLE1BQVQsQ0FBaUIsMkRBQUMsbUVBQUQ7QUFBNkIsY0FBVSxFQUFFRjtBQUF6QyxJQUFqQixFQUF5RUQsSUFBekU7QUFDQSxDQUhEIiwiZmlsZSI6Ii4vc3JjL2luZGV4LmpzeC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJztcblxuaW1wb3J0IFwiLi9jc3MvZGVmYXVsdC5sZXNzXCI7XG5cbmltcG9ydCBPcGVuU3RhZENvbXBvbmVudElkZWFzT25NYXAgZnJvbSAnLi9jb21wb25lbnQvaWRlYXMtb24tbWFwLmpzeCc7XG5leHBvcnQge09wZW5TdGFkQ29tcG9uZW50SWRlYXNPbk1hcH1cblxubGV0IGVsZW1lbnRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLm9wZW5zdGFkLWNvbXBvbmVudC1pZGVhcy1vbi1tYXAnKTtcbmVsZW1lbnRzLmZvckVhY2goKGVsZW0pID0+IHtcbiAgbGV0IGF0dHJpYnV0ZXMgPSBlbGVtLmF0dHJpYnV0ZXM7XG5cdFJlYWN0RE9NLnJlbmRlciggPE9wZW5TdGFkQ29tcG9uZW50SWRlYXNPbk1hcCBhdHRyaWJ1dGVzPXthdHRyaWJ1dGVzfS8+LCBlbGVtKVxufSlcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.jsx\n");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "React" ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = React;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJSZWFjdFwiP2M0ODEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoicmVhY3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFJlYWN0OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///react\n");

/***/ }),

/***/ "react-dom":
/*!***************************!*\
  !*** external "ReactDOM" ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = ReactDOM;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJSZWFjdERPTVwiPzRiMmQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoicmVhY3QtZG9tLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBSZWFjdERPTTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///react-dom\n");

/***/ })

/******/ });